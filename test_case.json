[
    {
        "ID": "TC001",
        "Title": "Valid Username and Password",
        "Test Data": {
          "Username": "user@example.com",
          "Password": "password123"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Enter valid username  2. Enter valid password  3. Click 'Login' button",
        "Expected Result": "User should be logged in successfully"
      },
      {
        "ID": "TC002",
        "Title": "Invalid Username",
        "Test Data": {
          "Username": "invaliduser",
          "Password": "password123"
        },
        "Preconditions": "User account does not exist",
        "Steps to Replicate": "1. Enter invalid username  2. Enter valid password  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating invalid username"
      },
      {
        "ID": "TC003",
        "Title": "Invalid Password",
        "Test Data": {
          "Username": "user@example.com",
          "Password": "invalidpassword"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Enter valid username  2. Enter invalid password  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating invalid password"
      },
      {
        "ID": "TC004",
        "Title": "Empty Username",
        "Test Data": {
          "Username": "",
          "Password": "password123"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Leave username field empty  2. Enter valid password  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating empty username field"
      },
      {
        "ID": "TC005",
        "Title": "Empty Password",
        "Test Data": {
          "Username": "user@example.com",
          "Password": ""
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Enter valid username  2. Leave password field empty  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating empty password field"
      },
      {
        "ID": "TC006",
        "Title": "Invalid Username and Password",
        "Test Data": {
          "Username": "invaliduser",
          "Password": "invalidpassword"
        },
        "Preconditions": "User account does not exist",
        "Steps to Replicate": "1. Enter invalid username  2. Enter invalid password  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating invalid username and password"
      },
      {
        "ID": "TC007",
        "Title": "Locked Account",
        "Test Data": {
          "Username": "lockeduser@example.com",
          "Password": "password123"
        },
        "Preconditions": "User account is locked",
        "Steps to Replicate": "1. Enter locked username  2. Enter valid password  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating locked account"
      },
      {
        "ID": "TC008",
        "Title": "Disabled Account",
        "Test Data": {
          "Username": "disableduser@example.com",
          "Password": "password123"
        },
        "Preconditions": "User account is disabled",
        "Steps to Replicate": "1. Enter disabled username  2. Enter valid password  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating disabled account"
      },
      {
        "ID": "TC009",
        "Title": "Expired Password",
        "Test Data": {
          "Username": "user@example.com",
          "Password": "expiredpassword"
        },
        "Preconditions": "User password has expired",
        "Steps to Replicate": "1. Enter valid username  2. Enter expired password  3. Click 'Login' button",
        "Expected Result": "Error message should be displayed indicating expired password"
      },
      {
        "ID": "TC010",
        "Title": "Password Change Required",
        "Test Data": {
          "Username": "user@example.com",
          "Password": "temporarypassword"
        },
        "Preconditions": "User must change password",
        "Steps to Replicate": "1. Enter valid username  2. Enter temporary password  3. Click 'Login' button",
        "Expected Result": "User should be prompted to change password"
      },
      {
        "ID": "TC011",
        "Title": "Case Sensitivity in Username",
        "Test Data": {
          "Username": "User@example.com",
          "Password": "password123"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Enter username with different case  2. Enter valid password  3. Click 'Login' button",
        "Expected Result": "System should recognize username irrespective of case sensitivity"
      },
      {
        "ID": "TC012",
        "Title": "Case Sensitivity in Password",
        "Test Data": {
          "Username": "user@example.com",
          "Password": "Password123"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Enter valid username  2. Enter password with different case  3. Click 'Login' button",
        "Expected Result": "System should recognize password irrespective of case sensitivity"
      },
      {
        "ID": "TC013",
        "Title": "Username with Leading or Trailing Spaces",
        "Test Data": {
          "Username": "  user@example.com  ",
          "Password": "password123"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Enter username with leading or trailing spaces  2. Enter valid password  3. Click 'Login' button",
        "Expected Result": "System should trim leading and trailing spaces in username"
      },
      {
        "ID": "TC014",
        "Title": "Password with Leading or Trailing Spaces",
        "Test Data": {
          "Username": "user@example.com",
          "Password": "  password123  "
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Enter valid username  2. Enter password with leading or trailing spaces  3. Click 'Login' button",
        "Expected Result": "System should trim leading and trailing spaces in password"
      },
      {
        "ID": "TC015",
        "Title": "Valid Signup",
        "Test Data": {
          "Username": "newuser@example.com",
          "Password": "password123",
          "ConfirmPassword": "password123"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter valid email address  2. Enter valid password  3. Confirm password  4. Click 'Sign Up' button",
        "Expected Result": "User should be signed up successfully"
      },
      {
        "ID": "TC016",
        "Title": "Invalid Email Format",
        "Test Data": {
          "Username": "invalidemail",
          "Password": "password123",
          "ConfirmPassword": "password123"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter invalid email address  2. Enter valid password  3. Confirm password  4. Click 'Sign Up' button",
        "Expected Result": "Error message should be displayed indicating invalid email format"
      },
      {
        "ID": "TC017",
        "Title": "Weak Password",
        "Test Data": {
          "Username": "newuser@example.com",
          "Password": "weak",
          "ConfirmPassword": "weak"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter valid email address  2. Enter weak password  3. Confirm weak password  4. Click 'Sign Up' button",
        "Expected Result": "Error message should be displayed indicating weak password"
      },
      {
        "ID": "TC018",
        "Title": "Mismatched Passwords",
        "Test Data": {
          "Username": "newuser@example.com",
          "Password": "password123",
          "ConfirmPassword": "differentpassword"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter valid email address  2. Enter valid password  3. Enter different confirmation password  4. Click 'Sign Up' button",
        "Expected Result": "Error message should be displayed indicating mismatched passwords"
      },
      {
        "ID": "TC019",
        "Title": "Empty Email",
        "Test Data": {
          "Username": "",
          "Password": "password123",
          "ConfirmPassword": "password123"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Leave email field empty  2. Enter valid password  3. Confirm password  4. Click 'Sign Up' button",
        "Expected Result": "Error message should be displayed indicating empty email field"
      },
      {
        "ID": "TC020",
        "Title": "Empty Password",
        "Test Data": {
          "Username": "newuser@example.com",
          "Password": "",
          "ConfirmPassword": ""
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter valid email address  2. Leave password field empty  3. Leave confirm password field empty  4. Click 'Sign Up' button",
        "Expected Result": "Error message should be displayed indicating empty password field"
      },
      {
        "ID": "TC021",
        "Title": "Existing Email",
        "Test Data": {
          "Username": "existinguser@example.com",
          "Password": "password123",
          "ConfirmPassword": "password123"
        },
        "Preconditions": "Existing user with the same email",
        "Steps to Replicate": "1. Enter existing email address  2. Enter valid password  3. Confirm password  4. Click 'Sign Up' button",
        "Expected Result": "Error message should be displayed indicating existing email address"
      },
      {
        "ID": "TC022",
        "Title": "Email Case Sensitivity",
        "Test Data": {
          "Username": "NewUser@example.com",
          "Password": "password123",
          "ConfirmPassword": "password123"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter email address with different case  2. Enter valid password  3. Confirm password  4. Click 'Sign Up' button",
        "Expected Result": "System should recognize email address irrespective of case sensitivity"
      },
      {
        "ID": "TC023",
        "Title": "Email with Leading or Trailing Spaces",
        "Test Data": {
          "Username": "  newuser@example.com  ",
          "Password": "password123",
          "ConfirmPassword": "password123"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter email address with leading or trailing spaces  2. Enter valid password  3. Confirm password  4. Click 'Sign Up' button",
        "Expected Result": "System should trim leading and trailing spaces in email address"
      },
      {
        "ID": "TC024",
        "Title": "SQL Injection Attack",
        "Test Data": {
          "Username": "newuser@example.com'; DROP TABLE Users;",
          "Password": "password123",
          "ConfirmPassword": "password123"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter email address with SQL injection attack  2. Enter valid password  3. Confirm password  4. Click 'Sign Up' button",
        "Expected Result": "System should prevent SQL injection attack"
      },
      {
        "ID": "TC025",
        "Title": "Valid Password Change",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "newpassword123",
          "ConfirmNewPassword": "newpassword123"
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Enter new password  3. Confirm new password  4. Click 'Change Password' button",
        "Expected Result": "Password should be changed successfully"
      },
      {
        "ID": "TC026",
        "Title": "Incorrect Old Password",
        "Test Data": {
          "OldPassword": "incorrectpassword",
          "NewPassword": "newpassword123",
          "ConfirmNewPassword": "newpassword123"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Enter incorrect old password  2. Enter new password  3. Confirm new password  4. Click 'Change Password' button",
        "Expected Result": "Error message should be displayed indicating incorrect old password"
      },
      {
        "ID": "TC027",
        "Title": "Weak New Password",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "weak",
          "ConfirmNewPassword": "weak"
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Enter weak new password  3. Confirm weak new password  4. Click 'Change Password' button",
        "Expected Result": "Error message should be displayed indicating weak new password"
      },
      {
        "ID": "TC028",
        "Title": "Mismatched New Passwords",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "newpassword123",
          "ConfirmNewPassword": "differentpassword"
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Enter new password  3. Enter different confirmation new password  4. Click 'Change Password' button",
        "Expected Result": "Error message should be displayed indicating mismatched new passwords"
      },
      {
        "ID": "TC029",
        "Title": "Empty Old Password",
        "Test Data": {
          "OldPassword": "",
          "NewPassword": "newpassword123",
          "ConfirmNewPassword": "newpassword123"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Leave old password field empty  2. Enter new password  3. Confirm new password  4. Click 'Change Password' button",
        "Expected Result": "Error message should be displayed indicating empty old password field"
      },
      {
        "ID": "TC030",
        "Title": "Empty New Password",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "",
          "ConfirmNewPassword": ""
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Leave new password field empty  3. Leave confirm new password field empty  4. Click 'Change Password' button",
        "Expected Result": "Error message should be displayed indicating empty new password field"
      },
      {
        "ID": "TC031",
        "Title": "SQL Injection Attack",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "newpassword123'; DROP TABLE Users;",
          "ConfirmNewPassword": "newpassword123'; DROP TABLE Users;"
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Enter new password with SQL injection attack  3. Confirm new password with SQL injection attack  4. Click 'Change Password' button",
        "Expected Result": "System should prevent SQL injection attack"
      },
      {
        "ID": "TC032",
        "Title": "Successful Password Change with Weak New Password",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "weak",
          "ConfirmNewPassword": "weak"
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Enter weak new password  3. Confirm weak new password  4. Click 'Change Password' button",
        "Expected Result": "Password should be changed successfully despite being weak"
      },
      {
        "ID": "TC033",
        "Title": "Password Change with Same Old and New Password",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "oldpassword123",
          "ConfirmNewPassword": "oldpassword123"
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Enter old password as new password  3. Confirm old password as new password  4. Click 'Change Password' button",
        "Expected Result": "Error message should be displayed indicating same old and new password"
      },
      {
        "ID": "TC034",
        "Title": "Password Change with Special Characters",
        "Test Data": {
          "OldPassword": "oldpassword123",
          "NewPassword": "new#pass!word123",
          "ConfirmNewPassword": "new#pass!word123"
        },
        "Preconditions": "User logged in and old password known",
        "Steps to Replicate": "1. Enter old password  2. Enter new password with special characters  3. Confirm new password with special characters  4. Click 'Change Password' button",
        "Expected Result": "Password with special characters should be changed successfully"
      },
      {
        "ID": "TC035",
        "Title": "Valid Image Upload",
        "Test Data": {
          "Image": "valid_image.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select a valid image file  3. Click 'Upload' button",
        "Expected Result": "Image should be uploaded successfully"
      },
      {
        "ID": "TC036",
        "Title": "Unsupported Image Format",
        "Test Data": {
          "Image": "unsupported_image.tif"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an unsupported image file format  3. Click 'Upload' button",
        "Expected Result": "Error message should be displayed indicating unsupported image format"
      },
      {
        "ID": "TC037",
        "Title": "Large Image File Size",
        "Test Data": {
          "Image": "large_image.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select a large image file  3. Click 'Upload' button",
        "Expected Result": "Error message should be displayed indicating large image file size"
      },
      {
        "ID": "TC038",
        "Title": "Empty Image",
        "Test Data": {
          "Image": ""
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an empty image file  3. Click 'Upload' button",
        "Expected Result": "Error message should be displayed indicating empty image file"
      },
      {
        "ID": "TC039",
        "Title": "Multiple Image Upload Attempts",
        "Test Data": {
          "Image1": "image1.jpg",
          "Image2": "image2.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select and upload one image  3. Repeat step 1 and 2 for another image",
        "Expected Result": "Only the latest selected image should be uploaded and replace the previous one"
      },
      {
        "ID": "TC040",
        "Title": "Cancel Image Upload",
        "Test Data": {
          "Image": "cancel_image.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file  3. Click 'Cancel' button instead of 'Upload' button",
        "Expected Result": "No changes should occur, the previous profile picture should remain"
      },
      {
        "ID": "TC041",
        "Title": "Upload Profile Picture with Special Characters",
        "Test Data": {
          "Image": "image_with_special_chars!.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file with special characters in the name  3. Click 'Upload' button",
        "Expected Result": "System should handle and upload image file with special characters in the name"
      },
      {
        "ID": "TC042",
        "Title": "Upload Profile Picture with Long File Name",
        "Test Data": {
          "Image": "very_long_image_file_name_that_exceeds_the_maximum_allowed_characters.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file with long file name  3. Click 'Upload' button",
        "Expected Result": "System should handle and upload image file with long file name"
      },
      {
        "ID": "TC043",
        "Title": "Upload Profile Picture with Non-ASCII Characters",
        "Test Data": {
          "Image": "bufferfly.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file with non-ASCII characters in the name  3. Click 'Upload' button",
        "Expected Result": "System should handle and upload image file with non-ASCII characters in the name"
      },
      {
        "ID": "TC044",
        "Title": "Upload Profile Picture with Maximum File Size",
        "Test Data": {
          "Image": "max_size_image.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file with maximum allowed file size  3. Click 'Upload' button",
        "Expected Result": "Image should be uploaded successfully"
      },
      {
        "ID": "TC045",
        "Title": "Upload Profile Picture with Maximum File Size + 1",
        "Test Data": {
          "Image": "exceed_max_size_image.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file exceeding the maximum allowed file size  3. Click 'Upload' button",
        "Expected Result": "Error message should be displayed indicating file size exceeds the limit"
      },
      {
        "ID": "TC046",
        "Title": "Upload Profile Picture with Restricted File Extensions",
        "Test Data": {
          "Image": "restricted_extension.exe"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file with restricted file extension  3. Click 'Upload' button",
        "Expected Result": "Error message should be displayed indicating restricted file extension"
      },
      {
        "ID": "TC047",
        "Title": "Upload Profile Picture with Malicious Content",
        "Test Data": {
          "Image": "malicious_image.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file containing malicious content  3. Click 'Upload' button",
        "Expected Result": "System should prevent upload of image with malicious content"
      },
      {
        "ID": "TC048",
        "Title": "Upload Profile Picture with High Resolution",
        "Test Data": {
          "Image": "high_res_image.jpg"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Click on 'Upload Profile Picture' button  2. Select an image file with high resolution  3. Click 'Upload' button",
        "Expected Result": "System should handle and upload image file with high resolution"
      },
      {
        "ID": "TC049",
        "Title": "Update Email Notification Settings",
        "Test Data": {
          "EmailNotifications": "Enabled"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Toggle 'Email Notifications' to 'Enabled'  3. Click 'Save' button",
        "Expected Result": "Email notification settings should be updated successfully"
      },
      {
        "ID": "TC050",
        "Title": "Update Language Preference",
        "Test Data": {
          "Language": "Spanish"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Select 'Spanish' from language dropdown  3. Click 'Save' button",
        "Expected Result": "Language preference should be updated successfully"
      },
      {
        "ID": "TC051",
        "Title": "Change Timezone",
        "Test Data": {
          "Timezone": "GMT+1"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Select 'GMT+1' from timezone dropdown  3. Click 'Save' button",
        "Expected Result": "Timezone should be updated successfully"
      },
      {
        "ID": "TC052",
        "Title": "Disable Push Notifications",
        "Test Data": {
          "PushNotifications": "Disabled"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Toggle 'Push Notifications' to 'Disabled'  3. Click 'Save' button",
        "Expected Result": "Push notification settings should be updated successfully"
      },
      {
        "ID": "TC053",
        "Title": "Update Privacy Settings",
        "Test Data": {
          "ProfileVisibility": "Private"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Select 'Private' for profile visibility  3. Click 'Save' button",
        "Expected Result": "Privacy settings should be updated successfully"
      },
      {
        "ID": "TC054",
        "Title": "Update Account Recovery Email",
        "Test Data": {
          "RecoveryEmail": "newrecovery@example.com"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Enter new recovery email 'newrecovery@example.com'  3. Click 'Save' button",
        "Expected Result": "Account recovery email should be updated successfully"
      },
      {
        "ID": "TC055",
        "Title": "Change Password",
        "Test Data": {
          "CurrentPassword": "currentpassword123",
          "NewPassword": "newpassword123"
        },
        "Preconditions": "User logged in and current password known",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Enter current password  3. Enter new password  4. Confirm new password  5. Click 'Save' button",
        "Expected Result": "Password should be changed successfully"
      },
      {
        "ID": "TC056",
        "Title": "Update Display Name",
        "Test Data": {
          "DisplayName": "New DisplayName"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Enter new display name 'New DisplayName'  3. Click 'Save' button",
        "Expected Result": "Display name should be updated successfully"
      },
      {
        "ID": "TC057",
        "Title": "Set Two-Factor Authentication",
        "Test Data": {
          "TwoFactorAuth": "Enabled"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Toggle 'Two-Factor Authentication' to 'Enabled'  3. Click 'Save' button",
        "Expected Result": "Two-factor authentication should be enabled successfully"
      },
      {
        "ID": "TC058",
        "Title": "Update Contact Number",
        "Test Data": {
          "ContactNumber": "+1234567890"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Enter new contact number '+1234567890'  3. Click 'Save' button",
        "Expected Result": "Contact number should be updated successfully"
      },
      {
        "ID": "TC059",
        "Title": "Link Social Media Account",
        "Test Data": {
          "SocialMediaAccount": "Facebook"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Click 'Link' button next to 'Facebook'  3. Authorize Facebook account",
        "Expected Result": "Facebook account should be linked successfully"
      },
      {
        "ID": "TC060",
        "Title": "Unlink Social Media Account",
        "Test Data": {
          "SocialMediaAccount": "Twitter"
        },
        "Preconditions": "User logged in and Twitter account linked",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Click 'Unlink' button next to 'Twitter'  3. Confirm unlinking",
        "Expected Result": "Twitter account should be unlinked successfully"
      },
      {
        "ID": "TC061",
        "Title": "Update Theme Preference",
        "Test Data": {
          "Theme": "Dark Mode"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Select 'Dark Mode' from theme options  3. Click 'Save' button",
        "Expected Result": "Theme preference should be updated successfully"
      },
      {
        "ID": "TC062",
        "Title": "Enable Automatic Updates",
        "Test Data": {
          "AutomaticUpdates": "Enabled"
        },
        "Preconditions": "User logged in",
        "Steps to Replicate": "1. Navigate to 'Settings' page  2. Toggle 'Automatic Updates' to 'Enabled'  3. Click 'Save' button",
        "Expected Result": "Automatic updates should be enabled successfully"
      },
      {
        "ID": "TC063",
        "Title": "Register with Facebook",
        "Test Data": {
          "SocialMedia": "Facebook",
          "Username": "user_fb",
          "Password": "password123"
        },
        "Preconditions": "Facebook account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Facebook' button  3. Enter Facebook credentials and authorize  4. Complete any additional registration steps  5. Submit the registration form",
        "Expected Result": "User should be registered successfully using Facebook account"
      },
      {
        "ID": "TC064",
        "Title": "Register with Google",
        "Test Data": {
          "SocialMedia": "Google",
          "Username": "user_google",
          "Password": "password123"
        },
        "Preconditions": "Google account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Google' button  3. Enter Google credentials and authorize  4. Complete any additional registration steps  5. Submit the registration form",
        "Expected Result": "User should be registered successfully using Google account"
      },
      {
        "ID": "TC065",
        "Title": "Register with Twitter",
        "Test Data": {
          "SocialMedia": "Twitter",
          "Username": "user_twitter",
          "Password": "password123"
        },
        "Preconditions": "Twitter account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Twitter' button  3. Enter Twitter credentials and authorize  4. Complete any additional registration steps  5. Submit the registration form",
        "Expected Result": "User should be registered successfully using Twitter account"
      },
      {
        "ID": "TC066",
        "Title": "Register with LinkedIn",
        "Test Data": {
          "SocialMedia": "LinkedIn",
          "Username": "user_linkedin",
          "Password": "password123"
        },
        "Preconditions": "LinkedIn account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with LinkedIn' button  3. Enter LinkedIn credentials and authorize  4. Complete any additional registration steps  5. Submit the registration form",
        "Expected Result": "User should be registered successfully using LinkedIn account"
      },
      {
        "ID": "TC067",
        "Title": "Register with Instagram",
        "Test Data": {
          "SocialMedia": "Instagram",
          "Username": "user_instagram",
          "Password": "password123"
        },
        "Preconditions": "Instagram account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Instagram' button  3. Enter Instagram credentials and authorize  4. Complete any additional registration steps  5. Submit the registration form",
        "Expected Result": "User should be registered successfully using Instagram account"
      },
      {
        "ID": "TC068",
        "Title": "Register with GitHub",
        "Test Data": {
          "SocialMedia": "GitHub",
          "Username": "user_github",
          "Password": "password123"
        },
        "Preconditions": "GitHub account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with GitHub' button  3. Enter GitHub credentials and authorize  4. Complete any additional registration steps  5. Submit the registration form",
        "Expected Result": "User should be registered successfully using GitHub account"
      },
      {
        "ID": "TC069",
        "Title": "Register with Apple",
        "Test Data": {
          "SocialMedia": "Apple",
          "Username": "user_apple",
          "Password": "password123"
        },
        "Preconditions": "Apple ID exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Apple' button  3. Enter Apple ID credentials and authorize  4. Complete any additional registration steps  5. Submit the registration form",
        "Expected Result": "User should be registered successfully using Apple ID"
      },
      {
        "ID": "TC070",
        "Title": "Register with Facebook - Missing Authorization",
        "Test Data": {
          "SocialMedia": "Facebook"
        },
        "Preconditions": "Facebook account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Facebook' button  3. Cancel authorization",
        "Expected Result": "Registration should be canceled and user should remain on the registration page"
      },
      {
        "ID": "TC071",
        "Title": "Register with Google - Invalid Credentials",
        "Test Data": {
          "SocialMedia": "Google",
          "Username": "invalid_user",
          "Password": "invalid_password"
        },
        "Preconditions": "Google account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Google' button  3. Enter invalid Google credentials  4. Attempt to authorize",
        "Expected Result": "Error message should be displayed indicating invalid credentials"
      },
      {
        "ID": "TC072",
        "Title": "Register with Twitter - Account Already Registered",
        "Test Data": {
          "SocialMedia": "Twitter",
          "Username": "existing_user",
          "Password": "password123"
        },
        "Preconditions": "Twitter account exists and is already registered on the site",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Twitter' button  3. Enter Twitter credentials  4. Attempt to authorize",
        "Expected Result": "Error message should be displayed indicating account already registered"
      },
      {
        "ID": "TC073",
        "Title": "Register with LinkedIn - Network Failure",
        "Test Data": {
          "SocialMedia": "LinkedIn"
        },
        "Preconditions": "LinkedIn account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with LinkedIn' button  3. Simulate network failure during authorization",
        "Expected Result": "Error message should be displayed indicating network failure"
      },
      {
        "ID": "TC074",
        "Title": "Register with Instagram - No Email Provided",
        "Test Data": {
          "SocialMedia": "Instagram"
        },
        "Preconditions": "Instagram account exists without an email address linked",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Instagram' button  3. Attempt to authorize",
        "Expected Result": "Error message should be displayed indicating no email address provided"
      },
      {
        "ID": "TC075",
        "Title": "Register with GitHub - Permissions Denied",
        "Test Data": {
          "SocialMedia": "GitHub"
        },
        "Preconditions": "GitHub account exists",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with GitHub' button  3. Deny necessary permissions during authorization",
        "Expected Result": "Error message should be displayed indicating permissions denied"
      },
      {
        "ID": "TC076",
        "Title": "Register with Apple - Incomplete Profile",
        "Test Data": {
          "SocialMedia": "Apple",
          "Username": "user_apple"
        },
        "Preconditions": "Apple ID exists with incomplete profile information",
        "Steps to Replicate": "1. Navigate to registration page  2. Click on 'Register with Apple' button  3. Enter Apple ID credentials  4. Attempt to authorize",
        "Expected Result": "Error message should be displayed indicating incomplete profile information"
      },
      {
        "ID": "TC077",
        "Title": "Search with a Single Keyword",
        "Test Data": {
          "Keyword": "apple"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'apple' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'apple' should be displayed"
      },
      {
        "ID": "TC078",
        "Title": "Search with Multiple Keywords",
        "Test Data": {
          "Keywords": "apple banana"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'apple banana' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to both 'apple' and 'banana' should be displayed"
      },
      {
        "ID": "TC079",
        "Title": "Search with Special Characters",
        "Test Data": {
          "Keyword": "@apple!"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter '@apple!' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'apple' should be displayed ignoring special characters"
      },
      {
        "ID": "TC080",
        "Title": "Search with a Keyword Containing Numbers",
        "Test Data": {
          "Keyword": "apple123"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'apple123' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'apple123' should be displayed"
      },
      {
        "ID": "TC081",
        "Title": "Search with an Empty String",
        "Test Data": {
          "Keyword": ""
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter an empty string in the search bar  2. Click on the search button",
        "Expected Result": "An error message should be displayed indicating the search term cannot be empty"
      },
      {
        "ID": "TC082",
        "Title": "Search with a Long Keyword",
        "Test Data": {
          "Keyword": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter a 256-character long keyword in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to the long keyword should be displayed"
      },
      {
        "ID": "TC083",
        "Title": "Search with a Keyword in Uppercase",
        "Test Data": {
          "Keyword": "APPLE"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'APPLE' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'apple' should be displayed (case insensitive search)"
      },
      {
        "ID": "TC084",
        "Title": "Search with a Keyword in Lowercase",
        "Test Data": {
          "Keyword": "apple"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'apple' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'apple' should be displayed"
      },
      {
        "ID": "TC085",
        "Title": "Search with Mixed Case Keyword",
        "Test Data": {
          "Keyword": "ApPlE"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'ApPlE' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'apple' should be displayed (case insensitive search)"
      },
      {
        "ID": "TC086",
        "Title": "Search with Leading and Trailing Spaces",
        "Test Data": {
          "Keyword": "   apple   "
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter '   apple   ' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'apple' should be displayed, ignoring leading and trailing spaces"
      },
      {
        "ID": "TC087",
        "Title": "Search with Non-ASCII Characters",
        "Test Data": {
          "Keyword": "äpple"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'äpple' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to 'äpple' should be displayed"
      },
      {
        "ID": "TC088",
        "Title": "Search with SQL Injection String",
        "Test Data": {
          "Keyword": "' OR '1'='1"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter \"' OR '1'='1\" in the search bar  2. Click on the search button",
        "Expected Result": "Search results should not be affected by SQL injection and an error or no results should be displayed"
      },
      {
        "ID": "TC089",
        "Title": "Search with HTML Tags",
        "Test Data": {
          "Keyword": "<script>alert('test')</script>"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter \"<script>alert('test')</script>\" in the search bar  2. Click on the search button",
        "Expected Result": "Search results should not execute HTML tags and should display results ignoring the script"
      },
      {
        "ID": "TC090",
        "Title": "Search with Common Stop Words",
        "Test Data": {
          "Keyword": "the and is"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'the and is' in the search bar  2. Click on the search button",
        "Expected Result": "Search results should be displayed based on the keywords, ignoring common stop words"
      },
      {
        "ID": "TC091",
        "Title": "Search with Exact Phrase",
        "Test Data": {
          "Keyword": "\"apple pie\""
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter '\"apple pie\"' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to the exact phrase 'apple pie' should be displayed"
      },
      {
        "ID": "TC092",
        "Title": "Search with Keyword Having Special Meaning in Search Syntax",
        "Test Data": {
          "Keyword": "apple OR orange"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Enter 'apple OR orange' in the search bar  2. Click on the search button",
        "Expected Result": "Search results related to either 'apple' or 'orange' should be displayed"
      },
      {
        "ID": "TC093",
        "Title": "Filter by Category",
        "Test Data": {
          "Category": "Electronics"
        },
        "Preconditions": "User is on the search page with available categories",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Electronics' from the category filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items only from the 'Electronics' category"
      },
      {
        "ID": "TC094",
        "Title": "Filter by Price Range",
        "Test Data": {
          "MinPrice": 100,
          "MaxPrice": 500
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Navigate to the search page  2. Enter a price range from 100 to 500 in the price filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items within the price range of 100 to 500"
      },
      {
        "ID": "TC095",
        "Title": "Filter by Brand",
        "Test Data": {
          "Brand": "Apple"
        },
        "Preconditions": "User is on the search page with available brands",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Apple' from the brand filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items only from the 'Apple' brand"
      },
      {
        "ID": "TC096",
        "Title": "Filter by Rating",
        "Test Data": {
          "Rating": 4
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Navigate to the search page  2. Select a minimum rating of 4 stars in the rating filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items with a rating of 4 stars or higher"
      },
      {
        "ID": "TC097",
        "Title": "Filter by Availability",
        "Test Data": {
          "Availability": "In Stock"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'In Stock' from the availability filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items that are currently in stock"
      },
      {
        "ID": "TC098",
        "Title": "Filter by Color",
        "Test Data": {
          "Color": "Red"
        },
        "Preconditions": "User is on the search page with available color options",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Red' from the color filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items that are available in red color"
      },
      {
        "ID": "TC099",
        "Title": "Filter by Size",
        "Test Data": {
          "Size": "Large"
        },
        "Preconditions": "User is on the search page with available size options",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Large' from the size filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items that are available in large size"
      },
      {
        "ID": "TC100",
        "Title": "Filter by Date Added",
        "Test Data": {
          "DateAdded": "Last 30 Days"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Last 30 Days' from the date added filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items that were added in the last 30 days"
      },
      {
        "ID": "TC101",
        "Title": "Filter by Discount",
        "Test Data": {
          "Discount": "20% and above"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Navigate to the search page  2. Select '20% and above' from the discount filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items that have a discount of 20% or more"
      },
      {
        "ID": "TC0102",
        "Title": "Filter by Multiple Categories",
        "Test Data": {
          "Categories": ["Electronics", "Home Appliances"]
        },
        "Preconditions": "User is on the search page with available categories",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Electronics' and 'Home Appliances' from the category filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items from both 'Electronics' and 'Home Appliances' categories"
      },
      {
        "ID": "TC103",
        "Title": "Filter by Keyword and Category",
        "Test Data": {
          "Keyword": "Laptop",
          "Category": "Electronics"
        },
        "Preconditions": "User is on the search page with available categories",
        "Steps to Replicate": "1. Navigate to the search page  2. Enter 'Laptop' in the search bar  3. Select 'Electronics' from the category filter  4. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items related to 'Laptop' within the 'Electronics' category"
      },
      {
        "ID": "TC104",
        "Title": "Filter by Keyword and Price Range",
        "Test Data": {
          "Keyword": "Phone",
          "MinPrice": 200,
          "MaxPrice": 800
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Navigate to the search page  2. Enter 'Phone' in the search bar  3. Enter a price range from 200 to 800 in the price filter  4. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items related to 'Phone' within the price range of 200 to 800"
      },
      {
        "ID": "TC105",
        "Title": "Clear All Filters",
        "Test Data": {},
        "Preconditions": "User is on the search page with active filters",
        "Steps to Replicate": "1. Navigate to the search page  2. Apply any filter  3. Click on the 'Clear All Filters' button",
        "Expected Result": "All active filters should be cleared and all search results should be displayed"
      },
      {
        "ID": "TC106",
        "Title": "Filter by Non-Existent Category",
        "Test Data": {
          "Category": "Toys"
        },
        "Preconditions": "User is on the search page with available categories",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Toys' from the category filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "No search results should be displayed if there are no items in the 'Toys' category"
      },
      {
        "ID": "TC107",
        "Title": "Filter by Out of Stock Items",
        "Test Data": {
          "Availability": "Out of Stock"
        },
        "Preconditions": "User is on the search page",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Out of Stock' from the availability filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items that are currently out of stock"
      },
      {
        "ID": "TC108",
        "Title": "Filter by Multiple Brands",
        "Test Data": {
          "Brands": ["Apple", "Samsung"]
        },
        "Preconditions": "User is on the search page with available brands",
        "Steps to Replicate": "1. Navigate to the search page  2. Select 'Apple' and 'Samsung' from the brand filter  3. Click on the 'Apply Filters' button",
        "Expected Result": "Search results should display items from both 'Apple' and 'Samsung' brands"
      },
      {
        "ID": "TC109",
        "Title": "Add Single Product to Cart",
        "Test Data": {
          "ProductID": "P001"
        },
        "Preconditions": "User is logged in and on the product page",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P001'  2. Click on the 'Add to Cart' button",
        "Expected Result": "The product should be added to the cart and the cart count should increase by 1"
      },
      {
        "ID": "TC110",
        "Title": "Add Multiple Quantities of the Same Product to Cart",
        "Test Data": {
          "ProductID": "P002",
          "Quantity": 3
        },
        "Preconditions": "User is logged in and on the product page",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P002'  2. Select quantity '3'  3. Click on the 'Add to Cart' button",
        "Expected Result": "Three units of the product should be added to the cart"
      },
      {
        "ID": "TC111",
        "Title": "Add Product to Cart without Logging In",
        "Test Data": {
          "ProductID": "P003"
        },
        "Preconditions": "User is not logged in and on the product page",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P003'  2. Click on the 'Add to Cart' button",
        "Expected Result": "User should be prompted to log in or register before adding the product to the cart"
      },
      {
        "ID": "TC112",
        "Title": "Add Out of Stock Product to Cart",
        "Test Data": {
          "ProductID": "P004"
        },
        "Preconditions": "User is logged in and on the product page; ProductID 'P004' is out of stock",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P004'  2. Click on the 'Add to Cart' button",
        "Expected Result": "An error message should be displayed indicating the product is out of stock"
      },
      {
        "ID": "TC113",
        "Title": "Add Product to Cart from Search Results",
        "Test Data": {
          "ProductID": "P005"
        },
        "Preconditions": "User is logged in and on the search results page",
        "Steps to Replicate": "1. Perform a search to find ProductID 'P005'  2. Click on the 'Add to Cart' button for ProductID 'P005' from the search results",
        "Expected Result": "The product should be added to the cart and the cart count should increase by 1"
      },
      {
        "ID": "TC114",
        "Title": "Add Product to Cart from Category Page",
        "Test Data": {
          "ProductID": "P006"
        },
        "Preconditions": "User is logged in and on the category page",
        "Steps to Replicate": "1. Navigate to the category page containing ProductID 'P006'  2. Click on the 'Add to Cart' button for ProductID 'P006'",
        "Expected Result": "The product should be added to the cart and the cart count should increase by 1"
      },
      {
        "ID": "TC115",
        "Title": "Add Product to Cart from Wishlist",
        "Test Data": {
          "ProductID": "P007"
        },
        "Preconditions": "User is logged in and ProductID 'P007' is in the wishlist",
        "Steps to Replicate": "1. Navigate to the wishlist page  2. Click on the 'Add to Cart' button for ProductID 'P007'",
        "Expected Result": "The product should be moved from the wishlist to the cart"
      },
      {
        "ID": "TC116",
        "Title": "Add Product to Cart with Promotional Discount",
        "Test Data": {
          "ProductID": "P008",
          "PromoCode": "PROMO20"
        },
        "Preconditions": "User is logged in and on the product page; Promo code 'PROMO20' is active",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P008'  2. Enter promo code 'PROMO20'  3. Click on the 'Add to Cart' button",
        "Expected Result": "The product should be added to the cart with the promotional discount applied"
      },
      {
        "ID": "TC117",
        "Title": "Add Product to Cart with Maximum Allowed Quantity",
        "Test Data": {
          "ProductID": "P009",
          "Quantity": 10
        },
        "Preconditions": "User is logged in and on the product page; Maximum allowed quantity is 10",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P009'  2. Select quantity '10'  3. Click on the 'Add to Cart' button",
        "Expected Result": "Ten units of the product should be added to the cart"
      },
      {
        "ID": "TC118",
        "Title": "Add Product to Cart with Insufficient Quantity Available",
        "Test Data": {
          "ProductID": "P010",
          "Quantity": 5
        },
        "Preconditions": "User is logged in and on the product page; Only 3 units of ProductID 'P010' are available",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P010'  2. Select quantity '5'  3. Click on the 'Add to Cart' button",
        "Expected Result": "An error message should be displayed indicating insufficient quantity available"
      },
      {
        "ID": "TC119",
        "Title": "Add Product to Cart with Variants",
        "Test Data": {
          "ProductID": "P011",
          "Variant": "Color: Red, Size: M"
        },
        "Preconditions": "User is logged in and on the product page; ProductID 'P011' has multiple variants",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P011'  2. Select variant 'Color: Red, Size: M'  3. Click on the 'Add to Cart' button",
        "Expected Result": "The selected variant of the product should be added to the cart"
      },
      {
        "ID": "TC120",
        "Title": "Add Product to Cart and View Cart",
        "Test Data": {
          "ProductID": "P012"
        },
        "Preconditions": "User is logged in and on the product page",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P012'  2. Click on the 'Add to Cart' button  3. Click on the 'View Cart' button",
        "Expected Result": "The product should be added to the cart and the user should be redirected to the cart page displaying the added product"
      },
      {
        "ID": "TC121",
        "Title": "Add Product to Cart and Continue Shopping",
        "Test Data": {
          "ProductID": "P013"
        },
        "Preconditions": "User is logged in and on the product page",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P013'  2. Click on the 'Add to Cart' button  3. Click on the 'Continue Shopping' button",
        "Expected Result": "The product should be added to the cart and the user should remain on the product page"
      },
      {
        "ID": "TC122",
        "Title": "Add Product to Cart from Recently Viewed Items",
        "Test Data": {
          "ProductID": "P014"
        },
        "Preconditions": "User is logged in and has recently viewed ProductID 'P014'",
        "Steps to Replicate": "1. Navigate to the recently viewed items section  2. Click on the 'Add to Cart' button for ProductID 'P014'",
        "Expected Result": "The product should be added to the cart from the recently viewed items section"
      },
      {
        "ID": "TC123",
        "Title": "Add Product to Cart with Invalid Promo Code",
        "Test Data": {
          "ProductID": "P015",
          "PromoCode": "INVALIDCODE"
        },
        "Preconditions": "User is logged in and on the product page",
        "Steps to Replicate": "1. Navigate to the product page for ProductID 'P015'  2. Enter promo code 'INVALIDCODE'  3. Click on the 'Add to Cart' button",
        "Expected Result": "An error message should be displayed indicating the promo code is invalid"
      },
      {
        "ID": "TC124",
        "Title": "Verify Product Title Display",
        "Test Data": {
          "ProductID": "P001"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P001'",
        "Expected Result": "The product title should be displayed correctly on the page"
      },
      {
        "ID": "TC125",
        "Title": "Verify Product Image Display",
        "Test Data": {
          "ProductID": "P002"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P002'",
        "Expected Result": "The product image should be displayed correctly on the page"
      },
      {
        "ID": "TC126",
        "Title": "Verify Product Price Display",
        "Test Data": {
          "ProductID": "P003"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P003'",
        "Expected Result": "The product price should be displayed correctly on the page"
      },
      {
        "ID": "TC127",
        "Title": "Verify Add to Cart Button",
        "Test Data": {
          "ProductID": "P004"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P004'  2. Verify the presence of the 'Add to Cart' button",
        "Expected Result": "The 'Add to Cart' button should be displayed and clickable"
      },
      {
        "ID": "TC128",
        "Title": "Verify Product Description Display",
        "Test Data": {
          "ProductID": "P005"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P005'",
        "Expected Result": "The product description should be displayed correctly on the page"
      },
      {
        "ID": "TC129",
        "Title": "Verify Product Specifications Display",
        "Test Data": {
          "ProductID": "P006"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P006'  2. Verify the presence of product specifications",
        "Expected Result": "The product specifications should be displayed correctly on the page"
      },
      {
        "ID": "TC130",
        "Title": "Verify Related Products Display",
        "Test Data": {
          "ProductID": "P007"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P007'  2. Verify the presence of related products section",
        "Expected Result": "Related products should be displayed correctly on the page"
      },
      {
        "ID": "TC131",
        "Title": "Verify Product Reviews Display",
        "Test Data": {
          "ProductID": "P008"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P008'  2. Verify the presence of product reviews section",
        "Expected Result": "Product reviews should be displayed correctly on the page"
      },
      {
        "ID": "TC132",
        "Title": "Verify Product Rating Display",
        "Test Data": {
          "ProductID": "P009"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P009'  2. Verify the presence of product rating",
        "Expected Result": "Product rating should be displayed correctly on the page"
      },
      {
        "ID": "TC133",
        "Title": "Verify Product Availability Status",
        "Test Data": {
          "ProductID": "P010"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P010'  2. Verify the presence of product availability status",
        "Expected Result": "Product availability status should be displayed correctly on the page"
      },
      {
        "ID": "TC134",
        "Title": "Verify Quantity Selector Functionality",
        "Test Data": {
          "ProductID": "P011"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P011'  2. Verify the functionality of the quantity selector",
        "Expected Result": "Quantity selector should be functional and allow user to select quantity"
      },
      {
        "ID": "TC135",
        "Title": "Verify Add to Wishlist Button",
        "Test Data": {
          "ProductID": "P012"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P012'  2. Verify the presence of the 'Add to Wishlist' button",
        "Expected Result": "The 'Add to Wishlist' button should be displayed and clickable"
      },
      {
        "ID": "TC136",
        "Title": "Verify Product Zoom Functionality",
        "Test Data": {
          "ProductID": "P013"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P013'  2. Verify the functionality of the product image zoom feature",
        "Expected Result": "Product image zoom functionality should be working correctly"
      },
      {
        "ID": "TC137",
        "Title": "Verify Share Product Functionality",
        "Test Data": {
          "ProductID": "P014"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P014'  2. Verify the presence of share product buttons (e.g., Facebook, Twitter, Email)",
        "Expected Result": "Share product functionality should be working correctly"
      },
      {
        "ID": "TC138",
        "Title": "Verify Product Video Display",
        "Test Data": {
          "ProductID": "P015"
        },
        "Preconditions": "User is logged in and on the product details page; Product has a video",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P015'  2. Verify the presence of the product video",
        "Expected Result": "The product video should be displayed correctly and be playable"
      },
      {
        "ID": "TC139",
        "Title": "Verify Breadcrumb Navigation",
        "Test Data": {
          "ProductID": "P016"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P016'  2. Verify the presence and functionality of breadcrumb navigation",
        "Expected Result": "Breadcrumb navigation should be displayed and functional"
      },
      {
        "ID": "TC140",
        "Title": "Verify Product SKU Display",
        "Test Data": {
          "ProductID": "P017"
        },
        "Preconditions": "User is logged in and on the product details page",
        "Steps to Replicate": "1. Navigate to the product details page for ProductID 'P017'  2. Verify the presence of the product SKU",
        "Expected Result": "Product SKU should be displayed correctly on the page"
      },
      {
        "ID": "TC141",
        "Title": "Add New Contact",
        "Test Data": {
          "Name": "John Doe",
          "Email": "john.doe@example.com",
          "Phone": "+1234567890"
        },
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Click on the 'Add Contact' button  3. Enter Name, Email, and Phone  4. Click on the 'Save' button",
        "Expected Result": "The new contact should be added successfully"
      },
      {
        "ID": "TC142",
        "Title": "Edit Existing Contact",
        "Test Data": {
          "ContactID": "C001",
          "NewName": "Jane Smith",
          "NewEmail": "jane.smith@example.com",
          "NewPhone": "+1987654321"
        },
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Find the contact with ContactID 'C001'  3. Click on the 'Edit' button  4. Update Name, Email, and Phone  5. Click on the 'Save' button",
        "Expected Result": "The existing contact should be updated successfully"
      },
      {
        "ID": "TC143",
        "Title": "Delete Existing Contact",
        "Test Data": {
          "ContactID": "C002"
        },
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Find the contact with ContactID 'C002'  3. Click on the 'Delete' button  4. Confirm the deletion",
        "Expected Result": "The existing contact with ContactID 'C002' should be deleted successfully"
      },
      {
        "ID": "TC144",
        "Title": "Search Contact by Name",
        "Test Data": {
          "SearchName": "Jane"
        },
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Enter 'Jane' in the search field  3. Click on the search button",
        "Expected Result": "Contacts with the name containing 'Jane' should be displayed in the search results"
      },
      {
        "ID": "TC145",
        "Title": "Search Contact by Email",
        "Test Data": {
          "SearchEmail": "example.com"
        },
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Enter 'example.com' in the search field  3. Click on the search button",
        "Expected Result": "Contacts with the email containing 'example.com' should be displayed in the search results"
      },
      {
        "ID": "TC146",
        "Title": "Search Contact by Phone",
        "Test Data": {
          "SearchPhone": "1234567890"
        },
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Enter '1234567890' in the search field  3. Click on the search button",
        "Expected Result": "Contacts with the phone number containing '1234567890' should be displayed in the search results"
      },
      {
        "ID": "TC147",
        "Title": "Sort Contacts by Name (Ascending)",
        "Test Data": {},
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Click on the 'Sort by Name' button",
        "Expected Result": "Contacts should be sorted alphabetically by name in ascending order"
      },
      {
        "ID": "TC148",
        "Title": "Sort Contacts by Name (Descending)",
        "Test Data": {},
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Click on the 'Sort by Name' button twice",
        "Expected Result": "Contacts should be sorted alphabetically by name in descending order"
      },
      {
        "ID": "TC149",
        "Title": "Sort Contacts by Email (Ascending)",
        "Test Data": {},
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Click on the 'Sort by Email' button",
        "Expected Result": "Contacts should be sorted alphabetically by email in ascending order"
      },
      {
        "ID": "TC150",
        "Title": "Sort Contacts by Email (Descending)",
        "Test Data": {},
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Click on the 'Sort by Email' button twice",
        "Expected Result": "Contacts should be sorted alphabetically by email in descending order"
      },
      {
        "ID": "TC151",
        "Title": "Sort Contacts by Phone (Ascending)",
        "Test Data": {},
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Click on the 'Sort by Phone' button",
        "Expected Result": "Contacts should be sorted numerically by phone number in ascending order"
      },
      {
        "ID": "TC152",
        "Title": "Sort Contacts by Phone (Descending)",
        "Test Data": {},
        "Preconditions": "User is logged in and on the contacts management page",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Click on the 'Sort by Phone' button twice",
        "Expected Result": "Contacts should be sorted numerically by phone number in descending order"
      },
      {
        "ID": "TC153",
        "Title": "Verify Pagination Functionality",
        "Test Data": {},
        "Preconditions": "User is logged in and has more than one page of contacts",
        "Steps to Replicate": "1. Navigate to the contacts management page  2. Verify the presence of pagination buttons",
        "Expected Result": "Pagination should be functional and allow navigation between pages"
      },
      {
        "ID": "TC154",
        "Title": "Update Contact Name",
        "Test Data": {
          "ContactID": "C001",
          "NewName": "Jane Smith"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C001'  2. Update the name to 'Jane Smith'  3. Click on the 'Save' button",
        "Expected Result": "The contact's name should be updated to 'Jane Smith'"
      },
      {
        "ID": "TC155",
        "Title": "Update Contact Email",
        "Test Data": {
          "ContactID": "C002",
          "NewEmail": "jane.smith@example.com"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C002'  2. Update the email to 'jane.smith@example.com'  3. Click on the 'Save' button",
        "Expected Result": "The contact's email should be updated to 'jane.smith@example.com'"
      },
      {
        "ID": "TC156",
        "Title": "Update Contact Phone Number",
        "Test Data": {
          "ContactID": "C003",
          "NewPhone": "+1987654321"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C003'  2. Update the phone number to '+1987654321'  3. Click on the 'Save' button",
        "Expected Result": "The contact's phone number should be updated to '+1987654321'"
      },
      {
        "ID": "TC157",
        "Title": "Update Contact Address",
        "Test Data": {
          "ContactID": "C004",
          "NewAddress": "123 Main St, City, Country"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C004'  2. Update the address to '123 Main St, City, Country'  3. Click on the 'Save' button",
        "Expected Result": "The contact's address should be updated to '123 Main St, City, Country'"
      },
      {
        "ID": "TC158",
        "Title": "Update Contact Company",
        "Test Data": {
          "ContactID": "C005",
          "NewCompany": "ABC Corp"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C005'  2. Update the company to 'ABC Corp'  3. Click on the 'Save' button",
        "Expected Result": "The contact's company should be updated to 'ABC Corp'"
      },
      {
        "ID": "TC159",
        "Title": "Update Contact Job Title",
        "Test Data": {
          "ContactID": "C006",
          "NewJobTitle": "Marketing Manager"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C006'  2. Update the job title to 'Marketing Manager'  3. Click on the 'Save' button",
        "Expected Result": "The contact's job title should be updated to 'Marketing Manager'"
      },
      {
        "ID": "TC160",
        "Title": "Update Contact Notes",
        "Test Data": {
          "ContactID": "C007",
          "NewNotes": "Important client. Follow up next week."
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C007'  2. Update the notes to 'Important client. Follow up next week.'  3. Click on the 'Save' button",
        "Expected Result": "The contact's notes should be updated to 'Important client. Follow up next week.'"
      },
      {
        "ID": "TC161",
        "Title": "Update Multiple Contact Details",
        "Test Data": {
          "ContactID": "C008",
          "NewName": "John Doe",
          "NewEmail": "john.doe@example.com",
          "NewPhone": "+1234567890"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C008'  2. Update the name, email, and phone number  3. Click on the 'Save' button",
        "Expected Result": "The contact's name, email, and phone number should be updated accordingly"
      },
      {
        "ID": "TC162",
        "Title": "Update Contact with Invalid Email",
        "Test Data": {
          "ContactID": "C009",
          "NewEmail": "invalidemail"
        },
        "Preconditions": "User is logged in and on the contact info update page",
        "Steps to Replicate": "1. Navigate to the contact info update page for ContactID 'C009'  2. Enter an invalid email address 'invalidemail'  3. Click on the 'Save' button",
        "Expected Result": "An error message should be displayed indicating the invalid email format"
      },
      {
        "ID": "TC163",
        "Title": "Verify Successful Payment with Credit Card",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/25",
          "CVV": "123",
          "Amount": "100.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card details  2. Enter the expiration date  3. Enter CVV  4. Enter the payment amount  5. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully and the user should receive a confirmation message."
      },
      {
        "ID": "TC164",
        "Title": "Verify Successful Payment with PayPal",
        "Test Data": {
          "PayPalUsername": "user@example.com",
          "PayPalPassword": "password123",
          "Amount": "50.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid PayPal username  2. Enter valid PayPal password  3. Enter the payment amount  4. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via PayPal and the user should receive a confirmation message."
      },
      {
        "ID": "TC165",
        "Title": "Verify Successful Payment with Bank Transfer",
        "Test Data": {
          "AccountNumber": "123456789",
          "RoutingNumber": "987654321",
          "Amount": "150.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid account number  2. Enter valid routing number  3. Enter the payment amount  4. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via bank transfer and the user should receive a confirmation message."
      },
      {
        "ID": "TC166",
        "Title": "Verify Successful Payment with Apple Pay",
        "Test Data": {
          "ApplePayToken": "abcdef123456",
          "Amount": "75.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid Apple Pay token  2. Enter the payment amount  3. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via Apple Pay and the user should receive a confirmation message."
      },
      {
        "ID": "TC167",
        "Title": "Verify Successful Payment with Google Pay",
        "Test Data": {
          "GooglePayToken": "uvwxyz987654",
          "Amount": "120.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid Google Pay token  2. Enter the payment amount  3. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via Google Pay and the user should receive a confirmation message."
      },
      {
        "ID": "TC168",
        "Title": "Verify Successful Payment with Stripe",
        "Test Data": {
          "StripeToken": "stripe-token-123456",
          "Amount": "90.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid Stripe token  2. Enter the payment amount  3. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via Stripe and the user should receive a confirmation message."
      },
      {
        "ID": "TC169",
        "Title": "Verify Successful Payment with Venmo",
        "Test Data": {
          "VenmoUsername": "venmo_user",
          "VenmoPassword": "venmo_password",
          "Amount": "80.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid Venmo username  2. Enter valid Venmo password  3. Enter the payment amount  4. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via Venmo and the user should receive a confirmation message."
      },
      {
        "ID": "TC170",
        "Title": "Verify Successful Payment with Cryptocurrency (Bitcoin)",
        "Test Data": {
          "BitcoinAddress": "1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2",
          "Amount": "2000.00 USD worth of Bitcoin"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid Bitcoin address  2. Enter the payment amount  3. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via Bitcoin and the user should receive a confirmation message."
      },
      {
        "ID": "TC171",
        "Title": "Verify Successful Payment with Cryptocurrency (Ethereum)",
        "Test Data": {
          "EthereumAddress": "0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B",
          "Amount": "500.00 USD worth of Ethereum"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid Ethereum address  2. Enter the payment amount  3. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via Ethereum and the user should receive a confirmation message."
      },
      {
        "ID": "TC172",
        "Title": "Verify Successful Payment with Cryptocurrency (Litecoin)",
        "Test Data": {
          "LitecoinAddress": "LQmNuyvhgXgjW7fy1bT2Nrvc8XmMYevVFf",
          "Amount": "300.00 USD worth of Litecoin"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid Litecoin address  2. Enter the payment amount  3. Click on 'Submit Payment'",
        "Expected Result": "Payment should be processed successfully via Litecoin and the user should receive a confirmation message."
      },
      {
        "ID": "TC173",
        "Title": "Invalid Credit Card Number",
        "Test Data": {
          "CardNumber": "1234 5678 9012 345",
          "ExpirationDate": "12/25",
          "CVV": "123",
          "Amount": "100.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter invalid credit card number  2. Enter the expiration date  3. Enter CVV  4. Enter the payment amount  5. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating an invalid credit card number."
      },
      {
        "ID": "TC174",
        "Title": "Expired Credit Card",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/20",
          "CVV": "123",
          "Amount": "50.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card number  2. Enter expired expiration date  3. Enter CVV  4. Enter the payment amount  5. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating an expired credit card."
      },
      {
        "ID": "TC175",
        "Title": "Invalid CVV",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/25",
          "CVV": "12",
          "Amount": "150.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card number  2. Enter the expiration date  3. Enter invalid CVV  4. Enter the payment amount  5. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating an invalid CVV."
      },
      {
        "ID": "TC176",
        "Title": "Insufficient Funds",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/25",
          "CVV": "123",
          "Amount": "5000.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card number  2. Enter the expiration date  3. Enter CVV  4. Enter an amount exceeding available funds  5. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating insufficient funds."
      },
      {
        "ID": "TC177",
        "Title": "Payment Gateway Timeout",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/25",
          "CVV": "123",
          "Amount": "100.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card number  2. Enter the expiration date  3. Enter CVV  4. Enter the payment amount  5. Simulate a payment gateway timeout by pausing the server response  6. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating a payment gateway timeout."
      },
      {
        "ID": "TC178",
        "Title": "Network Connection Failure",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/25",
          "CVV": "123",
          "Amount": "75.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card number  2. Enter the expiration date  3. Enter CVV  4. Enter the payment amount  5. Simulate a network connection failure  6. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating a network connection failure."
      },
      {
        "ID": "TC179",
        "Title": "Invalid PayPal Credentials",
        "Test Data": {
          "PayPalUsername": "invalid_user",
          "PayPalPassword": "invalid_password",
          "Amount": "200.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter invalid PayPal username  2. Enter invalid PayPal password  3. Enter the payment amount  4. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating invalid PayPal credentials."
      },
      {
        "ID": "TC180",
        "Title": "Payment Authorization Declined",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/25",
          "CVV": "123",
          "Amount": "150.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card number  2. Enter the expiration date  3. Enter CVV  4. Enter the payment amount  5. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating payment authorization declined."
      },
      {
        "ID": "TC181",
        "Title": "Transaction Error from Bank",
        "Test Data": {
          "CardNumber": "1234 5678 9012 3456",
          "ExpirationDate": "12/25",
          "CVV": "123",
          "Amount": "1000.00 USD"
        },
        "Preconditions": "User is logged in and on the payment page",
        "Steps to Replicate": "1. Enter valid credit card number  2. Enter the expiration date  3. Enter CVV  4. Enter the payment amount  5. Click on 'Submit Payment'",
        "Expected Result": "Payment should fail and an error message should be displayed indicating a transaction error from the bank."
      },
      {
        "ID": "TC182",
        "Title": "Verify Dashboard Overview Display",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Observe the overview section",
        "Expected Result": "Dashboard overview section should be displayed with relevant information."
      },
      {
        "ID": "TC183",
        "Title": "Verify Total Revenue Calculation",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the total revenue calculation",
        "Expected Result": "Total revenue should be calculated accurately based on the data."
      },
      {
        "ID": "TC184",
        "Title": "Verify Total Orders Calculation",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the total orders calculation",
        "Expected Result": "Total orders should be calculated accurately based on the data."
      },
      {
        "ID": "TC185",
        "Title": "Verify Total Customers Calculation",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the total customers calculation",
        "Expected Result": "Total customers should be calculated accurately based on the data."
      },
      {
        "ID": "TC186",
        "Title": "Verify Recent Orders Display",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the recent orders section",
        "Expected Result": "Recent orders should be displayed with relevant details."
      },
      {
        "ID": "TC187",
        "Title": "Verify Top Selling Products Display",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the top selling products section",
        "Expected Result": "Top selling products should be displayed with relevant details."
      },
      {
        "ID": "TC188",
        "Title": "Verify New Customers Display",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the new customers section",
        "Expected Result": "New customers should be displayed with relevant details."
      },
      {
        "ID": "TC189",
        "Title": "Verify Revenue Chart Display",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the revenue chart section",
        "Expected Result": "Revenue chart should be displayed with accurate data representation."
      },
      {
        "ID": "TC190",
        "Title": "Verify Orders Chart Display",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the orders chart section",
        "Expected Result": "Orders chart should be displayed with accurate data representation."
      },
      {
        "ID": "TC191",
        "Title": "Verify Customers Chart Display",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Check the customers chart section",
        "Expected Result": "Customers chart should be displayed with accurate data representation."
      },
      {
        "ID": "TC192",
        "Title": "Verify Navigation to Orders Page",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Click on 'View All Orders' button",
        "Expected Result": "User should be redirected to the orders page."
      },
      {
        "ID": "TC193",
        "Title": "Verify Navigation to Customers Page",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard",
        "Steps to Replicate": "1. Navigate to the dashboard  2. Click on 'View All Customers' button",
        "Expected Result": "User should be redirected to the customers page."
      },
      {
        "ID": "TC194",
        "Title": "Verify Availability of Dashboard Reports",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Observe the availability of different reports",
        "Expected Result": "Dashboard reports should be available and accessible."
      },
      {
        "ID": "TC195",
        "Title": "Verify Custom Date Range Selection",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Select a custom date range for the report  3. Check the displayed data",
        "Expected Result": "Report data should be displayed based on the selected custom date range."
      },
      {
        "ID": "TC196",
        "Title": "Verify Predefined Date Range Selection",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Select a predefined date range for the report  3. Check the displayed data",
        "Expected Result": "Report data should be displayed based on the selected predefined date range."
      },
      {
        "ID": "TC197",
        "Title": "Verify Report Data Accuracy",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Select a report  3. Compare the displayed data with actual data sources",
        "Expected Result": "Report data should accurately reflect the information from the source."
      },
      {
        "ID": "TC198",
        "Title": "Verify Report Data Filtering",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Apply filters to the report  3. Check the displayed data",
        "Expected Result": "Report data should be filtered based on the applied filters."
      },
      {
        "ID": "TC199",
        "Title": "Verify Report Data Sorting",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Sort report data based on different columns  3. Check the displayed data",
        "Expected Result": "Report data should be sorted correctly based on the selected column."
      },
      {
        "ID": "TC200",
        "Title": "Verify Report Export Functionality",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Select a report  3. Click on the export button  4. Choose a file format and confirm export",
        "Expected Result": "Report data should be exported in the chosen file format and downloaded successfully."
      },
      {
        "ID": "TC201",
        "Title": "Verify Report Data Visualization",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. View the report data visualization  3. Compare with expected visual representation",
        "Expected Result": "Report data should be visually represented accurately."
      },
      {
        "ID": "TC202",
        "Title": "Verify Report Data Drill-Down",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Click on specific data points in the report  3. Check for drill-down details",
        "Expected Result": "Drill-down details should be displayed accurately for the selected data points."
      },
      {
        "ID": "TC203",
        "Title": "Verify Report Data Refresh",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Refresh the report data  3. Check for updated data",
        "Expected Result": "Report data should be refreshed and updated with the latest information."
      },
      {
        "ID": "TC204",
        "Title": "Verify Report Sharing Functionality",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Select a report  3. Click on the share button  4. Choose sharing options and confirm",
        "Expected Result": "Report should be shared successfully through the chosen sharing options."
      },
      {
        "ID": "TC205",
        "Title": "Verify Report Print Functionality",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Select a report  3. Click on the print button  4. Check the printed report",
        "Expected Result": "Report should be printed successfully with accurate data representation."
      },
      {
        "ID": "TC206",
        "Title": "Verify Report Data Comparison",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Compare data from multiple reports  3. Check for consistency and accuracy",
        "Expected Result": "Report data should be consistent and accurately represented across different reports."
      },
      {
        "ID": "TC207",
        "Title": "Verify Report Data Drift Detection",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Compare current report data with historical data  3. Check for any unexpected changes or drifts",
        "Expected Result": "Any unexpected changes or drifts in the report data should be detected and reported."
      },
      {
        "ID": "TC208",
        "Title": "Verify Report Data Export Limits",
        "Test Data": {},
        "Preconditions": "User is logged in and navigated to the dashboard reports section",
        "Steps to Replicate": "1. Navigate to the dashboard reports section  2. Select a report  3. Attempt to export data exceeding export limits",
        "Expected Result": "Export should be limited to the defined maximum number of records."
      },
      {
        "ID": "TC209",
        "Title": "Verify Task Creation with Valid Data",
        "Test Data": {
          "Title": "Task 1",
          "Description": "This is a test task",
          "DueDate": "2024-06-30",
          "Assignee": "John Doe"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Click on 'Create Task' button",
        "Expected Result": "Task should be created successfully with the provided details."
      },
      {
        "ID": "TC210",
        "Title": "Verify Task Creation with Empty Title",
        "Test Data": {
          "Title": "",
          "Description": "This is a test task",
          "DueDate": "2024-06-30",
          "Assignee": "John Doe"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Keep the title field empty  3. Fill in the other required fields  4. Click on 'Create Task' button",
        "Expected Result": "Task creation should fail, and an error message should be displayed indicating the requirement of a title."
      },
      {
        "ID": "TC211",
        "Title": "Verify Task Creation with Past Due Date",
        "Test Data": {
          "Title": "Task 2",
          "Description": "This is a test task",
          "DueDate": "2024-05-15",
          "Assignee": "John Doe"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Set the due date to a past date  4. Click on 'Create Task' button",
        "Expected Result": "Task creation should fail, and an error message should be displayed indicating that the due date cannot be in the past."
      },
      {
        "ID": "TC212",
        "Title": "Verify Task Creation with Future Due Date",
        "Test Data": {
          "Title": "Task 3",
          "Description": "This is a test task",
          "DueDate": "2024-07-15",
          "Assignee": "John Doe"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Set the due date to a future date  4. Click on 'Create Task' button",
        "Expected Result": "Task should be created successfully with the provided future due date."
      },
      {
        "ID": "TC213",
        "Title": "Verify Task Creation with Invalid Due Date Format",
        "Test Data": {
          "Title": "Task 4",
          "Description": "This is a test task",
          "DueDate": "June 30, 2024",
          "Assignee": "John Doe"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Set the due date in an invalid format  4. Click on 'Create Task' button",
        "Expected Result": "Task creation should fail, and an error message should be displayed indicating an invalid due date format."
      },
      {
        "ID": "TC214",
        "Title": "Verify Task Creation with Long Title",
        "Test Data": {
          "Title": "This is a very long title for a task that exceeds the character limit set by the system",
          "Description": "This is a test task",
          "DueDate": "2024-06-30",
          "Assignee": "John Doe"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Use a very long title exceeding the character limit  4. Click on 'Create Task' button",
        "Expected Result": "Task creation should fail, and an error message should be displayed indicating the title character limit exceeded."
      },
      {
        "ID": "TC215",
        "Title": "Verify Task Creation with No Assignee",
        "Test Data": {
          "Title": "Task 5",
          "Description": "This is a test task",
          "DueDate": "2024-06-30",
          "Assignee": ""
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Leave the assignee field empty  4. Click on 'Create Task' button",
        "Expected Result": "Task creation should fail, and an error message should be displayed indicating the requirement of an assignee."
      },
      {
        "ID": "TC216",
        "Title": "Verify Task Creation with Invalid Assignee",
        "Test Data": {
          "Title": "Task 6",
          "Description": "This is a test task",
          "DueDate": "2024-06-30",
          "Assignee": "InvalidUser123"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Enter an invalid assignee  4. Click on 'Create Task' button",
        "Expected Result": "Task creation should fail, and an error message should be displayed indicating an invalid assignee."
      },
      {
        "ID": "TC217",
        "Title": "Verify Task Creation with Invalid Description",
        "Test Data": {
          "Title": "Task 7",
          "Description": "",
          "DueDate": "2024-06-30",
          "Assignee": "John Doe"
        },
        "Preconditions": "User is logged in and navigated to the task creation page",
        "Steps to Replicate": "1. Navigate to the task creation page  2. Fill in the required fields with valid data  3. Leave the description field empty  4. Click on 'Create Task' button",
        "Expected Result": "Task should be created successfully with no description provided."
      },
      {
        "ID": "TC218",
        "Title": "Verify Meeting Schedule Creation with Valid Data",
        "Test Data": {
          "Title": "Weekly Team Meeting",
          "Description": "Discuss project updates and assign tasks for the upcoming week.",
          "Date": "2024-06-20",
          "Time": "10:00 AM",
          "Duration": "1 hour",
          "Attendees": ["John Doe", "Jane Smith"],
          "Location": "Conference Room 1"
        },
        "Preconditions": "User is logged in and navigated to the meeting schedule page",
        "Steps to Replicate": "1. Navigate to the meeting schedule page  2. Fill in the required fields with valid data  3. Click on 'Create Meeting' button",
        "Expected Result": "Meeting should be scheduled successfully with the provided details."
      },
      {
        "ID": "TC219",
        "Title": "Verify Meeting Schedule Creation with Empty Title",
        "Test Data": {
          "Title": "",
          "Description": "Discuss project updates and assign tasks for the upcoming week.",
          "Date": "2024-06-20",
          "Time": "10:00 AM",
          "Duration": "1 hour",
          "Attendees": ["John Doe", "Jane Smith"],
          "Location": "Conference Room 1"
        },
        "Preconditions": "User is logged in and navigated to the meeting schedule page",
        "Steps to Replicate": "1. Navigate to the meeting schedule page  2. Keep the title field empty  3. Fill in the other required fields  4. Click on 'Create Meeting' button",
        "Expected Result": "Meeting schedule creation should fail, and an error message should be displayed indicating the requirement of a title."
      },
      {
        "ID": "TC220",
        "Title": "Verify Meeting Schedule Creation with Past Date",
        "Test Data": {
          "Title": "Weekly Team Meeting",
          "Description": "Discuss project updates and assign tasks for the upcoming week.",
          "Date": "2024-06-10",
          "Time": "10:00 AM",
          "Duration": "1 hour",
          "Attendees": ["John Doe", "Jane Smith"],
          "Location": "Conference Room 1"
        },
        "Preconditions": "User is logged in and navigated to the meeting schedule page",
        "Steps to Replicate": "1. Navigate to the meeting schedule page  2. Fill in the required fields with valid data  3. Set the meeting date to a past date  4. Click on 'Create Meeting' button",
        "Expected Result": "Meeting schedule creation should fail, and an error message should be displayed indicating that the date cannot be in the past."
      },
      {
        "ID": "TC221",
        "Title": "Verify Meeting Schedule Creation with Future Date",
        "Test Data": {
          "Title": "Weekly Team Meeting",
          "Description": "Discuss project updates and assign tasks for the upcoming week.",
          "Date": "2024-06-25",
          "Time": "10:00 AM",
          "Duration": "1 hour",
          "Attendees": ["John Doe", "Jane Smith"],
          "Location": "Conference Room 1"
        },
        "Preconditions": "User is logged in and navigated to the meeting schedule page",
        "Steps to Replicate": "1. Navigate to the meeting schedule page  2. Fill in the required fields with valid data  3. Set the meeting date to a future date  4. Click on 'Create Meeting' button",
        "Expected Result": "Meeting should be scheduled successfully with the provided future date."
      },
      {
        "ID": "TC222",
        "Title": "Verify Meeting Schedule Creation with Invalid Date Format",
        "Test Data": {
          "Title": "Weekly Team Meeting",
          "Description": "Discuss project updates and assign tasks for the upcoming week.",
          "Date": "June 25, 2024",
          "Time": "10:00 AM",
          "Duration": "1 hour",
          "Attendees": ["John Doe", "Jane Smith"],
          "Location": "Conference Room 1"
        },
        "Preconditions": "User is logged in and navigated to the meeting schedule page",
        "Steps to Replicate": "1. Navigate to the meeting schedule page  2. Fill in the required fields with valid data  3. Set the meeting date in an invalid format  4. Click on 'Create Meeting' button",
        "Expected Result": "Meeting schedule creation should fail, and an error message should be displayed indicating an invalid date format."
      },
      {
        "ID": "TC223",
        "Title": "Verify Meeting Schedule Creation with Empty Attendees",
        "Test Data": {
          "Title": "Weekly Team Meeting",
          "Description": "Discuss project updates and assign tasks for the upcoming week.",
          "Date": "2024-06-25",
          "Time": "10:00 AM",
          "Duration": "1 hour",
          "Attendees": [],
          "Location": "Conference Room 1"
        },
        "Preconditions": "User is logged in and navigated to the meeting schedule page",
        "Steps to Replicate": "1. Navigate to the meeting schedule page  2. Fill in the required fields with valid data  3. Leave the attendees field empty  4. Click on 'Create Meeting' button",
        "Expected Result": "Meeting schedule creation should fail, and an error message should be displayed indicating the requirement of at least one attendee."
      },
      {
        "ID": "TC224",
        "Title": "Verify Meeting Schedule Creation with Invalid Attendee",
        "Test Data": {
          "Title": "Weekly Team Meeting",
          "Description": "Discuss project updates and assign tasks for the upcoming week.",
          "Date": "2024-06-25",
          "Time": "10:00 AM",
          "Duration": "1 hour",
          "Attendees": ["InvalidUser123"],
          "Location": "Conference Room 1"
        },
        "Preconditions": "User is logged in and navigated to the meeting schedule page",
        "Steps to Replicate": "1. Navigate to the meeting schedule page  2. Fill in the required fields with valid data  3. Enter an invalid attendee  4. Click on 'Create Meeting' button",
        "Expected Result": "Meeting schedule creation should fail, and an error message should be displayed indicating an invalid attendee."
      },
      {
        "ID": "TC225",
        "Title": "Verify Email Sending with Valid Data",
        "Test Data": {
          "Recipient": "example@example.com",
          "Subject": "Test Email Subject",
          "Body": "This is a test email body."
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Fill in the recipient, subject, and body fields with valid data  3. Click on 'Send Email' button",
        "Expected Result": "Email should be sent successfully to the provided recipient with the specified subject and body."
      },
      {
        "ID": "TC226",
        "Title": "Verify Email Sending with Empty Recipient",
        "Test Data": {
          "Recipient": "",
          "Subject": "Test Email Subject",
          "Body": "This is a test email body."
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Leave the recipient field empty  3. Fill in the subject and body fields with valid data  4. Click on 'Send Email' button",
        "Expected Result": "Email sending should fail, and an error message should be displayed indicating the requirement of a recipient."
      },
      {
        "ID": "TC227",
        "Title": "Verify Email Sending with Invalid Recipient",
        "Test Data": {
          "Recipient": "invalid_email",
          "Subject": "Test Email Subject",
          "Body": "This is a test email body."
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Enter an invalid email address in the recipient field  3. Fill in the subject and body fields with valid data  4. Click on 'Send Email' button",
        "Expected Result": "Email sending should fail, and an error message should be displayed indicating an invalid recipient."
      },
      {
        "ID": "TC228",
        "Title": "Verify Email Sending with Empty Subject",
        "Test Data": {
          "Recipient": "example@example.com",
          "Subject": "",
          "Body": "This is a test email body."
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Fill in the recipient and body fields with valid data  3. Leave the subject field empty  4. Click on 'Send Email' button",
        "Expected Result": "Email sending should fail, and an error message should be displayed indicating the requirement of a subject."
      },
      {
        "ID": "TC229",
        "Title": "Verify Email Sending with Empty Body",
        "Test Data": {
          "Recipient": "example@example.com",
          "Subject": "Test Email Subject",
          "Body": ""
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Fill in the recipient and subject fields with valid data  3. Leave the body field empty  4. Click on 'Send Email' button",
        "Expected Result": "Email sending should fail, and an error message should be displayed indicating the requirement of a body."
      },
      {
        "ID": "TC230",
        "Title": "Verify Email Sending with Large Body",
        "Test Data": {
          "Recipient": "example@example.com",
          "Subject": "Test Email Subject",
          "Body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Fill in the recipient and subject fields with valid data  3. Use a large body text  4. Click on 'Send Email' button",
        "Expected Result": "Email should be sent successfully with the provided large body text."
      },
      {
        "ID": "TC231",
        "Title": "Verify Email Sending with Attachments",
        "Test Data": {
          "Recipient": "example@example.com",
          "Subject": "Test Email Subject",
          "Body": "This is a test email body.",
          "Attachments": ["attachment1.pdf", "attachment2.docx"]
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Fill in the recipient, subject, and body fields with valid data  3. Attach files  4. Click on 'Send Email' button",
        "Expected Result": "Email should be sent successfully with the attached files."
      },
      {
        "ID": "TC232",
        "Title": "Verify Email Sending with Multiple Recipients",
        "Test Data": {
          "Recipients": ["example1@example.com", "example2@example.com"],
          "Subject": "Test Email Subject",
          "Body": "This is a test email body."
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Fill in the multiple recipients, subject, and body fields with valid data  3. Click on 'Send Email' button",
        "Expected Result": "Email should be sent successfully to all the provided recipients with the specified subject and body."
      },
      {
        "ID": "TC233",
        "Title": "Verify Email Sending with CC and BCC",
        "Test Data": {
          "Recipients": ["example@example.com"],
          "CC": ["cc1@example.com", "cc2@example.com"],
          "BCC": ["bcc1@example.com", "bcc2@example.com"],
          "Subject": "Test Email Subject",
          "Body": "This is a test email body."
        },
        "Preconditions": "User is logged in and navigated to the email sending page",
        "Steps to Replicate": "1. Navigate to the email sending page  2. Fill in the recipients, CC, BCC, subject, and body fields with valid data  3. Click on 'Send Email' button",
        "Expected Result": "Email should be sent successfully with the specified CC and BCC recipients."
      },
      {
        "ID": "TC234",
        "Title": "Verify Filtering Tasks by 'Open' Status",
        "Test Data": {
          "Status": "Open"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'Open' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'Open' status should be displayed."
      },
      {
        "ID": "TC235",
        "Title": "Verify Filtering Tasks by 'In Progress' Status",
        "Test Data": {
          "Status": "In Progress"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'In Progress' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'In Progress' status should be displayed."
      },
      {
        "ID": "TC236",
        "Title": "Verify Filtering Tasks by 'Completed' Status",
        "Test Data": {
          "Status": "Completed"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'Completed' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'Completed' status should be displayed."
      },
      {
        "ID": "TC237",
        "Title": "Verify Filtering Tasks by 'On Hold' Status",
        "Test Data": {
          "Status": "On Hold"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'On Hold' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'On Hold' status should be displayed."
      },
      {
        "ID": "TC238",
        "Title": "Verify Filtering Tasks by 'Cancelled' Status",
        "Test Data": {
          "Status": "Cancelled"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'Cancelled' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'Cancelled' status should be displayed."
      },
      {
        "ID": "TC239",
        "Title": "Verify Filtering Tasks by Multiple Statuses",
        "Test Data": {
          "Status": ["Open", "In Progress"]
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'Open' and 'In Progress' status filters  3. Apply the filters",
        "Expected Result": "Tasks with 'Open' or 'In Progress' status should be displayed."
      },
      {
        "ID": "TC240",
        "Title": "Verify Filtering Tasks by 'High Priority' Status",
        "Test Data": {
          "Status": "High Priority"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'High Priority' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'High Priority' status should be displayed."
      },
      {
        "ID": "TC241",
        "Title": "Verify Filtering Tasks by 'Low Priority' Status",
        "Test Data": {
          "Status": "Low Priority"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'Low Priority' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'Low Priority' status should be displayed."
      },
      {
        "ID": "TC242",
        "Title": "Verify Filtering Tasks by 'Urgent' Status",
        "Test Data": {
          "Status": "Urgent"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'Urgent' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'Urgent' status should be displayed."
      },
      {
        "ID": "TC243",
        "Title": "Verify Filtering Tasks by 'Normal' Priority Status",
        "Test Data": {
          "Status": "Normal"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'Normal' status filter  3. Apply the filter",
        "Expected Result": "Only tasks with 'Normal' status should be displayed."
      },
      {
        "ID": "TC244",
        "Title": "Verify Filtering Tasks by 'High Priority' and 'Open' Status",
        "Test Data": {
          "Status": ["High Priority", "Open"]
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select 'High Priority' and 'Open' status filters  3. Apply the filters",
        "Expected Result": "Tasks with 'High Priority' and 'Open' status should be displayed."
      },
      {
        "ID": "TC245",
        "Title": "Verify No Tasks Displayed for Invalid Status",
        "Test Data": {
          "Status": "Invalid Status"
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Select an invalid status filter  3. Apply the filter",
        "Expected Result": "No tasks should be displayed, and a message indicating invalid status should be shown."
      },
      {
        "ID": "TC246",
        "Title": "Verify No Tasks Displayed for No Status Selected",
        "Test Data": {
          "Status": ""
        },
        "Preconditions": "User is logged in and navigated to the task filtering page",
        "Steps to Replicate": "1. Navigate to the task filtering page  2. Do not select any status filter  3. Apply the filter",
        "Expected Result": "No tasks should be displayed."
      },
      {
        "ID": "TC247",
        "Title": "Verify Sorting Tasks by Ascending Creation Time",
        "Test Data": {
          "Sorting": "Ascending Creation Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Ascending Creation Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in ascending order based on their creation time."
      },
      {
        "ID": "TC248",
        "Title": "Verify Sorting Tasks by Descending Creation Time",
        "Test Data": {
          "Sorting": "Descending Creation Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Descending Creation Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in descending order based on their creation time."
      },
      {
        "ID": "TC249",
        "Title": "Verify Sorting Tasks by Ascending Due Time",
        "Test Data": {
          "Sorting": "Ascending Due Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Ascending Due Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in ascending order based on their due time."
      },
      {
        "ID": "TC250",
        "Title": "Verify Sorting Tasks by Descending Due Time",
        "Test Data": {
          "Sorting": "Descending Due Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Descending Due Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in descending order based on their due time."
      },
      {
        "ID": "TC251",
        "Title": "Verify Sorting Tasks by Ascending Start Time",
        "Test Data": {
          "Sorting": "Ascending Start Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Ascending Start Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in ascending order based on their start time."
      },
      {
        "ID": "TC252",
        "Title": "Verify Sorting Tasks by Descending Start Time",
        "Test Data": {
          "Sorting": "Descending Start Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Descending Start Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in descending order based on their start time."
      },
      {
        "ID": "TC253",
        "Title": "Verify Sorting Tasks by Ascending Completion Time",
        "Test Data": {
          "Sorting": "Ascending Completion Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Ascending Completion Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in ascending order based on their completion time."
      },
      {
        "ID": "TC254",
        "Title": "Verify Sorting Tasks by Descending Completion Time",
        "Test Data": {
          "Sorting": "Descending Completion Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Descending Completion Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in descending order based on their completion time."
      },
      {
        "ID": "TC255",
        "Title": "Verify Sorting Tasks by Ascending Last Modified Time",
        "Test Data": {
          "Sorting": "Ascending Last Modified Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Ascending Last Modified Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in ascending order based on their last modified time."
      },
      {
        "ID": "TC256",
        "Title": "Verify Sorting Tasks by Descending Last Modified Time",
        "Test Data": {
          "Sorting": "Descending Last Modified Time"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select 'Descending Last Modified Time' sorting option  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in descending order based on their last modified time."
      },
      {
        "ID": "TC257",
        "Title": "Verify No Tasks Displayed for Invalid Sorting",
        "Test Data": {
          "Sorting": "Invalid Sorting"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Select an invalid sorting option  3. Apply the sorting",
        "Expected Result": "No tasks should be displayed, and a message indicating invalid sorting should be shown."
      },
      {
        "ID": "TC258",
        "Title": "Verify No Tasks Displayed for No Sorting Selected",
        "Test Data": {
          "Sorting": ""
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Do not select any sorting option  3. Apply the sorting",
        "Expected Result": "No tasks should be displayed."
      },
      {
        "ID": "TC259",
        "Title": "Verify Default Sorting by Ascending Due Time",
        "Test Data": {
          "Sorting": "Default"
        },
        "Preconditions": "User is logged in and navigated to the task sorting page",
        "Steps to Replicate": "1. Navigate to the task sorting page  2. Apply default sorting  3. Apply the sorting",
        "Expected Result": "Tasks should be sorted in ascending order based on their due time by default."
      },
      {
        "ID": "TC260",
        "Title": "Verify Adding a New Column for Task Priority",
        "Test Data": {
          "Column": "Task Priority"
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Add a new column for 'Task Priority'  3. Save the settings",
        "Expected Result": "The 'Task Priority' column should be added to the task display."
      },
      {
        "ID": "TC261",
        "Title": "Verify Removing an Existing Column for Due Date",
        "Test Data": {
          "Column": "Due Date"
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Remove the existing column for 'Due Date'  3. Save the settings",
        "Expected Result": "The 'Due Date' column should be removed from the task display."
      },
      {
        "ID": "TC262",
        "Title": "Verify Reordering Columns",
        "Test Data": {
          "Columns": ["Task Name", "Priority", "Due Date"]
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Reorder the columns as per the test data  3. Save the settings",
        "Expected Result": "Columns should be displayed in the specified order."
      },
      {
        "ID": "TC263",
        "Title": "Verify Adding Multiple New Columns",
        "Test Data": {
          "Columns": ["Start Date", "End Date"]
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Add new columns for 'Start Date' and 'End Date'  3. Save the settings",
        "Expected Result": "The 'Start Date' and 'End Date' columns should be added to the task display."
      },
      {
        "ID": "TC264",
        "Title": "Verify Removing Multiple Existing Columns",
        "Test Data": {
          "Columns": ["Description", "Assigned To"]
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Remove existing columns for 'Description' and 'Assigned To'  3. Save the settings",
        "Expected Result": "The 'Description' and 'Assigned To' columns should be removed from the task display."
      },
      {
        "ID": "TC265",
        "Title": "Verify Editing Column Name",
        "Test Data": {
          "Column": "Task Name",
          "New Name": "Task Title"
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Edit the column name for 'Task Name' to 'Task Title'  3. Save the settings",
        "Expected Result": "The column name should be updated from 'Task Name' to 'Task Title' in the task display."
      },
      {
        "ID": "TC266",
        "Title": "Verify Adding Existing Column",
        "Test Data": {
          "Column": "Due Date"
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Attempt to add an existing column 'Due Date'  3. Save the settings",
        "Expected Result": "No changes should occur, and an error message should indicate that the column already exists."
      },
      {
        "ID": "TC267",
        "Title": "Verify Removing Nonexistent Column",
        "Test Data": {
          "Column": "Invalid Column"
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Attempt to remove a nonexistent column 'Invalid Column'  3. Save the settings",
        "Expected Result": "No changes should occur, and an error message should indicate that the column does not exist."
      },
      {
        "ID": "TC268",
        "Title": "Verify Adding Duplicate Columns",
        "Test Data": {
          "Columns": ["Task Name", "Task Name"]
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Add a duplicate column 'Task Name'  3. Save the settings",
        "Expected Result": "No changes should occur, and an error message should indicate that the column already exists."
      },
      {
        "ID": "TC269",
        "Title": "Verify Removing All Columns",
        "Test Data": {
          "Columns": []
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Remove all columns  3. Save the settings",
        "Expected Result": "No columns should be displayed in the task display."
      },
      {
        "ID": "TC270",
        "Title": "Verify No Changes Made",
        "Test Data": {
          "No Changes": true
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Make no changes  3. Save the settings",
        "Expected Result": "No changes should occur, and the task display should remain unchanged."
      },
      {
        "ID": "TC271",
        "Title": "Verify Changing Column Order with Drag and Drop",
        "Test Data": {
          "New Order": ["Priority", "Due Date", "Task Name"]
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Rearrange columns using drag and drop  3. Save the settings",
        "Expected Result": "Columns should be displayed in the specified order."
      },
      {
        "ID": "TC272",
        "Title": "Verify Resetting to Default Columns",
        "Test Data": {
          "Reset": true
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Click on 'Reset to Default'  3. Confirm the action",
        "Expected Result": "Columns should be reset to default settings."
      },
      {
        "ID": "TC273",
        "Title": "Verify Adding a New Column After Last Column",
        "Test Data": {
          "Column": "Start Date"
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Add a new column for 'Start Date' after the last column  3. Save the settings",
        "Expected Result": "The 'Start Date' column should be added after the last column in the task display."
      },
      {
        "ID": "TC274",
        "Title": "Verify Reverting Changes",
        "Test Data": {
          "Revert": true
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Make changes to the columns  3. Click on 'Revert Changes'  4. Confirm the action",
        "Expected Result": "Changes made to the columns should be reverted to the previous state."
      },
      {
        "ID": "TC275",
        "Title": "Verify Saving Changes Without Applying",
        "Test Data": {
          "Save Without Apply": true
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Make changes to the columns  3. Click on 'Save' without applying the changes",
        "Expected Result": "Changes should not be saved until the changes are applied."
      },
      {
        "ID": "TC276",
        "Title": "Verify Task Display with Default Columns",
        "Test Data": {
          "Default Columns": true
        },
        "Preconditions": "User is logged in and navigated to the task display settings page",
        "Steps to Replicate": "1. Navigate to the task display settings page  2. Click on 'Default Columns'  3. Confirm the action",
        "Expected Result": "Columns should be reset to default settings."
      },
      {
        "ID": "TC277",
        "Title": "Verify Pipeline Creation with Valid Name and Description",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "This is a test pipeline."
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter valid name and description  3. Click on 'Create Pipeline'",
        "Expected Result": "A new pipeline named 'New Pipeline' with the description 'This is a test pipeline' should be created."
      },
      {
        "ID": "TC278",
        "Title": "Verify Pipeline Creation with Invalid Name",
        "Test Data": {
          "Name": "",
          "Description": "This is a test pipeline."
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter an invalid empty name  3. Enter a valid description  4. Click on 'Create Pipeline'",
        "Expected Result": "An error message should indicate that the name field is required."
      },
      {
        "ID": "TC279",
        "Title": "Verify Pipeline Creation with Invalid Description",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": ""
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter a valid name  3. Enter an invalid empty description  4. Click on 'Create Pipeline'",
        "Expected Result": "An error message should indicate that the description field is required."
      },
      {
        "ID": "TC280",
        "Title": "Verify Pipeline Creation with Duplicate Name",
        "Test Data": {
          "Name": "Existing Pipeline",
          "Description": "This is a test pipeline."
        },
        "Preconditions": "User is logged in, and there exists a pipeline named 'Existing Pipeline'",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter an existing pipeline name 'Existing Pipeline'  3. Enter a valid description  4. Click on 'Create Pipeline'",
        "Expected Result": "An error message should indicate that a pipeline with the same name already exists."
      },
      {
        "ID": "TC281",
        "Title": "Verify Pipeline Creation with Max Length Name",
        "Test Data": {
          "Name": "Pipeline with Max Length Name Pipeline with Max Length Name Pipeline with Max Length Name Pipeline with Max Length Name",
          "Description": "This is a test pipeline."
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter a name with the maximum allowed characters  3. Enter a valid description  4. Click on 'Create Pipeline'",
        "Expected Result": "A new pipeline with the maximum length name should be created successfully."
      },
      {
        "ID": "TC282",
        "Title": "Verify Pipeline Creation with Max Length Description",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "Description with Max Length Description with Max Length Description with Max Length Description with Max Length Description with Max Length Description with Max Length Description with Max Length Description with Max Length Description with Max Length Description with Max Length"
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter a valid name  3. Enter a description with the maximum allowed characters  4. Click on 'Create Pipeline'",
        "Expected Result": "A new pipeline with the maximum length description should be created successfully."
      },
      {
        "ID": "TC283",
        "Title": "Verify Pipeline Creation with Valid Tags",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "This is a test pipeline.",
          "Tags": ["tag1", "tag2", "tag3"]
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter valid name and description  3. Add valid tags  4. Click on 'Create Pipeline'",
        "Expected Result": "A new pipeline with the provided tags should be created successfully."
      },
      {
        "ID": "TC284",
        "Title": "Verify Pipeline Creation with Invalid Tags",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "This is a test pipeline.",
          "Tags": ["invalid tag"]
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter valid name and description  3. Add invalid tag  4. Click on 'Create Pipeline'",
        "Expected Result": "An error message should indicate that the provided tag is invalid."
      },
      {
        "ID": "TC285",
        "Title": "Verify Pipeline Creation with No Tags",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "This is a test pipeline.",
          "Tags": []
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter valid name and description  3. Do not add any tags  4. Click on 'Create Pipeline'",
        "Expected Result": "A new pipeline should be created successfully without any tags."
      },
      {
        "ID": "TC286",
        "Title": "Verify Pipeline Creation Cancelled",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "This is a test pipeline."
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter valid name and description  3. Click on 'Cancel'",
        "Expected Result": "No new pipeline should be created, and the user should be redirected to the previous page."
      },
      {
        "ID": "TC287",
        "Title": "Verify Pipeline Creation with Invalid Characters in Name",
        "Test Data": {
          "Name": "New Pipeline@",
          "Description": "This is a test pipeline."
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter a name with invalid characters  3. Enter a valid description  4. Click on 'Create Pipeline'",
        "Expected Result": "An error message should indicate that the name contains invalid characters."
      },
      {
        "ID": "TC288",
        "Title": "Verify Pipeline Creation with Invalid Characters in Description",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "This is a test pipeline@."
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter a valid name  3. Enter a description with invalid characters  4. Click on 'Create Pipeline'",
        "Expected Result": "An error message should indicate that the description contains invalid characters."
      },
      {
        "ID": "TC289",
        "Title": "Verify Pipeline Creation with Maximum Tags",
        "Test Data": {
          "Name": "New Pipeline",
          "Description": "This is a test pipeline.",
          "Tags": ["tag1", "tag2", "tag3", "tag4", "tag5", "tag6", "tag7", "tag8", "tag9", "tag10"]
        },
        "Preconditions": "User is logged in and navigated to the pipeline creation page",
        "Steps to Replicate": "1. Navigate to the pipeline creation page  2. Enter valid name and description  3. Add maximum number of tags  4. Click on 'Create Pipeline'",
        "Expected Result": "A new pipeline with the maximum allowed tags should be created successfully."
      },
      {
        "ID": "TC290",
        "Title": "Verify Editing Pipeline Stage Name with Valid Data",
        "Test Data": {
          "New Name": "Updated Stage Name"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a new valid stage name  5. Click on 'Save'",
        "Expected Result": "The stage name should be updated to 'Updated Stage Name'."
      },
      {
        "ID": "TC291",
        "Title": "Verify Editing Pipeline Stage Name with Empty Data",
        "Test Data": {
          "New Name": ""
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Leave the stage name empty  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the stage name field is required."
      },
      {
        "ID": "TC292",
        "Title": "Verify Editing Pipeline Stage with Invalid Characters in Name",
        "Test Data": {
          "New Name": "Invalid@Name"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a name with invalid characters  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the stage name contains invalid characters."
      },
      {
        "ID": "TC293",
        "Title": "Verify Editing Pipeline Stage Description with Valid Data",
        "Test Data": {
          "New Description": "Updated description for the stage."
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a new valid description  5. Click on 'Save'",
        "Expected Result": "The stage description should be updated to 'Updated description for the stage.'"
      },
      {
        "ID": "TC294",
        "Title": "Verify Editing Pipeline Stage Description with Invalid Characters",
        "Test Data": {
          "New Description": "Invalid description@"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a description with invalid characters  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the description contains invalid characters."
      },
      {
        "ID": "TC295",
        "Title": "Verify Editing Pipeline Stage Position",
        "Test Data": {
          "New Position": 3
        },
        "Preconditions": "User is logged in and has an existing pipeline with multiple stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Change the stage position  5. Click on 'Save'",
        "Expected Result": "The stage should be moved to the new specified position."
      },
      {
        "ID": "TC296",
        "Title": "Verify Cancelling Pipeline Stage Edit",
        "Test Data": {
          "New Name": "Updated Stage Name"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a new stage name  5. Click on 'Cancel'",
        "Expected Result": "The stage name should not be updated and should remain the same."
      },
      {
        "ID": "TC297",
        "Title": "Verify Editing Pipeline Stage with Maximum Length Name",
        "Test Data": {
          "New Name": "This is a very long stage name that exceeds the normal length limit to test the maximum allowed characters"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a name with maximum length  5. Click on 'Save'",
        "Expected Result": "The stage name should be updated to the maximum length allowed."
      },
      {
        "ID": "TC298",
        "Title": "Verify Editing Pipeline Stage with Maximum Length Description",
        "Test Data": {
          "New Description": "This is a very long stage description that exceeds the normal length limit to test the maximum allowed characters for description fields in pipeline stages."
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a description with maximum length  5. Click on 'Save'",
        "Expected Result": "The stage description should be updated to the maximum length allowed."
      },
      {
        "ID": "TC299",
        "Title": "Verify Editing Pipeline Stage with Duplicate Name",
        "Test Data": {
          "New Name": "Existing Stage Name"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a name that already exists in another stage  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the stage name already exists."
      },
      {
        "ID": "TC300",
        "Title": "Verify Editing Pipeline Stage with HTML Tags in Name",
        "Test Data": {
          "New Name": "<h1>Stage Name</h1>"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a name with HTML tags  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the stage name contains invalid characters."
      },
      {
        "ID": "TC301",
        "Title": "Verify Editing Pipeline Stage with HTML Tags in Description",
        "Test Data": {
          "New Description": "<p>Description</p>"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a description with HTML tags  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the description contains invalid characters."
      },
      {
        "ID": "TC302",
        "Title": "Verify Editing Pipeline Stage with SQL Injection",
        "Test Data": {
          "New Name": "'; DROP TABLE stages;--"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a name with SQL injection  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the stage name contains invalid characters."
      },
      {
        "ID": "TC303",
        "Title": "Verify Editing Pipeline Stage with Special Characters in Name",
        "Test Data": {
          "New Name": "!@#$%^&*()_+"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a name with special characters  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the stage name contains invalid characters."
      },
      {
        "ID": "TC304",
        "Title": "Verify Editing Pipeline Stage with Long Numeric Name",
        "Test Data": {
          "New Name": "123456789012345678901234567890"
        },
        "Preconditions": "User is logged in and has an existing pipeline with stages",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing stage  3. Click on 'Edit'  4. Enter a long numeric name  5. Click on 'Save'",
        "Expected Result": "The stage name should be updated to the long numeric name."
      },
      {
        "ID": "TC305",
        "Title": "Verify Creating Deal with Valid Data",
        "Test Data": {
          "Deal Name": "New Deal",
          "Amount": 1000,
          "Close Date": "2024-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Enter valid deal details  4. Click on 'Save'",
        "Expected Result": "A new deal named 'New Deal' should be created and displayed in the 'Initial Contact' stage."
      },
      {
        "ID": "TC306",
        "Title": "Verify Creating Deal with Missing Deal Name",
        "Test Data": {
          "Deal Name": "",
          "Amount": 1000,
          "Close Date": "2024-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Leave the deal name empty  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the deal name is required."
      },
      {
        "ID": "TC307",
        "Title": "Verify Creating Deal with Invalid Amount",
        "Test Data": {
          "Deal Name": "New Deal",
          "Amount": "invalid",
          "Close Date": "2024-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Enter an invalid amount  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the amount must be a number."
      },
      {
        "ID": "TC308",
        "Title": "Verify Creating Deal with Past Close Date",
        "Test Data": {
          "Deal Name": "New Deal",
          "Amount": 1000,
          "Close Date": "2023-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Enter a past close date  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the close date cannot be in the past."
      },
      {
        "ID": "TC309",
        "Title": "Verify Creating Deal without Stage",
        "Test Data": {
          "Deal Name": "New Deal",
          "Amount": 1000,
          "Close Date": "2024-12-31",
          "Stage": ""
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Leave the stage empty  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the stage is required."
      },
      {
        "ID": "TC310",
        "Title": "Verify Creating Deal with Maximum Length Name",
        "Test Data": {
          "Deal Name": "This is a very long deal name that exceeds the normal length limit to test the maximum allowed characters",
          "Amount": 1000,
          "Close Date": "2024-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Enter a maximum length deal name  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "The deal should be created with the maximum length name allowed."
      },
      {
        "ID": "TC311",
        "Title": "Verify Editing an Existing Deal",
        "Test Data": {
          "Deal Name": "Updated Deal Name",
          "Amount": 1500,
          "Close Date": "2024-11-30",
          "Stage": "Negotiation"
        },
        "Preconditions": "User is logged in and has an existing deal in the pipeline",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing deal  3. Click on 'Edit'  4. Update the deal details  5. Click on 'Save'",
        "Expected Result": "The deal details should be updated to the new values."
      },
      {
        "ID": "TC312",
        "Title": "Verify Deleting an Existing Deal",
        "Test Data": {
          "Deal ID": "12345"
        },
        "Preconditions": "User is logged in and has an existing deal in the pipeline",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing deal  3. Click on 'Delete'  4. Confirm the deletion",
        "Expected Result": "The selected deal should be deleted from the pipeline."
      },
      {
        "ID": "TC313",
        "Title": "Verify Moving Deal to Next Stage",
        "Test Data": {
          "Deal ID": "12345",
          "New Stage": "Proposal"
        },
        "Preconditions": "User is logged in and has an existing deal in the pipeline",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing deal  3. Drag and drop the deal to the next stage",
        "Expected Result": "The deal should be moved to the 'Proposal' stage."
      },
      {
        "ID": "TC314",
        "Title": "Verify Moving Deal to Previous Stage",
        "Test Data": {
          "Deal ID": "12345",
          "New Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and has an existing deal in the pipeline",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Select an existing deal  3. Drag and drop the deal to the previous stage",
        "Expected Result": "The deal should be moved back to the 'Initial Contact' stage."
      },
      {
        "ID": "TC315",
        "Title": "Verify Creating Deal with Special Characters in Name",
        "Test Data": {
          "Deal Name": "!@#$%^&*()_+",
          "Amount": 1000,
          "Close Date": "2024-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Enter a deal name with special characters  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the deal name contains invalid characters."
      },
      {
        "ID": "TC316",
        "Title": "Verify Creating Deal with Negative Amount",
        "Test Data": {
          "Deal Name": "New Deal",
          "Amount": -1000,
          "Close Date": "2024-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Enter a negative amount  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the amount must be a positive number."
      },
      {
        "ID": "TC317",
        "Title": "Verify Creating Deal with Future Close Date",
        "Test Data": {
          "Deal Name": "Future Deal",
          "Amount": 2000,
          "Close Date": "2025-12-31",
          "Stage": "Initial Contact"
        },
        "Preconditions": "User is logged in and navigated to the pipeline page",
        "Steps to Replicate": "1. Navigate to the pipeline page  2. Click on 'Add Deal'  3. Enter a future close date  4. Enter other valid deal details  5. Click on 'Save'",
        "Expected Result": "The deal should be created successfully with the future close date."
      },
      {
        "ID": "TC318",
        "Title": "Verify Setting a Reminder with Valid Data",
        "Test Data": {
          "Reminder Title": "Meeting with Client",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Reminder Note": "Discuss project requirements"
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Enter valid reminder details  4. Click on 'Save'",
        "Expected Result": "A new reminder titled 'Meeting with Client' should be created and displayed in the reminders list."
      },
      {
        "ID": "TC319",
        "Title": "Verify Setting a Reminder without Title",
        "Test Data": {
          "Reminder Title": "",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Reminder Note": "Discuss project requirements"
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Leave the reminder title empty  4. Enter other valid reminder details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the reminder title is required."
      },
      {
        "ID": "TC320",
        "Title": "Verify Setting a Reminder without Time",
        "Test Data": {
          "Reminder Title": "Meeting with Client",
          "Reminder Time": "",
          "Reminder Note": "Discuss project requirements"
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Leave the reminder time empty  4. Enter other valid reminder details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the reminder time is required."
      },
      {
        "ID": "TC321",
        "Title": "Verify Setting a Reminder with Past Time",
        "Test Data": {
          "Reminder Title": "Meeting with Client",
          "Reminder Time": "2023-06-15T10:00:00Z",
          "Reminder Note": "Discuss project requirements"
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Enter a past reminder time  4. Enter other valid reminder details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the reminder time cannot be in the past."
      },
      {
        "ID": "TC322",
        "Title": "Verify Editing an Existing Reminder",
        "Test Data": {
          "Reminder Title": "Updated Meeting",
          "Reminder Time": "2024-06-16T11:00:00Z",
          "Reminder Note": "Updated discussion points"
        },
        "Preconditions": "User is logged in and has an existing reminder",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Select an existing reminder  3. Click on 'Edit'  4. Update the reminder details  5. Click on 'Save'",
        "Expected Result": "The reminder details should be updated to the new values."
      },
      {
        "ID": "TC323",
        "Title": "Verify Deleting an Existing Reminder",
        "Test Data": {
          "Reminder ID": "12345"
        },
        "Preconditions": "User is logged in and has an existing reminder",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Select an existing reminder  3. Click on 'Delete'  4. Confirm the deletion",
        "Expected Result": "The selected reminder should be deleted from the reminders list."
      },
      {
        "ID": "TC324",
        "Title": "Verify Setting a Recurring Reminder",
        "Test Data": {
          "Reminder Title": "Weekly Team Meeting",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Recurring": true,
          "Frequency": "Weekly"
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Enter valid reminder details and set it as recurring  4. Click on 'Save'",
        "Expected Result": "A new recurring reminder should be created and displayed in the reminders list."
      },
      {
        "ID": "TC325",
        "Title": "Verify Setting a Reminder with Long Note",
        "Test Data": {
          "Reminder Title": "Detailed Meeting",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Reminder Note": "This is a very long note that exceeds the normal length limit to test the maximum allowed characters for reminder notes."
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Enter valid reminder details and a long note  4. Click on 'Save'",
        "Expected Result": "The reminder should be created with the long note allowed."
      },
      {
        "ID": "TC326",
        "Title": "Verify Creating Multiple Reminders at Once",
        "Test Data": [
          {
            "Reminder Title": "Meeting with Client 1",
            "Reminder Time": "2024-06-15T10:00:00Z",
            "Reminder Note": "Discuss project requirements"
          },
          {
            "Reminder Title": "Meeting with Client 2",
            "Reminder Time": "2024-06-15T11:00:00Z",
            "Reminder Note": "Discuss timeline"
          }
        ],
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Enter valid reminder details for multiple reminders  4. Click on 'Save' for each reminder",
        "Expected Result": "Multiple reminders should be created and displayed in the reminders list."
      },
      {
        "ID": "TC327",
        "Title": "Verify Setting a Reminder with Special Characters in Title",
        "Test Data": {
          "Reminder Title": "!@#$%^&*()_+",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Reminder Note": "Test special characters"
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Enter a title with special characters  4. Enter other valid reminder details  5. Click on 'Save'",
        "Expected Result": "An error message should indicate that the reminder title contains invalid characters."
      },
      {
        "ID": "TC328",
        "Title": "Verify Setting a Reminder with Maximum Length Title",
        "Test Data": {
          "Reminder Title": "This is a very long reminder title that exceeds the normal length limit to test the maximum allowed characters",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Reminder Note": "Test maximum title length"
        },
        "Preconditions": "User is logged in and navigated to the reminders page",
        "Steps to Replicate": "1. Navigate to the reminders page  2. Click on 'Add Reminder'  3. Enter a maximum length title  4. Enter other valid reminder details  5. Click on 'Save'",
        "Expected Result": "The reminder should be created with the maximum length title allowed."
      },
      {
        "ID": "TC329",
        "Title": "Verify Dismissing a Reminder Notification",
        "Test Data": {
          "Reminder Title": "Dismiss Reminder",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Reminder Note": "Test dismiss functionality"
        },
        "Preconditions": "User is logged in and has an upcoming reminder",
        "Steps to Replicate": "1. Wait for the reminder notification to appear  2. Click on 'Dismiss'",
        "Expected Result": "The reminder notification should be dismissed and not appear again."
      },
      {
        "ID": "TC330",
        "Title": "Verify Snoozing a Reminder Notification",
        "Test Data": {
          "Reminder Title": "Snooze Reminder",
          "Reminder Time": "2024-06-15T10:00:00Z",
          "Reminder Note": "Test snooze functionality"
        },
        "Preconditions": "User is logged in and has an upcoming reminder",
        "Steps to Replicate": "1. Wait for the reminder notification to appear  2. Click on 'Snooze'  3. Select the snooze duration  4. Confirm snooze",
        "Expected Result": "The reminder notification should be snoozed for the selected duration."
      },
      {
        "ID": "TC331",
        "Title": "Verify Sending SMS Notification",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS notification"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Navigate to the SMS sending interface  2. Enter recipient phone number  3. Compose a test SMS message  4. Click on 'Send'",
        "Expected Result": "Recipient should receive the SMS with the message 'Test SMS notification'."
      },
      {
        "ID": "TC332",
        "Title": "Verify SMS Delivery Confirmation",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS delivery confirmation"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send an SMS to the recipient  2. Wait for delivery confirmation",
        "Expected Result": "User should receive a delivery confirmation indicating successful delivery of the SMS."
      },
      {
        "ID": "TC333",
        "Title": "Verify Sending SMS with Unicode Characters",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS with Unicode characters: A unicode"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Navigate to the SMS sending interface  2. Enter recipient phone number  3. Compose an SMS with Unicode characters  4. Click on 'Send'",
        "Expected Result": "Recipient should receive the SMS with the Unicode characters intact."
      },
      {
        "ID": "TC334",
        "Title": "Verify Sending SMS to Multiple Recipients",
        "Test Data": {
          "Phone Numbers": ["+1234567890", "+1987654321"],
          "Message": "Test SMS to multiple recipients"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Navigate to the SMS sending interface  2. Enter multiple recipient phone numbers  3. Compose a test SMS message  4. Click on 'Send'",
        "Expected Result": "Both recipients should receive the SMS with the message 'Test SMS to multiple recipients'."
      },
      {
        "ID": "TC335",
        "Title": "Verify Handling SMS Delivery Failure",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS delivery failure scenario"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send an SMS to the recipient  2. Ensure recipient's phone is turned off or out of network  3. Wait for delivery failure notification",
        "Expected Result": "User should receive a notification indicating SMS delivery failure for the message."
      },
      {
        "ID": "TC336",
        "Title": "Verify SMS Character Limit",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS with a long message exceeding the character limit. This message should be truncated."
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Navigate to the SMS sending interface  2. Enter recipient phone number  3. Compose a long SMS message exceeding the character limit  4. Click on 'Send'",
        "Expected Result": "Recipient should receive the SMS truncated to fit within the character limit."
      },
      {
        "ID": "TC337",
        "Title": "Verify SMS Delivery Time",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS with delivery time verification"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send an SMS to the recipient  2. Note the time of sending  3. Wait for the SMS to be delivered  4. Verify the delivery time",
        "Expected Result": "The SMS should be delivered within a reasonable time frame from the sending time."
      },
      {
        "ID": "TC338",
        "Title": "Verify SMS Retry Mechanism",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS with retry mechanism"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send an SMS to the recipient  2. Simulate a network failure or temporary issue  3. Check if the SMS sending system retries automatically",
        "Expected Result": "The SMS sending system should retry sending the SMS in case of a failure, ensuring successful delivery."
      },
      {
        "ID": "TC339",
        "Title": "Verify SMS Queue Management",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS queue management"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send multiple SMS messages to the same recipient or different recipients  2. Observe the SMS sending queue status",
        "Expected Result": "SMS messages should be sent in the order they were queued, without skipping or reordering."
      },
      {
        "ID": "TC340",
        "Title": "Verify SMS Cost Calculation",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS cost calculation"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send an SMS to the recipient  2. Check the cost of sending the SMS",
        "Expected Result": "The calculated cost of sending the SMS should match the expected rate based on the recipient's location and message length."
      },
      {
        "ID": "TC341",
        "Title": "Verify Handling Invalid Phone Number Format",
        "Test Data": {
          "Phone Number": "1234567890",
          "Message": "Test SMS with invalid phone number format"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Navigate to the SMS sending interface  2. Enter an invalid phone number format  3. Compose a test SMS message  4. Click on 'Send'",
        "Expected Result": "System should prompt an error indicating that the phone number format is invalid and SMS should not be sent."
      },
      {
        "ID": "TC342",
        "Title": "Verify Sending SMS with Empty Message",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": ""
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Navigate to the SMS sending interface  2. Enter recipient phone number  3. Leave the message field empty  4. Click on 'Send'",
        "Expected Result": "System should prompt an error indicating that the message cannot be empty and SMS should not be sent."
      },
      {
        "ID": "TC343",
        "Title": "Verify Handling SMS Sending Limits",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS sending limits"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Attempt to send SMS messages exceeding the sending limits  2. Observe system response and behavior",
        "Expected Result": "System should enforce SMS sending limits and prevent sending additional SMS messages when the limit is reached."
      },
      {
        "ID": "TC344",
        "Title": "Verify Handling SMS Delivery to DND Numbers",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS delivery to DND (Do Not Disturb) number"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send an SMS to a phone number registered in DND (Do Not Disturb)  2. Verify SMS delivery status and system response",
        "Expected Result": "System should handle SMS delivery to DND numbers according to regulations and report the correct delivery status."
      },
      {
        "ID": "TC345",
        "Title": "Verify SMS Sending Performance",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Message": "Test SMS sending performance under load"
        },
        "Preconditions": "User has configured SMS settings and has permission to send SMS",
        "Steps to Replicate": "1. Send a large volume of SMS messages in a short period  2. Measure and analyze SMS sending performance metrics",
        "Expected Result": "System should maintain acceptable performance levels for sending SMS messages under load without delays or failures."
      },
      {
        "ID": "TC346",
        "Title": "Verify Joining Affiliate with Valid Information",
        "Test Data": {
          "Name": "John Doe",
          "Email": "john.doe@example.com",
          "Phone": "+1234567890",
          "Company": "Example Company",
          "Website": "https://example.com"
        },
        "Preconditions": "User navigates to the affiliate registration page",
        "Steps to Replicate": "1. Fill in valid affiliate registration details  2. Click on 'Join Now' or equivalent button",
        "Expected Result": "User should successfully join the affiliate program and receive a confirmation email."
      },
      {
        "ID": "TC347",
        "Title": "Verify Joining Affiliate with Incomplete Information",
        "Test Data": {
          "Name": "Jane Smith",
          "Email": "jane.smith@example.com"
        },
        "Preconditions": "User navigates to the affiliate registration page",
        "Steps to Replicate": "1. Fill in incomplete affiliate registration details  2. Attempt to submit the form",
        "Expected Result": "System should prompt for required fields and prevent submission until all required fields are filled."
      },
      {
        "ID": "TC348",
        "Title": "Verify Joining Affiliate with Invalid Email Format",
        "Test Data": {
          "Name": "David Brown",
          "Email": "invalidemail",
          "Phone": "+1987654321",
          "Company": "Test Corp",
          "Website": "https://testcorp.com"
        },
        "Preconditions": "User navigates to the affiliate registration page",
        "Steps to Replicate": "1. Enter an invalid email format  2. Fill in other required fields correctly  3. Click on 'Join Now' or equivalent button",
        "Expected Result": "System should prompt an error indicating invalid email format and prevent submission."
      },
      {
        "ID": "TC349",
        "Title": "Verify Joining Affiliate with Existing Email Address",
        "Test Data": {
          "Name": "Emily Green",
          "Email": "emily.green@example.com",
          "Phone": "+1122334455",
          "Company": "Green Solutions",
          "Website": "https://greensolutions.com"
        },
        "Preconditions": "User navigates to the affiliate registration page",
        "Steps to Replicate": "1. Enter an email address that is already registered as an affiliate  2. Fill in other required fields correctly  3. Click on 'Join Now' or equivalent button",
        "Expected Result": "System should prompt an error indicating that the email address is already registered."
      },
      {
        "ID": "TC350",
        "Title": "Verify Joining Affiliate with Invalid Phone Number Format",
        "Test Data": {
          "Name": "Alex Turner",
          "Email": "alex.turner@example.com",
          "Phone": "1234567890",
          "Company": "Turner Enterprises",
          "Website": "https://turnerenterprises.com"
        },
        "Preconditions": "User navigates to the affiliate registration page",
        "Steps to Replicate": "1. Enter an invalid phone number format  2. Fill in other required fields correctly  3. Click on 'Join Now' or equivalent button",
        "Expected Result": "System should prompt an error indicating invalid phone number format and prevent submission."
      },
      {
        "ID": "TC351",
        "Title": "Verify Joining Affiliate with Existing Company Name",
        "Test Data": {
          "Name": "Sarah Johnson",
          "Email": "sarah.johnson@example.com",
          "Phone": "+9876543210",
          "Company": "Example Company",
          "Website": "https://examplecompany.com"
        },
        "Preconditions": "User navigates to the affiliate registration page",
        "Steps to Replicate": "1. Enter a company name that is already registered as an affiliate  2. Fill in other required fields correctly  3. Click on 'Join Now' or equivalent button",
        "Expected Result": "System should prompt an error indicating that the company name is already registered."
      },
      {
        "ID": "TC352",
        "Title": "Verify Joining Affiliate with Website URL",
        "Test Data": {
          "Name": "Michael White",
          "Email": "michael.white@example.com",
          "Phone": "+1122334455",
          "Company": "White Solutions",
          "Website": "invalidurl"
        },
        "Preconditions": "User navigates to the affiliate registration page",
        "Steps to Replicate": "1. Enter an invalid website URL format  2. Fill in other required fields correctly  3. Click on 'Join Now' or equivalent button",
        "Expected Result": "System should prompt an error indicating invalid website URL format and prevent submission."
      },
      {
        "ID": "TC353",
        "Title": "Verify Joining Affiliate with Valid Information and Agreement",
        "Test Data": {
          "Name": "Jessica Lee",
          "Email": "jessica.lee@example.com",
          "Phone": "+9876543210",
          "Company": "Lee Enterprises",
          "Website": "https://leeenterprises.com",
          "Agreement": true
        },
        "Preconditions": "User navigates to the affiliate registration page with agreement checkbox",
        "Steps to Replicate": "1. Fill in valid affiliate registration details  2. Check the agreement checkbox  3. Click on 'Join Now' or equivalent button",
        "Expected Result": "User should successfully join the affiliate program after agreeing to terms and conditions."
      },
      {
        "ID": "TC354",
        "Title": "Verify Joining Affiliate without Checking Agreement",
        "Test Data": {
          "Name": "Mark Brown",
          "Email": "mark.brown@example.com",
          "Phone": "+1122334455",
          "Company": "Brown Solutions",
          "Website": "https://brownsolutions.com",
          "Agreement": false
        },
        "Preconditions": "User navigates to the affiliate registration page with agreement checkbox",
        "Steps to Replicate": "1. Fill in valid affiliate registration details  2. Leave the agreement checkbox unchecked  3. Click on 'Join Now' or equivalent button",
        "Expected Result": "System should prompt an error indicating that the agreement checkbox must be checked to proceed."
      },
      {
        "ID": "TC355",
        "Title": "Verify Joining Affiliate with Terms and Conditions Link",
        "Test Data": {
          "Name": "Laura Davis",
          "Email": "laura.davis@example.com",
          "Phone": "+9876543210",
          "Company": "Davis Enterprises",
          "Website": "https://davisenterprises.com",
          "Terms and Conditions Link": "https://example.com/terms"
        },
        "Preconditions": "User navigates to the affiliate registration page with terms and conditions link",
        "Steps to Replicate": "1. Fill in valid affiliate registration details  2. Click on terms and conditions link  3. Review terms and conditions  4. Agree to terms and conditions  5. Click on 'Join Now' or equivalent button",
        "Expected Result": "User should successfully join the affiliate program after agreeing to reviewed terms and conditions."
      },
      {
        "ID": "TC356",
        "Title": "Verify Joining Affiliate with Terms and Conditions Popup",
        "Test Data": {
          "Name": "Kevin Wilson",
          "Email": "kevin.wilson@example.com",
          "Phone": "+1122334455",
          "Company": "Wilson Enterprises",
          "Website": "https://wilsonenterprises.com",
          "Terms and Conditions Popup": true
        },
        "Preconditions": "User navigates to the affiliate registration page with terms and conditions popup",
        "Steps to Replicate": "1. Fill in valid affiliate registration details  2. Click on 'Join Now' or equivalent button  3. Review terms and conditions popup  4. Agree to terms and conditions  5. Click on 'Join Now' or equivalent button",
        "Expected Result": "User should successfully join the affiliate program after agreeing to reviewed terms and conditions in the popup."
      },
      {
        "ID": "TC357",
        "Title": "Verify Resending Affiliate Confirmation Email",
        "Test Data": {
          "Name": "Sophia Miller",
          "Email": "sophia.miller@example.com",
          "Phone": "+9876543210",
          "Company": "Miller Enterprises",
          "Website": "https://millerenterprises.com"
        },
        "Preconditions": "User has previously joined as an affiliate and may need to resend confirmation email",
        "Steps to Replicate": "1. Navigate to the affiliate dashboard or profile  2. Find option to resend confirmation email  3. Click on 'Resend' or equivalent button",
        "Expected Result": "User should receive a new confirmation email to verify their affiliate registration."
      },
      {
        "ID": "TC358",
        "Title": "Verify Changing Affiliate Account Password",
        "Test Data": {
          "Username": "affiliate_user",
          "Current Password": "oldpassword",
          "New Password": "newpassword"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the account settings page  2. Find the password change section  3. Enter current password and new password  4. Click on 'Save' or equivalent button",
        "Expected Result": "Password should be updated successfully, and user should be able to login with the new password."
      },
      {
        "ID": "TC359",
        "Title": "Verify Updating Affiliate Contact Information",
        "Test Data": {
          "Username": "affiliate_user",
          "New Email": "newemail@example.com",
          "New Phone": "+1234567890"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the account settings page  2. Find the contact information section  3. Update email and phone number  4. Click on 'Save' or equivalent button",
        "Expected Result": "Contact information should be updated successfully."
      },
      {
        "ID": "TC360",
        "Title": "Verify Enabling Two-Factor Authentication (2FA)",
        "Test Data": {
          "Username": "affiliate_user"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the account security settings page  2. Find the two-factor authentication section  3. Enable two-factor authentication  4. Follow the setup process (e.g., scan QR code, enter code)  5. Click on 'Save' or equivalent button",
        "Expected Result": "Two-factor authentication should be enabled successfully."
      },
      {
        "ID": "TC361",
        "Title": "Verify Disabling Two-Factor Authentication (2FA)",
        "Test Data": {
          "Username": "affiliate_user"
        },
        "Preconditions": "User has two-factor authentication enabled",
        "Steps to Replicate": "1. Navigate to the account security settings page  2. Find the two-factor authentication section  3. Disable two-factor authentication  4. Click on 'Save' or equivalent button",
        "Expected Result": "Two-factor authentication should be disabled successfully."
      },
      {
        "ID": "TC362",
        "Title": "Verify Updating Payment Settings",
        "Test Data": {
          "Username": "affiliate_user",
          "Payment Method": "PayPal",
          "PayPal Email": "paypal@example.com"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the payment settings page  2. Update payment method and payment details  3. Click on 'Save' or equivalent button",
        "Expected Result": "Payment settings should be updated successfully."
      },
      {
        "ID": "TC363",
        "Title": "Verify Setting Affiliate Payout Threshold",
        "Test Data": {
          "Username": "affiliate_user",
          "Payout Threshold": "$100"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the payout settings page  2. Set a new payout threshold  3. Click on 'Save' or equivalent button",
        "Expected Result": "Payout threshold should be set successfully."
      },
      {
        "ID": "TC364",
        "Title": "Verify Setting Affiliate Notification Preferences",
        "Test Data": {
          "Username": "affiliate_user",
          "Notification Preferences": {
            "Email": true,
            "SMS": false,
            "Push Notifications": true
          }
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the notification settings page  2. Update notification preferences  3. Click on 'Save' or equivalent button",
        "Expected Result": "Notification preferences should be updated successfully."
      },
      {
        "ID": "TC365",
        "Title": "Verify Accessing Affiliate Dashboard",
        "Test Data": {
          "Username": "affiliate_user",
          "Password": "password123"
        },
        "Preconditions": "User is an affiliate with valid login credentials",
        "Steps to Replicate": "1. Navigate to the affiliate login page  2. Enter valid login credentials  3. Click on 'Login' or equivalent button  4. Verify access to the affiliate dashboard",
        "Expected Result": "User should successfully access the affiliate dashboard."
      },
      {
        "ID": "TC366",
        "Title": "Verify Accessing Affiliate Reports",
        "Test Data": {
          "Username": "affiliate_user",
          "Password": "password123"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the affiliate dashboard  2. Find and click on 'Reports' or equivalent tab  3. Verify access to affiliate reports",
        "Expected Result": "User should successfully access the affiliate reports section."
      },
      {
        "ID": "TC367",
        "Title": "Verify Downloading Affiliate Reports",
        "Test Data": {
          "Username": "affiliate_user",
          "Password": "password123",
          "Report Type": "Sales Report"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the affiliate reports section  2. Select desired report type (e.g., Sales Report)  3. Click on 'Download' or equivalent button",
        "Expected Result": "Selected affiliate report should be downloaded successfully."
      },
      {
        "ID": "TC368",
        "Title": "Verify Accessing Affiliate Earnings",
        "Test Data": {
          "Username": "affiliate_user",
          "Password": "password123"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the affiliate dashboard  2. Find and click on 'Earnings' or equivalent tab  3. Verify access to affiliate earnings",
        "Expected Result": "User should successfully access the affiliate earnings section."
      },
      {
        "ID": "TC369",
        "Title": "Verify Updating Affiliate Profile Picture",
        "Test Data": {
          "Username": "affiliate_user",
          "New Profile Picture": "path/to/new/profile/picture.jpg"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the account settings page  2. Find the profile picture section  3. Upload a new profile picture  4. Click on 'Save' or equivalent button",
        "Expected Result": "Profile picture should be updated successfully."
      },
      {
        "ID": "TC370",
        "Title": "Verify Updating Affiliate Bank Information",
        "Test Data": {
          "Username": "affiliate_user",
          "Bank Name": "Example Bank",
          "Account Number": "1234567890",
          "Routing Number": "987654321"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the payout settings page  2. Update bank information  3. Click on 'Save' or equivalent button",
        "Expected Result": "Bank information should be updated successfully."
      },
      {
        "ID": "TC371",
        "Title": "Verify Accessing Affiliate Payment History",
        "Test Data": {
          "Username": "affiliate_user",
          "Password": "password123"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the affiliate dashboard  2. Find and click on 'Payment History' or equivalent tab  3. Verify access to affiliate payment history",
        "Expected Result": "User should successfully access the affiliate payment history section."
      },
      {
        "ID": "TC372",
        "Title": "Verify Setting Affiliate Payment Method",
        "Test Data": {
          "Username": "affiliate_user",
          "Payment Method": "Bank Transfer"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the payout settings page  2. Select desired payment method (e.g., Bank Transfer)  3. Fill in required details  4. Click on 'Save' or equivalent button",
        "Expected Result": "Payment method should be set successfully."
      },
      {
        "ID": "TC373",
        "Title": "Verify Cancelling Affiliate Account",
        "Test Data": {
          "Username": "affiliate_user",
          "Password": "password123"
        },
        "Preconditions": "User is logged into the affiliate account",
        "Steps to Replicate": "1. Navigate to the account settings page  2. Find the option to cancel or delete account  3. Follow the cancellation process (if any)  4. Confirm cancellation",
        "Expected Result": "Affiliate account should be cancelled successfully, and user should receive confirmation."
      },
      {
        "ID": "TC374",
        "Title": "Verify Basic Text Input",
        "Test Data": {
          "Input": "Hello, how are you?"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Hello, how are you?' to the assistant",
        "Expected Result": "Assistant should respond appropriately with a greeting or acknowledgment."
      },
      {
        "ID": "TC375",
        "Title": "Verify Handling of Incorrect Commands",
        "Test Data": {
          "Input": "Xyz123"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Xyz123' to the assistant",
        "Expected Result": "Assistant should respond indicating it doesn't understand the command or provide guidance."
      },
      {
        "ID": "TC376",
        "Title": "Verify Weather Information Query",
        "Test Data": {
          "Location": "New York"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'What's the weather like in New York?' to the assistant",
        "Expected Result": "Assistant should provide accurate weather information for the specified location."
      },
      {
        "ID": "TC377",
        "Title": "Verify Conversion Query",
        "Test Data": {
          "Conversion Query": "10 USD to EUR"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Convert 10 USD to EUR' to the assistant",
        "Expected Result": "Assistant should provide accurate currency conversion information."
      },
      {
        "ID": "TC378",
        "Title": "Verify Mathematical Calculation",
        "Test Data": {
          "Calculation": "25 * 4"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak '25 multiplied by 4' to the assistant",
        "Expected Result": "Assistant should provide correct result of the mathematical calculation."
      },
      {
        "ID": "TC379",
        "Title": "Verify Setting Reminders",
        "Test Data": {
          "Reminder": "Call John at 3 PM"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Remind me to call John at 3 PM' to the assistant",
        "Expected Result": "Assistant should acknowledge and set a reminder for the specified time."
      },
      {
        "ID": "TC380",
        "Title": "Verify Making Calendar Appointments",
        "Test Data": {
          "Appointment": "Meeting with Client A at 10 AM on Friday"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Schedule a meeting with Client A at 10 AM on Friday' to the assistant",
        "Expected Result": "Assistant should acknowledge and schedule the appointment in the calendar."
      },
      {
        "ID": "TC381",
        "Title": "Verify Sending Emails",
        "Test Data": {
          "Email": {
            "Recipient": "client@example.com",
            "Subject": "Meeting Agenda",
            "Body": "Please find the agenda attached."
          }
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Send an email to client@example.com with subject 'Meeting Agenda' and body 'Please find the agenda attached.'' to the assistant",
        "Expected Result": "Assistant should confirm and send the email as instructed."
      },
      {
        "ID": "TC382",
        "Title": "Verify Searching the Web",
        "Test Data": {
          "Query": "Best Italian restaurants near me"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Find the best Italian restaurants near me' to the assistant",
        "Expected Result": "Assistant should provide relevant search results based on the query."
      },
      {
        "ID": "TC383",
        "Title": "Verify Providing News Updates",
        "Test Data": {
          "Category": "Technology"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Give me technology news updates' to the assistant",
        "Expected Result": "Assistant should provide latest news updates in the specified category."
      },
      {
        "ID": "TC384",
        "Title": "Verify Setting Alarms",
        "Test Data": {
          "Alarm": "Set an alarm for 7 AM"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Set an alarm for 7 AM' to the assistant",
        "Expected Result": "Assistant should acknowledge and set an alarm for the specified time."
      },
      {
        "ID": "TC385",
        "Title": "Verify Playing Music",
        "Test Data": {
          "Song": "Shape of You by Ed Sheeran"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Play Shape of You by Ed Sheeran' to the assistant",
        "Expected Result": "Assistant should start playing the requested song or playlist."
      },
      {
        "ID": "TC386",
        "Title": "Verify Answering General Knowledge Questions",
        "Test Data": {
          "Question": "Who is the president of the United States?"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Who is the president of the United States?' to the assistant",
        "Expected Result": "Assistant should provide the correct answer to the general knowledge question."
      },
      {
        "ID": "TC387",
        "Title": "Verify Language Translation",
        "Test Data": {
          "Translation": {
            "Text": "Hello, how are you?",
            "From": "English",
            "To": "Spanish"
          }
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'Translate 'Hello, how are you?' from English to Spanish' to the assistant",
        "Expected Result": "Assistant should provide accurate translation of the text."
      },
      {
        "ID": "TC388",
        "Title": "Verify Integration with Smart Home Devices",
        "Test Data": {
          "Action": "Turn on the living room lights"
        },
        "Preconditions": "Assistant is integrated with smart home devices and active",
        "Steps to Replicate": "1. Type or speak 'Turn on the living room lights' to the assistant",
        "Expected Result": "Assistant should successfully execute the smart home device command."
      },
      {
        "ID": "TC389",
        "Title": "Verify Integration with Calendar for Event Updates",
        "Test Data": {
          "Event": "Add dentist appointment at 2 PM on Wednesday to calendar"
        },
        "Preconditions": "Assistant is active and integrated with calendar",
        "Steps to Replicate": "1. Type or speak 'Add dentist appointment at 2 PM on Wednesday to calendar' to the assistant",
        "Expected Result": "Assistant should add the event to the calendar successfully."
      },
      {
        "ID": "TC390",
        "Title": "Verify Answering FAQ Queries",
        "Test Data": {
          "Query": "What are your working hours?"
        },
        "Preconditions": "Assistant is active and ready to accept input",
        "Steps to Replicate": "1. Type or speak 'What are your working hours?' to the assistant",
        "Expected Result": "Assistant should provide accurate answer to the frequently asked question."
      },
      {
        "ID": "TC391",
        "Title": "Verify Page Load Time",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Navigate to the landing page URL",
        "Expected Result": "Page should load within 3 seconds."
      },
      {
        "ID": "TC392",
        "Title": "Verify Page Layout on Desktop",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Open the landing page on a desktop browser",
        "Expected Result": "Page layout should be visually appealing and responsive."
      },
      {
        "ID": "TC393",
        "Title": "Verify Page Layout on Mobile Devices",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Open the landing page on a mobile device",
        "Expected Result": "Page layout should be responsive and display correctly on mobile screens."
      },
      {
        "ID": "TC394",
        "Title": "Verify Navigation Links",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Click on each navigation link on the landing page",
        "Expected Result": "User should be redirected to the respective page without any errors."
      },
      {
        "ID": "TC395",
        "Title": "Verify Contact Form Functionality",
        "Test Data": {
          "Name": "John Doe",
          "Email": "john.doe@example.com",
          "Message": "Testing contact form functionality."
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Fill out the contact form with valid data and submit",
        "Expected Result": "Form submission should succeed and a confirmation message should be displayed."
      },
      {
        "ID": "TC396",
        "Title": "Verify Call to Action Buttons",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Click on each call to action button on the landing page",
        "Expected Result": "User should be directed to the appropriate section or action as indicated by the button."
      },
      {
        "ID": "TC397",
        "Title": "Verify Image Loading",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Check that all images on the landing page load correctly",
        "Expected Result": "All images should load without any errors or broken links."
      },
      {
        "ID": "TC398",
        "Title": "Verify Social Media Links",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Click on each social media icon or link on the landing page",
        "Expected Result": "User should be redirected to the respective social media profile or page."
      },
      {
        "ID": "TC399",
        "Title": "Verify Video Embedding",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Play embedded video(s) on the landing page",
        "Expected Result": "Video should play smoothly without buffering issues."
      },
      {
        "ID": "TC400",
        "Title": "Verify Testimonials Section",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Read or view testimonials on the landing page",
        "Expected Result": "Testimonials should be genuine and accurately reflect positive user experiences."
      },
      {
        "ID": "TC401",
        "Title": "Verify Pricing Information Display",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Check pricing information displayed on the landing page",
        "Expected Result": "Pricing details should be clear, accurate, and consistent."
      },
      {
        "ID": "TC402",
        "Title": "Verify FAQ Section",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Read through frequently asked questions (FAQs) on the landing page",
        "Expected Result": "FAQs should provide clear answers to common queries."
      },
      {
        "ID": "TC403",
        "Title": "Verify Newsletter Subscription Form",
        "Test Data": {
          "Email": "test.user@example.com"
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Enter a valid email address in the newsletter subscription form and submit",
        "Expected Result": "Subscription should be successful and a confirmation message should be displayed."
      },
      {
        "ID": "TC404",
        "Title": "Verify Accessibility Features",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Use accessibility tools to navigate and interact with the landing page",
        "Expected Result": "Page should meet accessibility standards and be usable for users with disabilities."
      },
      {
        "ID": "TC405",
        "Title": "Verify SEO Meta Tags",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Inspect meta tags (title, description, keywords) of the landing page",
        "Expected Result": "Meta tags should be optimized for search engines to improve visibility."
      },
      {
        "ID": "TC406",
        "Title": "Verify HTTPS Security",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Check for HTTPS protocol in the URL of the landing page",
        "Expected Result": "Page should be served over HTTPS to ensure secure data transmission."
      },
      {
        "ID": "TC407",
        "Title": "Verify Cookie Notification Compliance",
        "Test Data": {},
        "Preconditions": "None",
        "Steps to Replicate": "1. Access the landing page and interact with the cookie notification",
        "Expected Result": "Cookie notification should comply with relevant regulations (e.g., GDPR) and allow users to manage cookie preferences."
      },
      {
        "ID": "TC408",
        "Title": "Verify Gmail Account Connection",
        "Test Data": {
          "Email": "example@gmail.com",
          "Password": "your_password"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to Gmail integration settings  2. Enter valid Gmail credentials and connect account",
        "Expected Result": "Gmail account should be successfully connected without errors."
      },
      {
        "ID": "TC409",
        "Title": "Verify Email Syncing",
        "Test Data": {},
        "Preconditions": "Gmail account connected",
        "Steps to Replicate": "1. Send an email to the connected Gmail account  2. Check for email syncing within the application",
        "Expected Result": "Email should sync automatically and appear in the application inbox."
      },
      {
        "ID": "TC003",
        "Title": "Verify Email Read Status Sync",
        "Test Data": {},
        "Preconditions": "Email received in connected Gmail account",
        "Steps to Replicate": "1. Mark an email as read in Gmail  2. Check read status in the application inbox",
        "Expected Result": "Read status of the email should be synchronized correctly."
      },
      {
        "ID": "TC410",
        "Title": "Verify Email Deletion Sync",
        "Test Data": {},
        "Preconditions": "Email present in connected Gmail account",
        "Steps to Replicate": "1. Delete an email in Gmail  2. Verify email deletion in the application",
        "Expected Result": "Email should be removed from the application inbox upon deletion in Gmail."
      },
      {
        "ID": "TC411",
        "Title": "Verify Attachment Handling",
        "Test Data": {},
        "Preconditions": "Email with attachments sent to connected Gmail account",
        "Steps to Replicate": "1. Send an email with attachments to the Gmail account  2. Check for attachment handling in the application",
        "Expected Result": "Attachments should be displayed and downloadable within the application."
      },
      {
        "ID": "TC412",
        "Title": "Verify Email Search Functionality",
        "Test Data": {
          "Search Query": "Test"
        },
        "Preconditions": "Several emails present in connected Gmail account",
        "Steps to Replicate": "1. Perform a search for specific emails using search query  2. Verify search results in the application",
        "Expected Result": "Search results should display relevant emails based on the search query."
      },
      {
        "ID": "TC413",
        "Title": "Verify Email Sorting",
        "Test Data": {},
        "Preconditions": "Multiple emails present in connected Gmail account",
        "Steps to Replicate": "1. Sort emails by different criteria (e.g., date, sender)  2. Check email sorting in the application",
        "Expected Result": "Emails should be sorted correctly based on the selected criteria."
      },
      {
        "ID": "TC008",
        "Title": "Verify Email Labels",
        "Test Data": {},
        "Preconditions": "Emails with labels in connected Gmail account",
        "Steps to Replicate": "1. View emails with different labels in Gmail  2. Verify label display and handling in the application",
        "Expected Result": "Labels should be visible and correctly applied to emails within the application."
      },
      {
        "ID": "TC414",
        "Title": "Verify Email Reply Functionality",
        "Test Data": {},
        "Preconditions": "Email received in connected Gmail account",
        "Steps to Replicate": "1. Reply to an email from the application  2. Verify email reply is sent and received in Gmail",
        "Expected Result": "Recipient should receive the email reply and reply should be visible in Gmail."
      },
      {
        "ID": "TC415",
        "Title": "Verify Email Forwarding",
        "Test Data": {},
        "Preconditions": "Email received in connected Gmail account",
        "Steps to Replicate": "1. Forward an email from the application  2. Verify forwarded email is received in the recipient's inbox",
        "Expected Result": "Recipient should receive the forwarded email with all content intact."
      },
      {
        "ID": "TC416",
        "Title": "Verify Drafts Handling",
        "Test Data": {},
        "Preconditions": "Draft email saved in connected Gmail account",
        "Steps to Replicate": "1. Create and save a draft email in Gmail  2. Verify draft email is accessible and editable in the application",
        "Expected Result": "Draft email should be visible and editable in the application."
      },
      {
        "ID": "TC417",
        "Title": "Verify Spam Handling",
        "Test Data": {},
        "Preconditions": "Spam email received in connected Gmail account",
        "Steps to Replicate": "1. Check spam folder in Gmail for spam emails  2. Verify spam handling and visibility in the application",
        "Expected Result": "Spam emails should be correctly identified and displayed in the application's spam folder."
      },
      {
        "ID": "TC418",
        "Title": "Verify Email Notification Settings",
        "Test Data": {},
        "Preconditions": "Gmail account connected",
        "Steps to Replicate": "1. Adjust email notification settings in the application  2. Send test email and verify notification behavior",
        "Expected Result": "Notifications should be triggered based on configured settings for new emails."
      },
      {
        "ID": "TC419",
        "Title": "Verify Email Archiving",
        "Test Data": {},
        "Preconditions": "Emails present in connected Gmail account",
        "Steps to Replicate": "1. Archive emails in Gmail  2. Verify archived emails are accessible and visible in the application",
        "Expected Result": "Archived emails should be accessible and visible under archived section in the application."
      },
      {
        "ID": "TC420",
        "Title": "Verify Email Signature Integration",
        "Test Data": {
          "Signature": "Test Email Signature"
        },
        "Preconditions": "Gmail account connected",
        "Steps to Replicate": "1. Set up email signature in Gmail settings  2. Compose and send an email using the application",
        "Expected Result": "Email signature should be automatically appended to outgoing emails."
      },
      {
        "ID": "TC421",
        "Title": "Verify Multiple Gmail Account Integration",
        "Test Data": {
          "Emails": ["example1@gmail.com", "example2@gmail.com"]
        },
        "Preconditions": "None",
        "Steps to Replicate": "1. Connect multiple Gmail accounts to the application  2. Perform email operations across multiple accounts",
        "Expected Result": "Both Gmail accounts should be accessible and email operations should work independently for each account."
      },
      {
        "ID": "TC422",
        "Title": "Verify Email Encryption",
        "Test Data": {},
        "Preconditions": "Emails with sensitive content in connected Gmail account",
        "Steps to Replicate": "1. Send encrypted email from Gmail  2. Verify encrypted email handling in the application",
        "Expected Result": "Encrypted emails should be correctly decrypted and displayed in the application."
      },
      {
        "ID": "TC423",
        "Title": "Verify Google Account Connection",
        "Test Data": {
          "Google Account": "example@gmail.com",
          "Password": "your_password"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to Google Calendar integration settings  2. Enter valid Google credentials and connect account",
        "Expected Result": "Google account should be successfully connected without errors."
      },
      {
        "ID": "TC424",
        "Title": "Verify Calendar Events Syncing",
        "Test Data": {},
        "Preconditions": "Google account connected",
        "Steps to Replicate": "1. Create an event in Google Calendar  2. Check for event syncing within the application",
        "Expected Result": "Calendar event should sync automatically and appear in the application's calendar."
      },
      {
        "ID": "TC425",
        "Title": "Verify Event Details Display",
        "Test Data": {},
        "Preconditions": "Calendar event synced in connected Google Calendar",
        "Steps to Replicate": "1. Open the event details in Google Calendar  2. Verify event details display correctly in the application",
        "Expected Result": "Event details (title, time, location, description) should be displayed accurately."
      },
      {
        "ID": "TC426",
        "Title": "Verify Calendar Event Creation",
        "Test Data": {
          "Event Details": {
            "Title": "Test Event",
            "Date": "2024-06-15",
            "Time": "10:00 AM",
            "Location": "Test Location",
            "Description": "Test description for the event"
          }
        },
        "Preconditions": "Google account connected",
        "Steps to Replicate": "1. Create a new event within the application  2. Verify event creation in Google Calendar",
        "Expected Result": "Event should be created and visible in the connected Google Calendar."
      },
      {
        "ID": "TC427",
        "Title": "Verify Calendar Event Update",
        "Test Data": {
          "Updated Event Details": {
            "Title": "Updated Test Event",
            "Date": "2024-06-16",
            "Time": "2:00 PM",
            "Location": "Updated Test Location",
            "Description": "Updated description for the event"
          }
        },
        "Preconditions": "Existing event in connected Google Calendar",
        "Steps to Replicate": "1. Update event details within the application  2. Verify event details update in Google Calendar",
        "Expected Result": "Event details should be updated accordingly in the connected Google Calendar."
      },
      {
        "ID": "TC428",
        "Title": "Verify Calendar Event Deletion",
        "Test Data": {},
        "Preconditions": "Existing event in connected Google Calendar",
        "Steps to Replicate": "1. Delete an event within the application  2. Verify event deletion in Google Calendar",
        "Expected Result": "Event should be deleted from the connected Google Calendar."
      },
      {
        "ID": "TC429",
        "Title": "Verify Recurring Event Handling",
        "Test Data": {},
        "Preconditions": "Recurring event created in Google Calendar",
        "Steps to Replicate": "1. View and manage recurring event details in Google Calendar  2. Verify recurring event handling in the application",
        "Expected Result": "Recurring events should display correctly and be manageable within the application."
      },
      {
        "ID": "TC430",
        "Title": "Verify Calendar Event Invitation Handling",
        "Test Data": {},
        "Preconditions": "Event with invitations sent in Google Calendar",
        "Steps to Replicate": "1. Send event invitations from Google Calendar  2. Verify invitation handling and RSVP options in the application",
        "Expected Result": "Invitations should be sent and received correctly, with RSVP options available in the application."
      },
      {
        "ID": "TC431",
        "Title": "Verify Calendar Event Notification Settings",
        "Test Data": {},
        "Preconditions": "Google account connected",
        "Steps to Replicate": "1. Adjust event notification settings in the application  2. Create a test event and verify notification behavior",
        "Expected Result": "Notifications should be triggered based on configured settings for upcoming events."
      },
      {
        "ID": "TC432",
        "Title": "Verify Calendar Event Colors and Labels",
        "Test Data": {},
        "Preconditions": "Events with different colors and labels in Google Calendar",
        "Steps to Replicate": "1. Set different colors and labels for events in Google Calendar  2. Verify color and label display in the application",
        "Expected Result": "Event colors and labels should be visible and correctly displayed in the application's calendar view."
      },
      {
        "ID": "TC433",
        "Title": "Verify Calendar Event Search Functionality",
        "Test Data": {
          "Search Query": "Test Event"
        },
        "Preconditions": "Multiple events present in connected Google Calendar",
        "Steps to Replicate": "1. Perform a search for specific events using search query  2. Verify search results in the application",
        "Expected Result": "Search results should display relevant events based on the search query."
      },
      {
        "ID": "TC434",
        "Title": "Verify Calendar Event Time Zone Handling",
        "Test Data": {},
        "Preconditions": "Events with different time zones created in Google Calendar",
        "Steps to Replicate": "1. Create events with different time zones in Google Calendar  2. Verify time zone handling and display in the application",
        "Expected Result": "Event times should display correctly according to their respective time zones in the application."
      },
      {
        "ID": "TC435",
        "Title": "Verify Calendar Event Overlaps Handling",
        "Test Data": {},
        "Preconditions": "Events with overlapping times in Google Calendar",
        "Steps to Replicate": "1. Create events with overlapping times in Google Calendar  2. Verify event overlap handling and display in the application",
        "Expected Result": "Event overlaps should be visually indicated and handled correctly in the application."
      },
      {
        "ID": "TC436",
        "Title": "Verify Calendar Event Recurrence Pattern",
        "Test Data": {},
        "Preconditions": "Recurring event pattern set in Google Calendar",
        "Steps to Replicate": "1. Set up recurring event pattern (daily, weekly, monthly) in Google Calendar  2. Verify recurrence pattern display and management in the application",
        "Expected Result": "Recurring event pattern should display correctly and be manageable within the application."
      },
      {
        "ID": "TC437",
        "Title": "Verify Calendar Event Location Mapping",
        "Test Data": {},
        "Preconditions": "Events with specific locations set in Google Calendar",
        "Steps to Replicate": "1. Set events with specific locations in Google Calendar  2. Verify location mapping and navigation options in the application",
        "Expected Result": "Event locations should be mapped correctly and navigation options should be available in the application."
      },
      {
        "ID": "TC438",
        "Title": "Verify Calendar Event Reminder Settings",
        "Test Data": {},
        "Preconditions": "Google account connected",
        "Steps to Replicate": "1. Set event reminder settings in Google Calendar  2. Create a test event and verify reminder notifications in the application",
        "Expected Result": "Reminder notifications should be triggered based on configured settings for upcoming events."
      },
      {
        "ID": "TC439",
        "Title": "Verify Calendar Event Privacy Settings",
        "Test Data": {},
        "Preconditions": "Event with private visibility set in Google Calendar",
        "Steps to Replicate": "1. Set event with private visibility in Google Calendar  2. Verify privacy settings and access control in the application",
        "Expected Result": "Event privacy settings should be respected and enforced within the application."
      },
      {
        "ID": "TC440",
        "Title": "Verify Microsoft Account Connection",
        "Test Data": {
          "Microsoft Account": "example@hotmail.com",
          "Password": "your_password"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to Microsoft account integration settings  2. Enter valid Microsoft credentials and connect account",
        "Expected Result": "Microsoft account should be successfully connected without errors."
      },
      {
        "ID": "TC441",
        "Title": "Verify Calendar Events Syncing",
        "Test Data": {},
        "Preconditions": "Microsoft account connected",
        "Steps to Replicate": "1. Create an event in Microsoft Calendar  2. Check for event syncing within the application",
        "Expected Result": "Calendar event should sync automatically and appear in the application's calendar."
      },
      {
        "ID": "TC442",
        "Title": "Verify Event Details Display",
        "Test Data": {},
        "Preconditions": "Calendar event synced in connected Microsoft Calendar",
        "Steps to Replicate": "1. Open the event details in Microsoft Calendar  2. Verify event details display correctly in the application",
        "Expected Result": "Event details (title, time, location, description) should be displayed accurately."
      },
      {
        "ID": "TC443",
        "Title": "Verify Calendar Event Creation",
        "Test Data": {
          "Event Details": {
            "Title": "Test Event",
            "Date": "2024-06-15",
            "Time": "10:00 AM",
            "Location": "Test Location",
            "Description": "Test description for the event"
          }
        },
        "Preconditions": "Microsoft account connected",
        "Steps to Replicate": "1. Create a new event within the application  2. Verify event creation in Microsoft Calendar",
        "Expected Result": "Event should be created and visible in the connected Microsoft Calendar."
      },
      {
        "ID": "TC444",
        "Title": "Verify Calendar Event Update",
        "Test Data": {
          "Updated Event Details": {
            "Title": "Updated Test Event",
            "Date": "2024-06-16",
            "Time": "2:00 PM",
            "Location": "Updated Test Location",
            "Description": "Updated description for the event"
          }
        },
        "Preconditions": "Existing event in connected Microsoft Calendar",
        "Steps to Replicate": "1. Update event details within the application  2. Verify event details update in Microsoft Calendar",
        "Expected Result": "Event details should be updated accordingly in the connected Microsoft Calendar."
      },
      {
        "ID": "TC445",
        "Title": "Verify Calendar Event Deletion",
        "Test Data": {},
        "Preconditions": "Existing event in connected Microsoft Calendar",
        "Steps to Replicate": "1. Delete an event within the application  2. Verify event deletion in Microsoft Calendar",
        "Expected Result": "Event should be deleted from the connected Microsoft Calendar."
      },
      {
        "ID": "TC446",
        "Title": "Verify Recurring Event Handling",
        "Test Data": {},
        "Preconditions": "Recurring event created in Microsoft Calendar",
        "Steps to Replicate": "1. View and manage recurring event details in Microsoft Calendar  2. Verify recurring event handling in the application",
        "Expected Result": "Recurring events should display correctly and be manageable within the application."
      },
      {
        "ID": "TC447",
        "Title": "Verify Calendar Event Invitation Handling",
        "Test Data": {},
        "Preconditions": "Event with invitations sent in Microsoft Calendar",
        "Steps to Replicate": "1. Send event invitations from Microsoft Calendar  2. Verify invitation handling and RSVP options in the application",
        "Expected Result": "Invitations should be sent and received correctly, with RSVP options available in the application."
      },
      {
        "ID": "TC448",
        "Title": "Verify Calendar Event Notification Settings",
        "Test Data": {},
        "Preconditions": "Microsoft account connected",
        "Steps to Replicate": "1. Adjust event notification settings in the application  2. Create a test event and verify notification behavior",
        "Expected Result": "Notifications should be triggered based on configured settings for upcoming events."
      },
      {
        "ID": "TC449",
        "Title": "Verify Calendar Event Colors and Labels",
        "Test Data": {},
        "Preconditions": "Events with different colors and labels in Microsoft Calendar",
        "Steps to Replicate": "1. Set different colors and labels for events in Microsoft Calendar  2. Verify color and label display in the application",
        "Expected Result": "Event colors and labels should be visible and correctly displayed in the application's calendar view."
      },
      {
        "ID": "TC450",
        "Title": "Verify Calendar Event Search Functionality",
        "Test Data": {
          "Search Query": "Test Event"
        },
        "Preconditions": "Multiple events present in connected Microsoft Calendar",
        "Steps to Replicate": "1. Perform a search for specific events using search query  2. Verify search results in the application",
        "Expected Result": "Search results should display relevant events based on the search query."
      },
      {
        "ID": "TC451",
        "Title": "Verify Calendar Event Time Zone Handling",
        "Test Data": {},
        "Preconditions": "Events with different time zones created in Microsoft Calendar",
        "Steps to Replicate": "1. Create events with different time zones in Microsoft Calendar  2. Verify time zone handling and display in the application",
        "Expected Result": "Event times should display correctly according to their respective time zones in the application."
      },
      {
        "ID": "TC452",
        "Title": "Verify Calendar Event Overlaps Handling",
        "Test Data": {},
        "Preconditions": "Events with overlapping times in Microsoft Calendar",
        "Steps to Replicate": "1. Create events with overlapping times in Microsoft Calendar  2. Verify event overlap handling and display in the application",
        "Expected Result": "Event overlaps should be visually indicated and handled correctly in the application."
      },
      {
        "ID": "TC453",
        "Title": "Verify Calendar Event Recurrence Pattern",
        "Test Data": {},
        "Preconditions": "Recurring event pattern set in Microsoft Calendar",
        "Steps to Replicate": "1. Set up recurring event pattern (daily, weekly, monthly) in Microsoft Calendar  2. Verify recurrence pattern display and management in the application",
        "Expected Result": "Recurring event pattern should display correctly and be manageable within the application."
      },
      {
        "ID": "TC454",
        "Title": "Verify Calendar Event Location Mapping",
        "Test Data": {},
        "Preconditions": "Events with specific locations set in Microsoft Calendar",
        "Steps to Replicate": "1. Set events with specific locations in Microsoft Calendar  2. Verify location mapping and navigation options in the application",
        "Expected Result": "Event locations should be mapped correctly and navigation options should be available in the application."
      },
      {
        "ID": "TC455",
        "Title": "Verify Calendar Event Reminder Settings",
        "Test Data": {},
        "Preconditions": "Microsoft account connected",
        "Steps to Replicate": "1. Set event reminder settings in Microsoft Calendar  2. Create a test event and verify reminder notifications in the application",
        "Expected Result": "Reminder notifications should be triggered based on configured settings for upcoming events."
      },
      {
        "ID": "TC456",
        "Title": "Verify Calendar Event Privacy Settings",
        "Test Data": {},
        "Preconditions": "Event with private visibility set in Microsoft Calendar",
        "Steps to Replicate": "1. Set event with private visibility in Microsoft Calendar  2. Verify privacy settings and access control in the application",
        "Expected Result": "Event privacy settings should be respected and enforced within the application."
      },
      {
        "ID": "TC457",
        "Title": "Verify Zapier Account Connection",
        "Test Data": {
          "Zapier Account": "example@zapier.com",
          "API Key": "your_api_key"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to Zapier integration settings  2. Enter valid Zapier credentials and connect account",
        "Expected Result": "Zapier account should be successfully connected without errors."
      },
      {
        "ID": "TC458",
        "Title": "Verify Trigger Event Configuration",
        "Test Data": {
          "Trigger Event": "New Email Received"
        },
        "Preconditions": "Zapier account connected",
        "Steps to Replicate": "1. Configure a trigger event in Zapier  2. Verify trigger event setup in the application",
        "Expected Result": "Trigger event should be correctly configured and ready to initiate actions."
      },
      {
        "ID": "TC459",
        "Title": "Verify Action Event Configuration",
        "Test Data": {
          "Action Event": "Create Task"
        },
        "Preconditions": "Zapier account connected",
        "Steps to Replicate": "1. Configure an action event in Zapier  2. Verify action event setup in the application",
        "Expected Result": "Action event should be correctly configured and ready to perform specified tasks."
      },
      {
        "ID": "TC460",
        "Title": "Verify Data Mapping for Trigger Event",
        "Test Data": {},
        "Preconditions": "Trigger event configured in Zapier",
        "Steps to Replicate": "1. Define data mapping for trigger event in Zapier  2. Verify data mapping accuracy and compatibility in the application",
        "Expected Result": "Data from trigger event should be accurately mapped and processed by the application."
      },
      {
        "ID": "TC461",
        "Title": "Verify Data Mapping for Action Event",
        "Test Data": {},
        "Preconditions": "Action event configured in Zapier",
        "Steps to Replicate": "1. Define data mapping for action event in Zapier  2. Verify data mapping accuracy and compatibility in the application",
        "Expected Result": "Data for action event should be accurately mapped and processed as expected."
      },
      {
        "ID": "TC462",
        "Title": "Verify Trigger Event Activation",
        "Test Data": {},
        "Preconditions": "Trigger event configured in Zapier",
        "Steps to Replicate": "1. Activate trigger event in Zapier  2. Monitor for trigger event activation in the application",
        "Expected Result": "Trigger event should activate correctly and initiate associated actions."
      },
      {
        "ID": "TC463",
        "Title": "Verify Action Event Execution",
        "Test Data": {},
        "Preconditions": "Action event triggered in Zapier",
        "Steps to Replicate": "1. Execute action event in Zapier  2. Verify action execution and outcomes in the application",
        "Expected Result": "Action event should execute successfully and produce expected results."
      },
      {
        "ID": "TC464",
        "Title": "Verify Error Handling for Trigger Event",
        "Test Data": {},
        "Preconditions": "Trigger event setup with potential errors in Zapier",
        "Steps to Replicate": "1. Trigger event with erroneous data or conditions in Zapier  2. Verify error handling and notification in the application",
        "Expected Result": "Errors should be detected and handled appropriately without affecting overall integration."
      },
      {
        "ID": "TC465",
        "Title": "Verify Error Handling for Action Event",
        "Test Data": {},
        "Preconditions": "Action event setup with potential errors in Zapier",
        "Steps to Replicate": "1. Execute action event with erroneous data or conditions in Zapier  2. Verify error handling and notification in the application",
        "Expected Result": "Errors during action execution should be managed and reported without impacting other operations."
      },
      {
        "ID": "TC466",
        "Title": "Verify Retry Mechanism for Failed Trigger Event",
        "Test Data": {},
        "Preconditions": "Trigger event setup with intermittent failures in Zapier",
        "Steps to Replicate": "1. Trigger event repeatedly with intermittent failures in Zapier  2. Verify retry mechanism and successful event processing in the application",
        "Expected Result": "Failed trigger events should be retried automatically until successful execution."
      },
      {
        "ID": "TC467",
        "Title": "Verify Retry Mechanism for Failed Action Event",
        "Test Data": {},
        "Preconditions": "Action event setup with intermittent failures in Zapier",
        "Steps to Replicate": "1. Execute action event repeatedly with intermittent failures in Zapier  2. Verify retry mechanism and successful action execution in the application",
        "Expected Result": "Failed action events should be retried automatically until successful execution."
      },
      {
        "ID": "TC468",
        "Title": "Verify Data Integrity for Trigger Event",
        "Test Data": {},
        "Preconditions": "Trigger event activated multiple times in Zapier",
        "Steps to Replicate": "1. Activate trigger event multiple times in Zapier  2. Verify data integrity and consistency in the application",
        "Expected Result": "Data integrity should be maintained across multiple activations of the trigger event."
      },
      {
        "ID": "TC469",
        "Title": "Verify Data Integrity for Action Event",
        "Test Data": {},
        "Preconditions": "Action event executed multiple times in Zapier",
        "Steps to Replicate": "1. Execute action event multiple times in Zapier  2. Verify data integrity and consistency in the application",
        "Expected Result": "Data integrity should be maintained across multiple executions of the action event."
      },
      {
        "ID": "TC470",
        "Title": "Verify Customization Options for Trigger Event",
        "Test Data": {},
        "Preconditions": "Trigger event customization options explored in Zapier",
        "Steps to Replicate": "1. Explore and set customizations for trigger event in Zapier  2. Verify customized behavior and outputs in the application",
        "Expected Result": "Customizations should be applied correctly to the trigger event and reflected in the application."
      },
      {
        "ID": "TC471",
        "Title": "Verify Customization Options for Action Event",
        "Test Data": {},
        "Preconditions": "Action event customization options explored in Zapier",
        "Steps to Replicate": "1. Explore and set customizations for action event in Zapier  2. Verify customized behavior and outputs in the application",
        "Expected Result": "Customizations should be applied correctly to the action event and reflected in the application."
      },
      {
        "ID": "TC472",
        "Title": "Verify Integration Status Monitoring",
        "Test Data": {},
        "Preconditions": "Active Zapier integration",
        "Steps to Replicate": "1. Monitor integration status in Zapier  2. Verify real-time status updates and logs in the application",
        "Expected Result": "Integration status should be accurately monitored with real-time updates and logs available."
      },
      {
        "ID": "TC473",
        "Title": "Verify Integration Deactivation",
        "Test Data": {},
        "Preconditions": "Active Zapier integration",
        "Steps to Replicate": "1. Deactivate integration from Zapier settings  2. Verify integration deactivation and impact assessment in the application",
        "Expected Result": "Integration should be successfully deactivated without residual effects on the application."
      },
      {
        "ID": "TC474",
        "Title": "Verify Security Measures for Data Transfer",
        "Test Data": {},
        "Preconditions": "Data transferred between application and Zapier",
        "Steps to Replicate": "1. Initiate data transfer between application and Zapier  2. Verify security measures (encryption, authentication) during data transfer",
        "Expected Result": "Data should be transferred securely with encryption and appropriate authentication measures."
      },
      {
        "ID": "TC475",
        "Title": "Verify Zoom Account Connection",
        "Test Data": {
          "Zoom Account": "example@zoom.com",
          "API Key": "your_api_key"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to Zoom integration settings  2. Enter valid Zoom credentials and connect account",
        "Expected Result": "Zoom account should be successfully connected without errors."
      },
      {
        "ID": "TC476",
        "Title": "Verify Meeting Creation",
        "Test Data": {
          "Meeting Details": {
            "Topic": "Test Meeting",
            "Date": "2024-06-15",
            "Time": "14:00",
            "Duration": "30 minutes"
          }
        },
        "Preconditions": "Zoom account connected",
        "Steps to Replicate": "1. Create a new meeting in the application  2. Verify meeting details and options",
        "Expected Result": "Meeting should be successfully created with correct details."
      },
      {
        "ID": "TC477",
        "Title": "Verify Recurring Meeting Creation",
        "Test Data": {
          "Meeting Details": {
            "Topic": "Weekly Status Meeting",
            "Date": "2024-06-15",
            "Time": "09:00",
            "Recurrence": "Weekly",
            "Duration": "60 minutes"
          }
        },
        "Preconditions": "Zoom account connected",
        "Steps to Replicate": "1. Create a recurring meeting in the application  2. Verify recurring meeting schedule and options",
        "Expected Result": "Recurring meeting should be successfully created with correct recurrence settings."
      },
      {
        "ID": "TC478",
        "Title": "Verify Meeting Invite",
        "Test Data": {},
        "Preconditions": "Meeting created in Zoom",
        "Steps to Replicate": "1. Invite participants to the meeting  2. Verify invitation sent and received by participants",
        "Expected Result": "Meeting invitation should be successfully sent and received by participants."
      },
      {
        "ID": "TC479",
        "Title": "Verify Meeting URL Generation",
        "Test Data": {},
        "Preconditions": "Meeting created in Zoom",
        "Steps to Replicate": "1. Generate meeting URL  2. Verify URL accessibility and validity",
        "Expected Result": "Meeting URL should be generated correctly and accessible for participants."
      },
      {
        "ID": "TC480",
        "Title": "Verify Meeting Start",
        "Test Data": {},
        "Preconditions": "Meeting scheduled and participants invited",
        "Steps to Replicate": "1. Start the meeting from the application  2. Verify meeting starts successfully and participants can join",
        "Expected Result": "Meeting should start without issues, and participants should be able to join."
      },
      {
        "ID": "TC481",
        "Title": "Verify Meeting End",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. End the meeting from the application  2. Verify meeting ends gracefully for all participants",
        "Expected Result": "Meeting should end gracefully without disruptions for participants."
      },
      {
        "ID": "TC482",
        "Title": "Verify Meeting Recording",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. Start recording the meeting  2. Verify recording functionality and availability after meeting ends",
        "Expected Result": "Meeting should be recorded as expected, and recording should be accessible for later review."
      },
      {
        "ID": "TC483",
        "Title": "Verify Meeting Chat Functionality",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. Use chat feature during the meeting  2. Verify chat messages are sent and received correctly",
        "Expected Result": "Chat messages should be sent and received correctly during the meeting."
      },
      {
        "ID": "TC484",
        "Title": "Verify Meeting Screen Sharing",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. Share screen during the meeting  2. Verify screen sharing functionality and visibility for participants",
        "Expected Result": "Screen sharing should work correctly, and shared content should be visible to participants."
      },
      {
        "ID": "TC485",
        "Title": "Verify Meeting Polls",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. Create and launch polls during the meeting  2. Verify poll creation, participation, and results",
        "Expected Result": "Polls should be created, participants should be able to participate, and results should be visible."
      },
      {
        "ID": "TC486",
        "Title": "Verify Meeting Breakout Rooms",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. Create and manage breakout rooms during the meeting  2. Verify breakout room functionality and participant experience",
        "Expected Result": "Breakout rooms should be created, managed, and participants should be able to join and interact."
      },
      {
        "ID": "TC487",
        "Title": "Verify Participant Permissions",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. Modify participant permissions during the meeting  2. Verify permission changes take effect and impact participant interaction",
        "Expected Result": "Participant permissions should be modified as intended, affecting participant interaction."
      },
      {
        "ID": "TC488",
        "Title": "Verify Meeting Security Settings",
        "Test Data": {},
        "Preconditions": "Meeting in progress",
        "Steps to Replicate": "1. Configure security settings (password, waiting room) for the meeting  2. Verify security measures and participant access control",
        "Expected Result": "Security settings should be applied correctly, ensuring only authorized participants can join."
      },
      {
        "ID": "TC489",
        "Title": "Verify Integration Status Monitoring",
        "Test Data": {},
        "Preconditions": "Active Zoom integration",
        "Steps to Replicate": "1. Monitor integration status in the application  2. Verify real-time status updates and logs for Zoom integration",
        "Expected Result": "Integration status should be accurately monitored with real-time updates and logs available."
      },
      {
        "ID": "TC490",
        "Title": "Verify Integration Deactivation",
        "Test Data": {},
        "Preconditions": "Active Zoom integration",
        "Steps to Replicate": "1. Deactivate integration from Zoom settings  2. Verify integration deactivation and impact assessment in the application",
        "Expected Result": "Integration should be successfully deactivated without residual effects on the application."
      },
      {
        "ID": "TC491",
        "Title": "Verify Data Privacy and Compliance",
        "Test Data": {},
        "Preconditions": "Data exchanged between application and Zoom",
        "Steps to Replicate": "1. Initiate data transfer between application and Zoom  2. Verify data privacy measures (encryption, compliance) during transfer",
        "Expected Result": "Data should be transferred securely with encryption and compliance with relevant privacy regulations."
      },
      {
        "ID": "TC492",
        "Title": "Verify Customization Options for Meetings",
        "Test Data": {},
        "Preconditions": "Meeting customization options explored in Zoom",
        "Steps to Replicate": "1. Explore and set customizations for meetings in Zoom  2. Verify customized behavior and outputs in the application",
        "Expected Result": "Customizations should be applied correctly to meetings and reflected in the application."
      },
      {
        "ID": "TC493",
        "Title": "Verify Capacity and Performance Testing",
        "Test Data": {},
        "Preconditions": "Multiple participants in a meeting",
        "Steps to Replicate": "1. Stress test meeting capacity with multiple participants  2. Monitor application performance and meeting stability",
        "Expected Result": "Application should handle expected meeting capacities smoothly without performance degradation."
      },
      {
        "ID": "TC494",
        "Title": "Verify Calendly Account Connection",
        "Test Data": {
          "Calendly Account": "example@calendly.com",
          "API Key": "your_api_key"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to Calendly integration settings  2. Enter valid Calendly credentials and connect account",
        "Expected Result": "Calendly account should be successfully connected without errors."
      },
      {
        "ID": "TC495",
        "Title": "Verify Event Scheduling",
        "Test Data": {
          "Event Details": {
            "Event Type": "Demo Meeting",
            "Date": "2024-06-15",
            "Time": "10:00",
            "Duration": "30 minutes"
          }
        },
        "Preconditions": "Calendly account connected",
        "Steps to Replicate": "1. Schedule a new event in the application  2. Verify event details and options",
        "Expected Result": "Event should be successfully scheduled with correct details."
      },
      {
        "ID": "TC496",
        "Title": "Verify Event Type Creation",
        "Test Data": {
          "Event Type Details": {
            "Name": "Consultation Call",
            "Duration": "60 minutes",
            "Description": "Discuss project requirements"
          }
        },
        "Preconditions": "Calendly account connected",
        "Steps to Replicate": "1. Create a new event type in Calendly  2. Verify event type details and settings",
        "Expected Result": "Event type should be successfully created with correct configuration."
      },
      {
        "ID": "TC497",
        "Title": "Verify Event Type Availability",
        "Test Data": {
          "Event Type": "Consultation Call",
          "Availability": {
            "Monday": "09:00-17:00",
            "Tuesday": "09:00-17:00",
            "Wednesday": "09:00-17:00",
            "Thursday": "09:00-17:00",
            "Friday": "09:00-17:00"
          }
        },
        "Preconditions": "Event type created in Calendly",
        "Steps to Replicate": "1. Set availability for the event type  2. Verify availability schedule for each day",
        "Expected Result": "Event type availability should be correctly set and reflected in Calendly."
      },
      {
        "ID": "TC498",
        "Title": "Verify Event Rescheduling",
        "Test Data": {},
        "Preconditions": "Event scheduled in Calendly",
        "Steps to Replicate": "1. Reschedule the event from the application  2. Verify rescheduled event details and options",
        "Expected Result": "Event should be successfully rescheduled with updated details."
      },
      {
        "ID": "TC499",
        "Title": "Verify Event Cancellation",
        "Test Data": {},
        "Preconditions": "Event scheduled in Calendly",
        "Steps to Replicate": "1. Cancel the event from the application  2. Verify event cancellation and notification to participants",
        "Expected Result": "Event should be successfully cancelled, and participants notified accordingly."
      },
      {
        "ID": "TC500",
        "Title": "Verify Event Notifications",
        "Test Data": {},
        "Preconditions": "Event scheduled in Calendly",
        "Steps to Replicate": "1. Set notification preferences for the event  2. Verify notification delivery and content",
        "Expected Result": "Notifications should be delivered as configured, informing participants about the event."
      },
      {
        "ID": "TC501",
        "Title": "Verify Event Invitations",
        "Test Data": {},
        "Preconditions": "Event scheduled in Calendly",
        "Steps to Replicate": "1. Send invitations to participants for the event  2. Verify invitation delivery and acceptance",
        "Expected Result": "Invitations should be sent successfully, and participants should be able to accept the event."
      },
      {
        "ID": "TC502",
        "Title": "Verify Integration Status Monitoring",
        "Test Data": {},
        "Preconditions": "Active Calendly integration",
        "Steps to Replicate": "1. Monitor integration status in the application  2. Verify real-time status updates and logs for Calendly integration",
        "Expected Result": "Integration status should be accurately monitored with real-time updates and logs available."
      },
      {
        "ID": "TC503",
        "Title": "Verify Integration Deactivation",
        "Test Data": {},
        "Preconditions": "Active Calendly integration",
        "Steps to Replicate": "1. Deactivate integration from Calendly settings  2. Verify integration deactivation and impact assessment in the application",
        "Expected Result": "Integration should be successfully deactivated without residual effects on the application."
      },
      {
        "ID": "TC504",
        "Title": "Verify Data Privacy and Compliance",
        "Test Data": {},
        "Preconditions": "Data exchanged between application and Calendly",
        "Steps to Replicate": "1. Initiate data transfer between application and Calendly  2. Verify data privacy measures (encryption, compliance) during transfer",
        "Expected Result": "Data should be transferred securely with encryption and compliance with relevant privacy regulations."
      },
      {
        "ID": "TC505",
        "Title": "Verify Customization Options for Events",
        "Test Data": {},
        "Preconditions": "Event customization options explored in Calendly",
        "Steps to Replicate": "1. Explore and set customizations for events in Calendly  2. Verify customized behavior and outputs in the application",
        "Expected Result": "Customizations should be applied correctly to events and reflected in the application."
      },
      {
        "ID": "TC506",
        "Title": "Verify Capacity and Performance Testing",
        "Test Data": {},
        "Preconditions": "Multiple events and participants",
        "Steps to Replicate": "1. Stress test event scheduling and participant capacity  2. Monitor application performance and system stability",
        "Expected Result": "Application should handle expected event capacities smoothly without performance degradation."
      },
      {
        "ID": "TC507",
        "Title": "Verify Event Type Editing",
        "Test Data": {},
        "Preconditions": "Event type created in Calendly",
        "Steps to Replicate": "1. Edit event type details in Calendly  2. Verify changes reflected in scheduled events",
        "Expected Result": "Changes to event type details should be correctly updated in scheduled events."
      },
      {
        "ID": "TC508",
        "Title": "Verify Event Type Deletion",
        "Test Data": {},
        "Preconditions": "Event type created in Calendly",
        "Steps to Replicate": "1. Delete event type from Calendly  2. Verify impact on existing scheduled events",
        "Expected Result": "Event type deletion should not affect existing scheduled events in the application."
      },
      {
        "ID": "TC509",
        "Title": "Verify Event Type Availability Updates",
        "Test Data": {},
        "Preconditions": "Event type and availability settings in Calendly",
        "Steps to Replicate": "1. Update availability settings for event type in Calendly  2. Verify updated availability reflected in scheduled events",
        "Expected Result": "Changes to availability settings should be correctly updated and visible in scheduled events."
      },
      {
        "ID": "TC017",
        "Title": "Verify Event Type Visibility",
        "Test Data": {},
        "Preconditions": "Multiple event types created in Calendly",
        "Steps to Replicate": "1. Set visibility settings for event types in Calendly  2. Verify visibility status and access control",
        "Expected Result": "Event type visibility settings should be applied correctly, controlling access as configured."
      },
      {
        "ID": "TC510",
        "Title": "Verify Event Type Duplication",
        "Test Data": {},
        "Preconditions": "Event type created in Calendly",
        "Steps to Replicate": "1. Duplicate event type in Calendly  2. Verify duplicate event type settings and availability",
        "Expected Result": "Duplicated event type should inherit settings from original and be available for scheduling."
      },
      {
        "ID": "TC511",
        "Title": "Verify Booking Page Customization",
        "Test Data": {},
        "Preconditions": "Booking page customization options explored in Calendly",
        "Steps to Replicate": "1. Customize booking page layout and content in Calendly  2. Verify customized booking page appearance and functionality",
        "Expected Result": "Booking page should display customized layout and content as configured."
      },
      {
        "ID": "TC512",
        "Title": "Verify Download Button Visibility",
        "Test Data": {},
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to the download section  2. Check if download button is visible for available materials",
        "Expected Result": "Download button should be visible for each downloadable material."
      },
      {
        "ID": "TC513",
        "Title": "Verify Download Permission",
        "Test Data": {
          "User Role": "Admin"
        },
        "Preconditions": "User logged in with specified role",
        "Steps to Replicate": "1. Attempt to download a material not permitted for the current role  2. Verify access denied message or action",
        "Expected Result": "Users should only be able to download materials permitted by their role."
      },
      {
        "ID": "TC514",
        "Title": "Verify Download Format",
        "Test Data": {
          "Material Type": "PDF"
        },
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Select a material for download  2. Check downloaded file format",
        "Expected Result": "Downloaded file format should match the specified type (PDF, DOCX, etc.)."
      },
      {
        "ID": "TC515",
        "Title": "Verify Download Size Limit",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Attempt to download a material exceeding size limit  2. Verify error message or handling",
        "Expected Result": "System should handle download size limits appropriately and inform the user."
      },
      {
        "ID": "TC516",
        "Title": "Verify Download Speed",
        "Test Data": {},
        "Preconditions": "Stable internet connection",
        "Steps to Replicate": "1. Initiate download for a material  2. Measure and record download speed",
        "Expected Result": "Download speed should be reasonable and consistent with other download experiences."
      },
      {
        "ID": "TC517",
        "Title": "Verify Multiple Downloads",
        "Test Data": {},
        "Preconditions": "Multiple materials available for download",
        "Steps to Replicate": "1. Initiate simultaneous downloads for multiple materials  2. Monitor and verify download progress",
        "Expected Result": "System should support concurrent downloads without performance degradation."
      },
      {
        "ID": "TC518",
        "Title": "Verify Download Error Handling",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Introduce network interruptions during download  2. Verify error handling and resume functionality",
        "Expected Result": "System should handle download interruptions gracefully and allow resume functionality."
      },
      {
        "ID": "TC519",
        "Title": "Verify Download History",
        "Test Data": {},
        "Preconditions": "User has downloaded materials",
        "Steps to Replicate": "1. Navigate to download history section  2. Verify list of downloaded materials",
        "Expected Result": "Download history should accurately reflect previously downloaded materials."
      },
      {
        "ID": "TC520",
        "Title": "Verify Download Logging",
        "Test Data": {},
        "Preconditions": "System with logging capabilities",
        "Steps to Replicate": "1. Monitor system logs during download  2. Verify logging of download events",
        "Expected Result": "System logs should capture download events for auditing and troubleshooting."
      },
      {
        "ID": "TC521",
        "Title": "Verify Download Retry Mechanism",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Attempt to download a material with intermittent network issues  2. Verify automatic retry mechanism",
        "Expected Result": "System should retry downloads automatically upon network failure or timeout."
      },
      {
        "ID": "TC522",
        "Title": "Verify Download Authentication",
        "Test Data": {},
        "Preconditions": "Download requires authentication",
        "Steps to Replicate": "1. Attempt to download a protected material without authentication  2. Verify access denied message",
        "Expected Result": "Authentication should be required to access and download protected materials."
      },
      {
        "ID": "TC523",
        "Title": "Verify Download Link Expiration",
        "Test Data": {},
        "Preconditions": "Shared download link available",
        "Steps to Replicate": "1. Access shared download link after expiration period  2. Verify link expiration message",
        "Expected Result": "Download links should expire after the specified period, preventing unauthorized access."
      },
      {
        "ID": "TC524",
        "Title": "Verify Download Virus Scanning",
        "Test Data": {},
        "Preconditions": "System with antivirus integration",
        "Steps to Replicate": "1. Download a material known to contain a virus  2. Verify virus detection and warning",
        "Expected Result": "System should scan downloaded materials for viruses and provide warning if detected."
      },
      {
        "ID": "TC525",
        "Title": "Verify Download File Integrity Check",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Download a material  2. Perform file integrity check (MD5, SHA-256)",
        "Expected Result": "Downloaded file should pass file integrity check to ensure data integrity."
      },
      {
        "ID": "TC526",
        "Title": "Verify Download File Naming",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Download a material  2. Verify downloaded file name matches expected naming convention",
        "Expected Result": "Downloaded file should be named correctly according to specified naming convention."
      },
      {
        "ID": "TC527",
        "Title": "Verify Download Permissions for Different User Roles",
        "Test Data": {
          "User Roles": ["Admin", "Manager", "User"]
        },
        "Preconditions": "User logged in with specified roles",
        "Steps to Replicate": "1. Attempt to download a material with different user roles  2. Verify access permissions for each role",
        "Expected Result": "Download permissions should be granted based on the user's role and permissions."
      },
      {
        "ID": "TC528",
        "Title": "Verify Download Security Measures",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Download a material  2. Verify implementation of security measures (HTTPS, encryption)",
        "Expected Result": "Downloads should be secured using appropriate security measures (HTTPS, encryption) to protect data."
      },
      {
        "ID": "TC529",
        "Title": "Verify Download Compatibility",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Download a material  2. Verify compatibility with different operating systems and devices",
        "Expected Result": "Downloaded material should be compatible and accessible across various platforms."
      },
      {
        "ID": "TC530",
        "Title": "Verify Download Legal Compliance",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Download a material  2. Verify compliance with legal requirements (copyright, licensing)",
        "Expected Result": "Downloaded material should comply with legal requirements (copyright, licensing)."
      },
      {
        "ID": "TC531",
        "Title": "Verify Download Notification",
        "Test Data": {},
        "Preconditions": "Material available for download",
        "Steps to Replicate": "1. Download a material  2. Verify notification to user upon completion",
        "Expected Result": "User should receive a notification upon successful completion of the download."
      },
      {
        "ID": "TC532",
        "Title": "Verify Download Analytics",
        "Test Data": {},
        "Preconditions": "System with analytics capability",
        "Steps to Replicate": "1. Monitor analytics dashboard during download  2. Verify download metrics (speed, volume)",
        "Expected Result": "Analytics dashboard should display accurate metrics related to downloads."
      },
      {
        "ID": "TC533",
        "Title": "Verify Extension Installation",
        "Test Data": {
          "Extension URL": "https://chrome.google.com/webstore/detail/extension-id"
        },
        "Preconditions": "User is logged into Chrome",
        "Steps to Replicate": "1. Open Chrome browser  2. Navigate to the Chrome Web Store  3. Search for the extension using the provided URL  4. Click on 'Add to Chrome'  5. Confirm the installation",
        "Expected Result": "The extension should be successfully installed and visible in the Chrome toolbar."
      },
      {
        "ID": "TC534",
        "Title": "Verify Extension Activation",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Click on the extension icon in the toolbar  3. Ensure the extension activates without errors",
        "Expected Result": "The extension should activate and display its interface or perform its intended function."
      },
      {
        "ID": "TC535",
        "Title": "Verify Extension Uninstallation",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Right-click on the extension icon in the toolbar  3. Select 'Remove from Chrome'  4. Confirm the uninstallation",
        "Expected Result": "The extension should be successfully uninstalled and removed from the Chrome toolbar."
      },
      {
        "ID": "TC536",
        "Title": "Verify Extension Permissions Request",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Click on the extension icon  3. Observe the permissions request popup",
        "Expected Result": "The extension should request the necessary permissions with a clear explanation."
      },
      {
        "ID": "TC537",
        "Title": "Verify Extension Updates",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Navigate to chrome://extensions/  3. Enable 'Developer mode'  4. Click 'Update' to check for extension updates",
        "Expected Result": "The extension should update to the latest version without errors."
      },
      {
        "ID": "TC538",
        "Title": "Verify Extension Settings",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Click on the extension icon  3. Navigate to the extension's settings or options page  4. Modify and save settings",
        "Expected Result": "The extension settings should be saved and applied correctly."
      },
      {
        "ID": "TC539",
        "Title": "Verify Extension Functionality on Specific Website",
        "Test Data": {
          "Website URL": "https://www.example.com"
        },
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Navigate to the specified website  3. Activate the extension and verify its functionality on the website",
        "Expected Result": "The extension should function as expected on the specified website."
      },
      {
        "ID": "TC540",
        "Title": "Verify Extension Conflict with Another Extension",
        "Test Data": {},
        "Preconditions": "Two extensions are installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Activate both extensions  3. Observe any conflicts or issues between the extensions",
        "Expected Result": "Both extensions should function without conflict or errors."
      },
      {
        "ID": "TC541",
        "Title": "Verify Extension Storage Usage",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Navigate to chrome://extensions/  3. Check the extension's storage usage",
        "Expected Result": "The extension's storage usage should be within acceptable limits."
      },
      {
        "ID": "TC542",
        "Title": "Verify Extension Performance Impact",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Measure the browser's performance with and without the extension activated",
        "Expected Result": "The extension should not significantly impact the browser's performance."
      },
      {
        "ID": "TC543",
        "Title": "Verify Extension Compatibility with Chrome Updates",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Update Chrome to the latest version  2. Verify that the extension still functions correctly",
        "Expected Result": "The extension should be compatible with the latest version of Chrome."
      },
      {
        "ID": "TC544",
        "Title": "Verify Extension Error Handling",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Trigger an error scenario within the extension  2. Observe how the extension handles the error",
        "Expected Result": "The extension should handle errors gracefully and provide informative messages."
      },
      {
        "ID": "TC545",
        "Title": "Verify Extension Notification Functionality",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Perform an action that triggers a notification from the extension",
        "Expected Result": "The extension should display notifications as expected."
      },
      {
        "ID": "TC546",
        "Title": "Verify Extension Data Syncing",
        "Test Data": {},
        "Preconditions": "Extension is installed and signed into an account",
        "Steps to Replicate": "1. Perform actions that require data syncing  2. Verify that data is synced correctly across devices",
        "Expected Result": "The extension should sync data accurately across different devices."
      },
      {
        "ID": "TC547",
        "Title": "Verify Extension Accessibility Features",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Navigate to the extension interface  3. Check for accessibility features (e.g., screen reader support, keyboard navigation)",
        "Expected Result": "The extension should support standard accessibility features."
      },
      {
        "ID": "TC548",
        "Title": "Verify Extension Localization",
        "Test Data": {
          "Language": "Spanish"
        },
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Change the browser language to the specified language  2. Open the extension and verify the localization",
        "Expected Result": "The extension should be localized correctly in the specified language."
      },
      {
        "ID": "TC549",
        "Title": "Verify Extension's Impact on Browser Startup Time",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Measure the browser startup time without the extension  2. Measure the browser startup time with the extension installed",
        "Expected Result": "The extension should not significantly increase the browser startup time."
      },
      {
        "ID": "TC550",
        "Title": "Verify Extension's Impact on Browser Memory Usage",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Measure the browser's memory usage without the extension  2. Measure the browser's memory usage with the extension installed",
        "Expected Result": "The extension should not significantly increase the browser's memory usage."
      },
      {
        "ID": "TC551",
        "Title": "Verify Extension Background Processes",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Navigate to chrome://extensions/  3. Check for background processes associated with the extension",
        "Expected Result": "The extension's background processes should run efficiently without consuming excessive resources."
      },
      {
        "ID": "TC552",
        "Title": "Verify Extension Content Script Injection",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Open Chrome browser  2. Navigate to a webpage  3. Verify the extension's content script injection and functionality",
        "Expected Result": "The extension's content scripts should inject and function correctly on the webpage."
      },
      {
        "ID": "TC553",
        "Title": "Verify Extension API Integration",
        "Test Data": {},
        "Preconditions": "Extension is installed",
        "Steps to Replicate": "1. Perform actions that involve API calls within the extension  2. Verify the API responses and integration",
        "Expected Result": "The extension should successfully integrate with APIs and handle responses correctly."
      },
      {
        "ID": "TC554",
        "Title": "Add new business hours for a single day",
        "Test Data": {
          "Day": "Monday",
          "Start Time": "09:00",
          "End Time": "17:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Monday' from the dropdown  3. Enter '09:00' as the start time and '17:00' as the end time  4. Click 'Save'",
        "Expected Result": "The business hours for Monday should be saved and displayed correctly."
      },
      {
        "ID": "TC555",
        "Title": "Add business hours for multiple days",
        "Test Data": {
          "Days": ["Tuesday", "Wednesday"],
          "Start Time": "10:00",
          "End Time": "18:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Tuesday' and 'Wednesday' from the dropdown  3. Enter '10:00' as the start time and '18:00' as the end time  4. Click 'Save'",
        "Expected Result": "The business hours for Tuesday and Wednesday should be saved and displayed correctly."
      },
      {
        "ID": "TC556",
        "Title": "Edit existing business hours",
        "Test Data": {
          "Day": "Thursday",
          "New Start Time": "08:00",
          "New End Time": "16:00"
        },
        "Preconditions": "User is logged in and existing business hours are set for Thursday",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Thursday' from the list of existing business hours  3. Change the start time to '08:00' and the end time to '16:00'  4. Click 'Save'",
        "Expected Result": "The business hours for Thursday should be updated and displayed correctly."
      },
      {
        "ID": "TC557",
        "Title": "Remove business hours for a day",
        "Test Data": {
          "Day": "Friday"
        },
        "Preconditions": "User is logged in and existing business hours are set for Friday",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Friday' from the list of existing business hours  3. Click 'Remove' and confirm the action",
        "Expected Result": "The business hours for Friday should be removed and no longer displayed."
      },
      {
        "ID": "TC558",
        "Title": "Add non-working hours for a specific day",
        "Test Data": {
          "Day": "Saturday",
          "Status": "Non-working"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Saturday' from the dropdown  3. Mark it as 'Non-working'  4. Click 'Save'",
        "Expected Result": "Saturday should be marked as a non-working day and displayed accordingly."
      },
      {
        "ID": "TC559",
        "Title": "Set business hours with overlapping times",
        "Test Data": {
          "Day": "Sunday",
          "First Start Time": "09:00",
          "First End Time": "12:00",
          "Second Start Time": "11:00",
          "Second End Time": "15:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Sunday' from the dropdown  3. Enter '09:00' to '12:00' as the first set of hours  4. Enter '11:00' to '15:00' as the second set of hours  5. Click 'Save'",
        "Expected Result": "An error message should be displayed indicating that the hours overlap."
      },
      {
        "ID": "TC560",
        "Title": "Set business hours with invalid time format",
        "Test Data": {
          "Day": "Monday",
          "Start Time": "25:00",
          "End Time": "30:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Monday' from the dropdown  3. Enter '25:00' as the start time and '30:00' as the end time  4. Click 'Save'",
        "Expected Result": "An error message should be displayed indicating that the time format is invalid."
      },
      {
        "ID": "TC561",
        "Title": "Set business hours with end time earlier than start time",
        "Test Data": {
          "Day": "Tuesday",
          "Start Time": "14:00",
          "End Time": "10:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Tuesday' from the dropdown  3. Enter '14:00' as the start time and '10:00' as the end time  4. Click 'Save'",
        "Expected Result": "An error message should be displayed indicating that the end time cannot be earlier than the start time."
      },
      {
        "ID": "TC562",
        "Title": "Set different business hours for the same day in different weeks",
        "Test Data": {
          "Day": "Wednesday",
          "First Week Start Time": "09:00",
          "First Week End Time": "17:00",
          "Second Week Start Time": "10:00",
          "Second Week End Time": "18:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Wednesday' from the dropdown  3. Enter '09:00' to '17:00' for the first week  4. Enter '10:00' to '18:00' for the second week  5. Click 'Save'",
        "Expected Result": "Business hours should be set differently for the specified weeks."
      },
      {
        "ID": "TC563",
        "Title": "Set business hours for public holidays",
        "Test Data": {
          "Holiday": "New Year's Day",
          "Date": "2024-01-01",
          "Start Time": "10:00",
          "End Time": "14:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Add a new entry for 'New Year's Day' on '2024-01-01'  3. Enter '10:00' as the start time and '14:00' as the end time  4. Click 'Save'",
        "Expected Result": "Business hours for New Year's Day should be saved and displayed correctly."
      },
      {
        "ID": "TC564",
        "Title": "Set 24-hour business hours",
        "Test Data": {
          "Day": "Thursday",
          "Start Time": "00:00",
          "End Time": "23:59"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Thursday' from the dropdown  3. Enter '00:00' as the start time and '23:59' as the end time  4. Click 'Save'",
        "Expected Result": "The business hours for Thursday should be set to 24 hours and displayed correctly."
      },
      {
        "ID": "TC565",
        "Title": "Set business hours with break times",
        "Test Data": {
          "Day": "Friday",
          "First Start Time": "09:00",
          "First End Time": "12:00",
          "Second Start Time": "13:00",
          "Second End Time": "17:00"
        },
        "Preconditions": "User is logged in and on the business hours settings page",
        "Steps to Replicate": "1. Navigate to the business hours settings page  2. Select 'Friday' from the dropdown  3. Enter '09:00' to '12:00' as the first set of hours  4. Enter '13:00' to '17:00' as the second set of hours  5. Click 'Save'",
        "Expected Result": "The business hours for Friday should include a break time and be displayed correctly."
      },
      {
        "ID": "TC566",
        "Title": "Add a new social profile",
        "Test Data": {
          "Profile Type": "Twitter",
          "Username": "@exampleuser"
        },
        "Preconditions": "User is logged in and on the social profiles settings page",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click 'Add New Profile'  3. Select 'Twitter' from the profile type dropdown  4. Enter '@exampleuser' as the username  5. Click 'Save'",
        "Expected Result": "The new Twitter profile should be added and displayed correctly."
      },
      {
        "ID": "TC567",
        "Title": "Edit an existing social profile",
        "Test Data": {
          "Profile Type": "Facebook",
          "Old Username": "exampleuser",
          "New Username": "newuser"
        },
        "Preconditions": "User is logged in and an existing Facebook profile is present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click the edit button next to the existing Facebook profile  3. Change the username from 'exampleuser' to 'newuser'  4. Click 'Save'",
        "Expected Result": "The Facebook profile username should be updated to 'newuser'."
      },
      {
        "ID": "TC568",
        "Title": "Remove a social profile",
        "Test Data": {
          "Profile Type": "LinkedIn",
          "Username": "exampleuser"
        },
        "Preconditions": "User is logged in and an existing LinkedIn profile is present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click the remove button next to the existing LinkedIn profile  3. Confirm the removal action",
        "Expected Result": "The LinkedIn profile should be removed and no longer displayed."
      },
      {
        "ID": "TC569",
        "Title": "Add a social profile with invalid username",
        "Test Data": {
          "Profile Type": "Instagram",
          "Username": "@invaliduser!"
        },
        "Preconditions": "User is logged in and on the social profiles settings page",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click 'Add New Profile'  3. Select 'Instagram' from the profile type dropdown  4. Enter '@invaliduser!' as the username  5. Click 'Save'",
        "Expected Result": "An error message should be displayed indicating the username is invalid."
      },
      {
        "ID": "TC570",
        "Title": "Add a social profile with already existing username",
        "Test Data": {
          "Profile Type": "Twitter",
          "Username": "@exampleuser"
        },
        "Preconditions": "User is logged in and a Twitter profile with username '@exampleuser' already exists",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click 'Add New Profile'  3. Select 'Twitter' from the profile type dropdown  4. Enter '@exampleuser' as the username  5. Click 'Save'",
        "Expected Result": "An error message should be displayed indicating the username already exists."
      },
      {
        "ID": "TC571",
        "Title": "View social profile details",
        "Test Data": {
          "Profile Type": "LinkedIn",
          "Username": "exampleuser"
        },
        "Preconditions": "User is logged in and an existing LinkedIn profile is present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click on the LinkedIn profile  3. View the profile details",
        "Expected Result": "The details of the LinkedIn profile should be displayed correctly."
      },
      {
        "ID": "TC572",
        "Title": "Connect social profile to third-party application",
        "Test Data": {
          "Profile Type": "Facebook",
          "Username": "exampleuser",
          "Third-Party App": "Hootsuite"
        },
        "Preconditions": "User is logged in and an existing Facebook profile is present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click on the Facebook profile  3. Click 'Connect to Third-Party App'  4. Select 'Hootsuite' and follow the connection steps  5. Confirm the connection",
        "Expected Result": "The Facebook profile should be successfully connected to Hootsuite."
      },
      {
        "ID": "TC573",
        "Title": "Disconnect social profile from third-party application",
        "Test Data": {
          "Profile Type": "Instagram",
          "Username": "exampleuser",
          "Third-Party App": "Buffer"
        },
        "Preconditions": "User is logged in and an existing Instagram profile is connected to Buffer",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click on the Instagram profile  3. Click 'Disconnect from Third-Party App'  4. Confirm the disconnection",
        "Expected Result": "The Instagram profile should be successfully disconnected from Buffer."
      },
      {
        "ID": "TC574",
        "Title": "Add multiple social profiles",
        "Test Data": {
          "Profiles": [
            {"Profile Type": "Twitter", "Username": "@exampleuser1"},
            {"Profile Type": "Facebook", "Username": "exampleuser2"}
          ]
        },
        "Preconditions": "User is logged in and on the social profiles settings page",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click 'Add New Profile'  3. Select 'Twitter' from the profile type dropdown  4. Enter '@exampleuser1' as the username  5. Click 'Save'  6. Click 'Add New Profile'  7. Select 'Facebook' from the profile type dropdown  8. Enter 'exampleuser2' as the username  9. Click 'Save'",
        "Expected Result": "Both Twitter and Facebook profiles should be added and displayed correctly."
      },
      {
        "ID": "TC575",
        "Title": "Update social profile picture",
        "Test Data": {
          "Profile Type": "LinkedIn",
          "Username": "exampleuser",
          "Profile Picture": "path/to/new/profile/picture.jpg"
        },
        "Preconditions": "User is logged in and an existing LinkedIn profile is present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click on the LinkedIn profile  3. Click 'Update Profile Picture'  4. Upload the new profile picture  5. Click 'Save'",
        "Expected Result": "The LinkedIn profile picture should be updated and displayed correctly."
      },
      {
        "ID": "TC576",
        "Title": "Search for a social profile",
        "Test Data": {
          "Search Query": "exampleuser"
        },
        "Preconditions": "User is logged in and multiple social profiles are present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Enter 'exampleuser' in the search bar  3. Click 'Search'",
        "Expected Result": "The search results should display profiles matching the search query."
      },
      {
        "ID": "TC577",
        "Title": "Filter social profiles by type",
        "Test Data": {
          "Profile Type": "Instagram"
        },
        "Preconditions": "User is logged in and multiple social profiles of different types are present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Select 'Instagram' from the profile type filter dropdown  3. Click 'Apply Filter'",
        "Expected Result": "Only Instagram profiles should be displayed."
      },
      {
        "ID": "TC578",
        "Title": "Sort social profiles alphabetically",
        "Test Data": {},
        "Preconditions": "User is logged in and multiple social profiles are present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click on the 'Sort by' dropdown  3. Select 'Alphabetical Order'  4. Click 'Apply Sort'",
        "Expected Result": "Social profiles should be sorted in alphabetical order."
      },
      {
        "ID": "TC579",
        "Title": "View social profile analytics",
        "Test Data": {
          "Profile Type": "Twitter",
          "Username": "@exampleuser"
        },
        "Preconditions": "User is logged in and an existing Twitter profile is present",
        "Steps to Replicate": "1. Navigate to the social profiles settings page  2. Click on the Twitter profile  3. Click 'View Analytics'",
        "Expected Result": "The analytics for the Twitter profile should be displayed correctly."
      },
      {
        "ID": "TC580",
        "Title": "Upload a single PDF file",
        "Test Data": {
          "File Type": "PDF",
          "File Name": "sample.pdf",
          "File Size": "2MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'sample.pdf' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "The PDF file should be uploaded successfully and appear in the list of uploaded materials."
      },
      {
        "ID": "TC581",
        "Title": "Upload multiple image files",
        "Test Data": {
          "File Type": "Images",
          "Files": ["image1.jpg", "image2.png"],
          "Total Size": "5MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'image1.jpg' and 'image2.png' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "The image files should be uploaded successfully and appear in the list of uploaded materials."
      },
      {
        "ID": "TC582",
        "Title": "Upload a large video file",
        "Test Data": {
          "File Type": "Video",
          "File Name": "large_video.mp4",
          "File Size": "500MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'large_video.mp4' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "The video file should be uploaded successfully and appear in the list of uploaded materials."
      },
      {
        "ID": "TC583",
        "Title": "Upload a file with unsupported format",
        "Test Data": {
          "File Type": "Executable",
          "File Name": "program.exe",
          "File Size": "1MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'program.exe' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "An error message should be displayed indicating the file format is unsupported."
      },
      {
        "ID": "TC584",
        "Title": "Upload a file exceeding size limit",
        "Test Data": {
          "File Type": "PDF",
          "File Name": "large_file.pdf",
          "File Size": "105MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'large_file.pdf' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "An error message should be displayed indicating the file size exceeds the limit."
      },
      {
        "ID": "TC585",
        "Title": "Upload a file with special characters in the name",
        "Test Data": {
          "File Type": "Text",
          "File Name": "special@#$%.txt",
          "File Size": "500KB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'special@#$%.txt' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "The text file should be uploaded successfully and appear in the list of uploaded materials."
      },
      {
        "ID": "TC586",
        "Title": "Cancel file upload",
        "Test Data": {
          "File Type": "Image",
          "File Name": "cancel_upload.jpg",
          "File Size": "2MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'cancel_upload.jpg' from the file picker  4. Click 'Open'  5. Click 'Cancel' during the upload process",
        "Expected Result": "The file upload should be canceled and the file should not appear in the list of uploaded materials."
      },
      {
        "ID": "TC587",
        "Title": "Upload a file with no internet connection",
        "Test Data": {
          "File Type": "PDF",
          "File Name": "no_internet.pdf",
          "File Size": "1MB"
        },
        "Preconditions": "User is logged in, on the material upload page, and internet connection is turned off",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'no_internet.pdf' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "An error message should be displayed indicating there is no internet connection."
      },
      {
        "ID": "TC588",
        "Title": "Upload multiple files with different formats",
        "Test Data": {
          "Files": [
            {"File Type": "PDF", "File Name": "file1.pdf", "File Size": "1MB"},
            {"File Type": "Image", "File Name": "file2.jpg", "File Size": "2MB"}
          ]
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'file1.pdf' and 'file2.jpg' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "Both files should be uploaded successfully and appear in the list of uploaded materials."
      },
      {
        "ID": "TC589",
        "Title": "Upload a corrupted file",
        "Test Data": {
          "File Type": "PDF",
          "File Name": "corrupted_file.pdf",
          "File Size": "1MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'corrupted_file.pdf' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "An error message should be displayed indicating the file is corrupted."
      },
      {
        "ID": "TC590",
        "Title": "Upload a file with the same name as an existing file",
        "Test Data": {
          "File Type": "Text",
          "File Name": "duplicate_name.txt",
          "File Size": "1MB"
        },
        "Preconditions": "User is logged in, on the material upload page, and a file named 'duplicate_name.txt' already exists",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'duplicate_name.txt' from the file picker  4. Click 'Open'  5. Click 'Submit'",
        "Expected Result": "An error message should be displayed indicating the file name already exists."
      },
      {
        "ID": "TC591",
        "Title": "Upload a file and view the progress bar",
        "Test Data": {
          "File Type": "Video",
          "File Name": "progress_video.mp4",
          "File Size": "50MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'progress_video.mp4' from the file picker  4. Click 'Open'  5. Click 'Submit'  6. Observe the progress bar during the upload",
        "Expected Result": "The progress bar should accurately reflect the upload progress of the video file."
      },
      {
        "ID": "TC592",
        "Title": "Upload a file and check file details",
        "Test Data": {
          "File Type": "Document",
          "File Name": "details.docx",
          "File Size": "1MB"
        },
        "Preconditions": "User is logged in and on the material upload page",
        "Steps to Replicate": "1. Navigate to the material upload page  2. Click 'Upload'  3. Select 'details.docx' from the file picker  4. Click 'Open'  5. Click 'Submit'  6. Click on the uploaded file to view its details",
        "Expected Result": "The file details such as name, type, size, and upload date should be displayed correctly."
      },
      {
        "ID": "TC593",
        "Title": "Start and stop video recording",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Record for a few seconds  4. Click the 'Stop' button",
        "Expected Result": "The video recording should stop and be saved successfully."
      },
      {
        "ID": "TC594",
        "Title": "Pause and resume video recording",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Click the 'Pause' button  4. Click the 'Resume' button  5. Record for a few more seconds  6. Click the 'Stop' button",
        "Expected Result": "The video should be recorded successfully with the pause and resume functionality working as expected."
      },
      {
        "ID": "TC595",
        "Title": "Record video with maximum duration",
        "Test Data": {
          "Maximum Duration": "10 minutes"
        },
        "Preconditions": "User is logged in and on the video recording page",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Record until the maximum duration is reached  4. Click the 'Stop' button",
        "Expected Result": "The video should stop recording automatically when the maximum duration is reached and be saved successfully."
      },
      {
        "ID": "TC596",
        "Title": "Record video with minimum duration",
        "Test Data": {
          "Minimum Duration": "5 seconds"
        },
        "Preconditions": "User is logged in and on the video recording page",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Record for the minimum duration  4. Click the 'Stop' button",
        "Expected Result": "The video should be recorded for the minimum duration and be saved successfully."
      },
      {
        "ID": "TC597",
        "Title": "Record video without microphone access",
        "Test Data": {},
        "Preconditions": "User is logged in, on the video recording page, and microphone access is denied",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Deny microphone access if prompted  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded without audio and be saved successfully."
      },
      {
        "ID": "TC598",
        "Title": "Record video with external microphone",
        "Test Data": {},
        "Preconditions": "User is logged in, on the video recording page, and an external microphone is connected",
        "Steps to Replicate": "1. Connect an external microphone  2. Navigate to the video recording page  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded with audio from the external microphone and be saved successfully."
      },
      {
        "ID": "TC599",
        "Title": "Record video in low light conditions",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page in a low light environment",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Adjust the lighting to low light conditions  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded in low light conditions and be saved successfully."
      },
      {
        "ID": "TC600",
        "Title": "Record video in high definition",
        "Test Data": {
          "Resolution": "1080p"
        },
        "Preconditions": "User is logged in and on the video recording page with a camera capable of 1080p resolution",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Set the resolution to 1080p  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded in 1080p resolution and be saved successfully."
      },
      {
        "ID": "TC601",
        "Title": "Record video in standard definition",
        "Test Data": {
          "Resolution": "480p"
        },
        "Preconditions": "User is logged in and on the video recording page with a camera capable of 480p resolution",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Set the resolution to 480p  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded in 480p resolution and be saved successfully."
      },
      {
        "ID": "TC602",
        "Title": "Record video with background noise",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page in an environment with background noise",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Ensure there is background noise  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded with background noise and be saved successfully."
      },
      {
        "ID": "TC603",
        "Title": "Record video with screen recording",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page with screen recording enabled",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Enable screen recording  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded with screen recording and be saved successfully."
      },
      {
        "ID": "TC604",
        "Title": "Record video with webcam",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page with a webcam connected",
        "Steps to Replicate": "1. Connect a webcam  2. Navigate to the video recording page  3. Click the 'Record' button  4. Record for a few seconds  5. Click the 'Stop' button",
        "Expected Result": "The video should be recorded with the webcam and be saved successfully."
      },
      {
        "ID": "TC605",
        "Title": "Record video with built-in camera",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page with a built-in camera available",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Record for a few seconds using the built-in camera  4. Click the 'Stop' button",
        "Expected Result": "The video should be recorded with the built-in camera and be saved successfully."
      },
      {
        "ID": "TC606",
        "Title": "Record video with no camera available",
        "Test Data": {},
        "Preconditions": "User is logged in and on the video recording page with no camera connected",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Observe the system response",
        "Expected Result": "An error message should be displayed indicating no camera is available."
      },
      {
        "ID": "TC607",
        "Title": "Record video and save to specific location",
        "Test Data": {
          "Save Location": "C:/Videos"
        },
        "Preconditions": "User is logged in and on the video recording page",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Record for a few seconds  4. Click the 'Stop' button  5. Choose the save location as 'C:/Videos'",
        "Expected Result": "The video should be saved to the specified location successfully."
      },
      {
        "ID": "TC608",
        "Title": "Record video with custom filename",
        "Test Data": {
          "Filename": "CustomVideoName"
        },
        "Preconditions": "User is logged in and on the video recording page",
        "Steps to Replicate": "1. Navigate to the video recording page  2. Click the 'Record' button  3. Record for a few seconds  4. Click the 'Stop' button  5. Save the video with the custom filename 'CustomVideoName'",
        "Expected Result": "The video should be saved with the custom filename successfully."
      },
      {
        "ID": "TC609",
        "Title": "Send video via email",
        "Test Data": {
          "Recipient Email": "test@example.com",
          "Subject": "Test Video",
          "Video File": "test_video.mp4"
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the video file 'test_video.mp4'  5. Click the 'Send' button",
        "Expected Result": "The email with the video attachment should be sent successfully."
      },
      {
        "ID": "TC610",
        "Title": "Send video via messaging app",
        "Test Data": {
          "Contact": "John Doe",
          "Message": "Check out this video!",
          "Video File": "sample_video.mp4"
        },
        "Preconditions": "User is logged in and on the messaging app",
        "Steps to Replicate": "1. Open the messaging app  2. Select the contact 'John Doe'  3. Enter the message 'Check out this video!'  4. Attach the video file 'sample_video.mp4'  5. Click the 'Send' button",
        "Expected Result": "The video should be sent successfully via the messaging app."
      },
      {
        "ID": "TC611",
        "Title": "Send large video file",
        "Test Data": {
          "Recipient Email": "largefile@example.com",
          "Subject": "Large Video File",
          "Video File": "large_video.mp4",
          "File Size": "500MB"
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the large video file 'large_video.mp4'  5. Click the 'Send' button",
        "Expected Result": "The large video file should be sent successfully, or an appropriate error message should be displayed if the file size exceeds the limit."
      },
      {
        "ID": "TC612",
        "Title": "Send video with special characters in filename",
        "Test Data": {
          "Recipient Email": "specialchar@example.com",
          "Subject": "Special Characters Video",
          "Video File": "special@#$.mp4"
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the video file 'special@#$.mp4'  5. Click the 'Send' button",
        "Expected Result": "The video file with special characters in the filename should be sent successfully."
      },
      {
        "ID": "TC613",
        "Title": "Send video to multiple recipients",
        "Test Data": {
          "Recipients": ["recipient1@example.com", "recipient2@example.com"],
          "Subject": "Group Video",
          "Video File": "group_video.mp4"
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter multiple recipient email addresses  3. Enter the email subject  4. Attach the video file 'group_video.mp4'  5. Click the 'Send' button",
        "Expected Result": "The video should be sent successfully to all recipients."
      },
      {
        "ID": "TC614",
        "Title": "Send video with caption",
        "Test Data": {
          "Recipient Email": "caption@example.com",
          "Subject": "Video with Caption",
          "Video File": "captioned_video.mp4",
          "Caption": "This is a test video"
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the video file 'captioned_video.mp4'  5. Enter the caption 'This is a test video'  6. Click the 'Send' button",
        "Expected Result": "The video with the caption should be sent successfully."
      },
      {
        "ID": "TC615",
        "Title": "Send video without internet connection",
        "Test Data": {
          "Recipient Email": "nointernet@example.com",
          "Subject": "No Internet",
          "Video File": "no_internet_video.mp4"
        },
        "Preconditions": "User is logged in and on the video sending page without an active internet connection",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the video file 'no_internet_video.mp4'  5. Click the 'Send' button",
        "Expected Result": "An error message should be displayed indicating there is no internet connection."
      },
      {
        "ID": "TC616",
        "Title": "Send video with low battery",
        "Test Data": {
          "Recipient Email": "lowbattery@example.com",
          "Subject": "Low Battery",
          "Video File": "low_battery_video.mp4"
        },
        "Preconditions": "User is logged in and on the video sending page with low battery",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the video file 'low_battery_video.mp4'  5. Click the 'Send' button",
        "Expected Result": "The video should be sent successfully before the device shuts down due to low battery."
      },
      {
        "ID": "TC617",
        "Title": "Send video to invalid email address",
        "Test Data": {
          "Recipient Email": "invalid-email",
          "Subject": "Invalid Email",
          "Video File": "invalid_email_video.mp4"
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter an invalid recipient email address  3. Enter the email subject  4. Attach the video file 'invalid_email_video.mp4'  5. Click the 'Send' button",
        "Expected Result": "An error message should be displayed indicating the email address is invalid."
      },
      {
        "ID": "TC618",
        "Title": "Send video with different formats",
        "Test Data": {
          "Recipient Email": "formats@example.com",
          "Subject": "Different Formats",
          "Video Files": ["video1.mp4", "video2.avi", "video3.mov"]
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach multiple video files in different formats  5. Click the 'Send' button",
        "Expected Result": "All video files in different formats should be sent successfully."
      },
      {
        "ID": "TC619",
        "Title": "Send video with description",
        "Test Data": {
          "Recipient Email": "description@example.com",
          "Subject": "Video with Description",
          "Video File": "descriptive_video.mp4",
          "Description": "This video shows how to use the new feature."
        },
        "Preconditions": "User is logged in and on the video sending page",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the video file 'descriptive_video.mp4'  5. Enter the description 'This video shows how to use the new feature.'  6. Click the 'Send' button",
        "Expected Result": "The video with the description should be sent successfully."
      },
      {
        "ID": "TC620",
        "Title": "Send video with encryption",
        "Test Data": {
          "Recipient Email": "secure@example.com",
          "Subject": "Encrypted Video",
          "Video File": "encrypted_video.mp4"
        },
        "Preconditions": "User is logged in and on the video sending page with encryption enabled",
        "Steps to Replicate": "1. Navigate to the video sending page  2. Enter the recipient's email address  3. Enter the email subject  4. Attach the video file 'encrypted_video.mp4'  5. Enable encryption  6. Click the 'Send' button",
        "Expected Result": "The encrypted video should be sent successfully."
      },
      {
        "ID": "TC621",
        "Title": "Enable SMS service",
        "Test Data": {
          "Phone Number": "+1234567890",
          "Service Provider": "Twilio"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS settings  2. Enter phone number '+1234567890'  3. Select service provider as 'Twilio'  4. Save settings",
        "Expected Result": "SMS service should be enabled successfully"
      },
      {
        "ID": "TC622",
        "Title": "Disable SMS service",
        "Test Data": {
          "Phone Number": "+1234567890"
        },
        "Preconditions": "User has enabled SMS service",
        "Steps to Replicate": "1. Navigate to SMS settings  2. Disable SMS service  3. Save settings",
        "Expected Result": "SMS service should be disabled successfully"
      },
      {
        "ID": "TC623",
        "Title": "Verify SMS service provider options",
        "Test Data": {},
        "Preconditions": "User is on the SMS settings page",
        "Steps to Replicate": "1. Navigate to SMS settings  2. Check available service providers",
        "Expected Result": "List of supported SMS service providers should be displayed"
      },
      {
        "ID": "TC624",
        "Title": "Change SMS service provider",
        "Test Data": {
          "New Provider": "Nexmo"
        },
        "Preconditions": "User has enabled SMS service with existing provider",
        "Steps to Replicate": "1. Navigate to SMS settings  2. Change service provider to 'Nexmo'  3. Save settings",
        "Expected Result": "SMS service provider should be updated successfully"
      },
      {
        "ID": "TC625",
        "Title": "Verify SMS delivery time",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Test SMS delivery time"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter message 'Test SMS delivery time'  4. Send SMS",
        "Expected Result": "SMS should be delivered within expected time frame"
      },
      {
        "ID": "TC626",
        "Title": "Send SMS to multiple recipients",
        "Test Data": {
          "Recipient Numbers": ["+1987654321", "+1234567890"],
          "Message": "Test SMS to multiple recipients"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient numbers '+1987654321' and '+1234567890'  3. Enter message 'Test SMS to multiple recipients'  4. Send SMS",
        "Expected Result": "SMS should be successfully sent to both recipients"
      },
      {
        "ID": "TC627",
        "Title": "Send SMS with Unicode characters",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Test SMS with Unicode: unicode list here"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter message with Unicode characters  4. Send SMS",
        "Expected Result": "SMS with Unicode characters should be successfully sent and received"
      },
      {
        "ID": "TC628",
        "Title": "Send SMS with long message content",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter long message content  4. Send SMS",
        "Expected Result": "Long SMS message should be successfully sent and received without truncation"
      },
      {
        "ID": "TC629",
        "Title": "Send SMS without recipient number",
        "Test Data": {
          "Message": "Test SMS without recipient"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter message 'Test SMS without recipient'  3. Send SMS",
        "Expected Result": "An error message should be displayed indicating recipient number is required"
      },
      {
        "ID": "TC630",
        "Title": "Send SMS without message content",
        "Test Data": {
          "Recipient Number": "+1987654321"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Send SMS without message content",
        "Expected Result": "An error message should be displayed indicating message content is required"
      },
      {
        "ID": "TC631",
        "Title": "Send SMS with scheduled delivery",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Test SMS scheduled delivery",
          "Delivery Time": "Tomorrow 10:00 AM"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter message 'Test SMS scheduled delivery'  4. Schedule delivery for 'Tomorrow 10:00 AM'  5. Send SMS",
        "Expected Result": "SMS should be scheduled for delivery at the specified time"
      },
      {
        "ID": "TC632",
        "Title": "Send SMS with delivery confirmation request",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Test SMS delivery confirmation"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter message 'Test SMS delivery confirmation'  4. Request delivery confirmation  5. Send SMS",
        "Expected Result": "A confirmation should be displayed upon successful delivery of SMS"
      },
      {
        "ID": "TC633",
        "Title": "Verify SMS delivery report",
        "Test Data": {},
        "Preconditions": "User has sent SMS with delivery confirmation request",
        "Steps to Replicate": "1. Navigate to SMS delivery reports  2. View SMS delivery report",
        "Expected Result": "SMS delivery report should display details of sent SMS and delivery status"
      },
      {
        "ID": "TC634",
        "Title": "Send SMS during peak hours",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Test SMS during peak hours"
        },
        "Preconditions": "User is logged into the application during peak hours",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter message 'Test SMS during peak hours'  4. Send SMS",
        "Expected Result": "SMS should be successfully sent despite peak hour traffic"
      },
      {
        "ID": "TC635",
        "Title": "Send SMS with link",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Test SMS with link: https://example.com"
        },
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter message with link 'Test SMS with link: https://example.com'  4. Send SMS",
        "Expected Result": "SMS containing link should be successfully sent and displayed correctly on recipient's device"
      },
      {
        "ID": "TC636",
        "Title": "Send SMS with attachment",
        "Test Data": {
          "Recipient Number": "+1987654321",
          "Message": "Test SMS with attachment",
          "Attachment": "file.pdf"
        },
        "Preconditions": "User is logged into the application with attachment feature enabled",
        "Steps to Replicate": "1. Navigate to SMS sending feature  2. Enter recipient number '+1987654321'  3. Enter message 'Test SMS with attachment'  4. Attach file 'file.pdf'  5. Send SMS",
        "Expected Result": "SMS with attachment should be successfully sent and attachment should be received along with message"
      },
      {
        "ID": "TC637",
        "Title": "Verify SMTP server configuration page",
        "Test Data": {},
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Check for configuration options and fields",
        "Expected Result": "SMTP server configuration page should display relevant fields and options"
      },
      {
        "ID": "TC638",
        "Title": "Enable SMTP server",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "587",
          "Username": "testuser",
          "Password": "testpassword"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Enter SMTP server 'smtp.example.com'  2. Enter port '587'  3. Enter username 'testuser'  4. Enter password 'testpassword'  5. Save settings",
        "Expected Result": "SMTP server should be enabled and settings should be saved successfully"
      },
      {
        "ID": "TC639",
        "Title": "Disable SMTP server",
        "Test Data": {},
        "Preconditions": "User has enabled SMTP server",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Disable SMTP server  3. Save settings",
        "Expected Result": "SMTP server should be disabled successfully"
      },
      {
        "ID": "TC640",
        "Title": "Update SMTP server settings",
        "Test Data": {
          "SMTP Server": "mail.example.com",
          "Port": "465",
          "Username": "newuser",
          "Password": "newpassword"
        },
        "Preconditions": "User has enabled SMTP server with existing settings",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Update SMTP server to 'mail.example.com'  3. Update port to '465'  4. Update username to 'newuser'  5. Update password to 'newpassword'  6. Save settings",
        "Expected Result": "SMTP server settings should be updated successfully"
      },
      {
        "ID": "TC641",
        "Title": "Verify SMTP server connection",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "587",
          "Username": "testuser",
          "Password": "testpassword"
        },
        "Preconditions": "User has enabled SMTP server with valid settings",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter port '587'  4. Enter username 'testuser'  5. Enter password 'testpassword'  6. Test connection",
        "Expected Result": "Successful connection message or confirmation should be displayed"
      },
      {
        "ID": "TC642",
        "Title": "Verify SMTP server with invalid credentials",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "587",
          "Username": "invaliduser",
          "Password": "invalidpassword"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter port '587'  4. Enter invalid username 'invaliduser'  5. Enter invalid password 'invalidpassword'  6. Test connection",
        "Expected Result": "Error message indicating invalid credentials should be displayed"
      },
      {
        "ID": "TC643",
        "Title": "Verify SMTP server with incorrect port",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "1234",
          "Username": "testuser",
          "Password": "testpassword"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter incorrect port '1234'  4. Enter username 'testuser'  5. Enter password 'testpassword'  6. Test connection",
        "Expected Result": "Error message indicating connection failed due to incorrect port should be displayed"
      },
      {
        "ID": "TC644",
        "Title": "Verify SMTP server with missing SMTP server address",
        "Test Data": {
          "Port": "587",
          "Username": "testuser",
          "Password": "testpassword"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter port '587'  3. Enter username 'testuser'  4. Enter password 'testpassword'  5. Test connection",
        "Expected Result": "Error message indicating SMTP server address is required should be displayed"
      },
      {
        "ID": "TC645",
        "Title": "Verify SMTP server with missing username",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "587",
          "Password": "testpassword"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter port '587'  4. Enter password 'testpassword'  5. Test connection",
        "Expected Result": "Error message indicating username is required should be displayed"
      },
      {
        "ID": "TC646",
        "Title": "Verify SMTP server with missing password",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "587",
          "Username": "testuser"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter port '587'  4. Enter username 'testuser'  5. Test connection",
        "Expected Result": "Error message indicating password is required should be displayed"
      },
      {
        "ID": "TC647",
        "Title": "Verify SMTP server with SSL/TLS enabled",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "465",
          "Username": "testuser",
          "Password": "testpassword",
          "SSL/TLS": "Enabled"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter port '465'  4. Enter username 'testuser'  5. Enter password 'testpassword'  6. Enable SSL/TLS  7. Test connection",
        "Expected Result": "Successful connection with SSL/TLS enabled should be displayed"
      },
      {
        "ID": "TC648",
        "Title": "Verify SMTP server with SSL/TLS disabled",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "587",
          "Username": "testuser",
          "Password": "testpassword",
          "SSL/TLS": "Disabled"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter port '587'  4. Enter username 'testuser'  5. Enter password 'testpassword'  6. Disable SSL/TLS  7. Test connection",
        "Expected Result": "Successful connection with SSL/TLS disabled should be displayed"
      },
      {
        "ID": "TC649",
        "Title": "Verify SMTP server with STARTTLS",
        "Test Data": {
          "SMTP Server": "smtp.example.com",
          "Port": "587",
          "Username": "testuser",
          "Password": "testpassword",
          "STARTTLS": "Enabled"
        },
        "Preconditions": "User is on SMTP server configuration page",
        "Steps to Replicate": "1. Navigate to SMTP server configuration page  2. Enter SMTP server 'smtp.example.com'  3. Enter port '587'  4. Enter username 'testuser'  5. Enter password 'testpassword'  6. Enable STARTTLS  7. Test connection",
        "Expected Result": "Successful connection with STARTTLS enabled should be displayed"
      },
      {
        "ID": "TC650",
        "Title": "Verify initial setup of tracking link feature",
        "Test Data": {},
        "Preconditions": "User is logged into the application",
        "Steps to Replicate": "1. Navigate to tracking link setup page  2. Check for the presence of tracking link configuration options",
        "Expected Result": "Tracking link setup page should display relevant fields and options"
      },
      {
        "ID": "TC651",
        "Title": "Create a new tracking link",
        "Test Data": {
          "Target URL": "https://example.com",
          "Campaign Name": "Summer Sale Campaign"
        },
        "Preconditions": "User is on the tracking link setup page",
        "Steps to Replicate": "1. Enter target URL 'https://example.com'  2. Enter campaign name 'Summer Sale Campaign'  3. Generate tracking link  4. Save tracking link",
        "Expected Result": "New tracking link should be created and saved successfully"
      },
      {
        "ID": "TC652",
        "Title": "Edit existing tracking link",
        "Test Data": {
          "Existing Link": "https://example.com/track?ref=123",
          "New Target URL": "https://example.com/newtarget",
          "New Campaign Name": "Back to School Campaign"
        },
        "Preconditions": "User has created an existing tracking link",
        "Steps to Replicate": "1. Navigate to tracking link management  2. Find existing link 'https://example.com/track?ref=123'  3. Edit target URL to 'https://example.com/newtarget'  4. Edit campaign name to 'Back to School Campaign'  5. Save changes",
        "Expected Result": "Tracking link details should be updated successfully"
      },
      {
        "ID": "TC653",
        "Title": "Delete existing tracking link",
        "Test Data": {
          "Link to Delete": "https://example.com/track?ref=123"
        },
        "Preconditions": "User is on the tracking link management page",
        "Steps to Replicate": "1. Find existing tracking link 'https://example.com/track?ref=123'  2. Delete tracking link",
        "Expected Result": "Tracking link should be deleted successfully"
      },
      {
        "ID": "TC654",
        "Title": "View tracking link details",
        "Test Data": {
          "Link to View": "https://example.com/track?ref=123"
        },
        "Preconditions": "User has created tracking links",
        "Steps to Replicate": "1. Navigate to tracking link management  2. Find tracking link 'https://example.com/track?ref=123'  3. View details",
        "Expected Result": "Details of the tracking link should be displayed"
      },
      {
        "ID": "TC655",
        "Title": "Track clicks on a tracking link",
        "Test Data": {
          "Link to Click": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' has been distributed",
        "Steps to Replicate": "1. Distribute tracking link 'https://example.com/track?ref=123'  2. Click on tracking link from different devices and browsers  3. Check click tracking statistics",
        "Expected Result": "Clicks on the tracking link should be tracked and displayed accurately in statistics"
      },
      {
        "ID": "TC656",
        "Title": "Track conversions from a tracking link",
        "Test Data": {
          "Link to Convert": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' has been distributed and should lead to a conversion",
        "Steps to Replicate": "1. Distribute tracking link 'https://example.com/track?ref=123'  2. Monitor conversions from the link  3. Check conversion tracking statistics",
        "Expected Result": "Conversions from the tracking link should be tracked and displayed accurately in statistics"
      },
      {
        "ID": "TC657",
        "Title": "Track unique clicks on a tracking link",
        "Test Data": {
          "Link to Track": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' has been distributed to multiple users",
        "Steps to Replicate": "1. Distribute tracking link 'https://example.com/track?ref=123'  2. Click on the tracking link from different users  3. Check unique click statistics",
        "Expected Result": "Unique clicks on the tracking link should be tracked and displayed accurately in statistics"
      },
      {
        "ID": "TC658",
        "Title": "Track geographic location of clicks on a tracking link",
        "Test Data": {
          "Link to Track": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' has been distributed to users in different locations",
        "Steps to Replicate": "1. Distribute tracking link 'https://example.com/track?ref=123'  2. Click on the tracking link from users in different geographic locations  3. Check geographic location statistics",
        "Expected Result": "Geographic locations of clicks on the tracking link should be tracked and displayed accurately in statistics"
      },
      {
        "ID": "TC659",
        "Title": "Track time-based metrics of a tracking link",
        "Test Data": {
          "Link to Track": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' has been distributed over a period of time",
        "Steps to Replicate": "1. Distribute tracking link 'https://example.com/track?ref=123'  2. Monitor click activity at different times of the day  3. Check time-based statistics",
        "Expected Result": "Time-based metrics (e.g., hourly clicks) of the tracking link should be tracked and displayed accurately in statistics"
      },
      {
        "ID": "TC660",
        "Title": "Generate QR code for a tracking link",
        "Test Data": {
          "Link to Generate QR Code": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' is available",
        "Steps to Replicate": "1. Navigate to QR code generation section  2. Enter tracking link 'https://example.com/track?ref=123'  3. Generate QR code",
        "Expected Result": "QR code for the tracking link should be generated successfully"
      },
      {
        "ID": "TC661",
        "Title": "Verify tracking link analytics dashboard",
        "Test Data": {},
        "Preconditions": "User has created and distributed tracking links",
        "Steps to Replicate": "1. Navigate to tracking link analytics dashboard  2. Check for available metrics and reports",
        "Expected Result": "Analytics dashboard should display accurate metrics and reports for tracking links"
      },
      {
        "ID": "TC662",
        "Title": "Test performance of tracking link under load",
        "Test Data": {
          "Link to Test": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' has been distributed widely",
        "Steps to Replicate": "1. Distribute tracking link 'https://example.com/track?ref=123' to a large audience  2. Simulate heavy traffic by clicking on the link from multiple users simultaneously  3. Monitor performance",
        "Expected Result": "Tracking link should handle load gracefully without downtime or performance degradation"
      },
      {
        "ID": "TC663",
        "Title": "Track mobile vs desktop clicks on a tracking link",
        "Test Data": {
          "Link to Track": "https://example.com/track?ref=123"
        },
        "Preconditions": "Tracking link 'https://example.com/track?ref=123' has been distributed to mobile and desktop users",
        "Steps to Replicate": "1. Distribute tracking link 'https://example.com/track?ref=123' to mobile and desktop users  2. Click on the tracking link from both mobile and desktop devices  3. Check device-based click statistics",
        "Expected Result": "Mobile vs desktop clicks on the tracking link should be tracked and displayed accurately in statistics"
      },
      {
        "ID": "TC664",
        "Title": "Create a new scheduled event",
        "Test Data": {
          "Event Name": "Weekly Meeting",
          "Date": "2024-06-15",
          "Time": "10:00 AM",
          "Participants": ["John Doe", "Jane Smith"],
          "Location": "Conference Room"
        },
        "Preconditions": "User is logged into the scheduling system",
        "Steps to Replicate": "1. Navigate to create event page  2. Enter event details (Event Name, Date, Time, Participants, Location)  3. Save event",
        "Expected Result": "New scheduled event 'Weekly Meeting' should be created successfully"
      },
      {
        "ID": "TC665",
        "Title": "Edit an existing scheduled event",
        "Test Data": {
          "Existing Event Name": "Monthly Review",
          "New Date": "2024-06-20",
          "New Time": "2:00 PM",
          "New Participants": ["Alice Brown", "Bob Green"],
          "New Location": "Boardroom"
        },
        "Preconditions": "User has existing scheduled event 'Monthly Review'",
        "Steps to Replicate": "1. Navigate to edit event page  2. Find and select 'Monthly Review'  3. Update event details (Date, Time, Participants, Location)  4. Save changes",
        "Expected Result": "Scheduled event 'Monthly Review' should be updated successfully with new details"
      },
      {
        "ID": "TC666",
        "Title": "Delete a scheduled event",
        "Test Data": {
          "Event to Delete": "Team Building Activity"
        },
        "Preconditions": "User has existing scheduled event 'Team Building Activity'",
        "Steps to Replicate": "1. Navigate to event management page  2. Find and select 'Team Building Activity'  3. Delete event",
        "Expected Result": "Scheduled event 'Team Building Activity' should be deleted successfully"
      },
      {
        "ID": "TC667",
        "Title": "View details of a scheduled event",
        "Test Data": {
          "Event to View": "Quarterly Planning Session"
        },
        "Preconditions": "User has existing scheduled event 'Quarterly Planning Session'",
        "Steps to Replicate": "1. Navigate to event details page  2. Find and select 'Quarterly Planning Session'  3. View event details",
        "Expected Result": "Details of scheduled event 'Quarterly Planning Session' should be displayed accurately"
      },
      {
        "ID": "TC668",
        "Title": "Invite participants to a scheduled event",
        "Test Data": {
          "Event to Invite Participants": "Project Kickoff Meeting",
          "Participants": ["Emily Johnson", "Michael Brown"]
        },
        "Preconditions": "User has existing scheduled event 'Project Kickoff Meeting'",
        "Steps to Replicate": "1. Navigate to invite participants page  2. Find and select 'Project Kickoff Meeting'  3. Invite participants 'Emily Johnson' and 'Michael Brown'",
        "Expected Result": "Participants 'Emily Johnson' and 'Michael Brown' should receive invitation to 'Project Kickoff Meeting'"
      },
      {
        "ID": "TC669",
        "Title": "Cancel a scheduled event",
        "Test Data": {
          "Event to Cancel": "Annual General Meeting"
        },
        "Preconditions": "User has existing scheduled event 'Annual General Meeting'",
        "Steps to Replicate": "1. Navigate to event management page  2. Find and select 'Annual General Meeting'  3. Cancel event",
        "Expected Result": "Scheduled event 'Annual General Meeting' should be canceled successfully"
      },
      {
        "ID": "TC670",
        "Title": "Reschedule a scheduled event",
        "Test Data": {
          "Event to Reschedule": "Product Launch Event",
          "New Date": "2024-06-25",
          "New Time": "3:00 PM"
        },
        "Preconditions": "User has existing scheduled event 'Product Launch Event'",
        "Steps to Replicate": "1. Navigate to reschedule event page  2. Find and select 'Product Launch Event'  3. Reschedule event to new date '2024-06-25' and time '3:00 PM'  4. Save changes",
        "Expected Result": "Scheduled event 'Product Launch Event' should be rescheduled successfully"
      },
      {
        "ID": "TC671",
        "Title": "Add notes to a scheduled event",
        "Test Data": {
          "Event to Add Notes": "Client Meeting",
          "Notes": "Discuss new project requirements and timelines"
        },
        "Preconditions": "User has existing scheduled event 'Client Meeting'",
        "Steps to Replicate": "1. Navigate to event details page  2. Find and select 'Client Meeting'  3. Add notes 'Discuss new project requirements and timelines'  4. Save notes",
        "Expected Result": "Notes 'Discuss new project requirements and timelines' should be added to 'Client Meeting' successfully"
      },
      {
        "ID": "TC672",
        "Title": "Export list of scheduled events",
        "Test Data": {},
        "Preconditions": "User has scheduled events in the system",
        "Steps to Replicate": "1. Navigate to export events page  2. Select export options (format, date range)  3. Export scheduled events",
        "Expected Result": "List of scheduled events should be exported in selected format and date range"
      },
      {
        "ID": "TC673",
        "Title": "Check reminders for a scheduled event",
        "Test Data": {
          "Event with Reminders": "Training Workshop"
        },
        "Preconditions": "User has existing scheduled event 'Training Workshop' with set reminders",
        "Steps to Replicate": "1. Navigate to event details page  2. Find and select 'Training Workshop'  3. Check reminders",
        "Expected Result": "Reminders for 'Training Workshop' should be displayed and trigger at scheduled times"
      },
      {
        "ID": "TC674",
        "Title": "Duplicate a scheduled event",
        "Test Data": {
          "Event to Duplicate": "Weekly Status Meeting"
        },
        "Preconditions": "User has existing scheduled event 'Weekly Status Meeting'",
        "Steps to Replicate": "1. Navigate to event management page  2. Find and select 'Weekly Status Meeting'  3. Duplicate event",
        "Expected Result": "Duplicate of scheduled event 'Weekly Status Meeting' should be created successfully"
      },
      {
        "ID": "TC675",
        "Title": "Check event conflicts",
        "Test Data": {
          "Event 1": {
            "Name": "Team Lunch",
            "Date": "2024-06-15",
            "Time": "12:00 PM"
          },
          "Event 2": {
            "Name": "Client Presentation",
            "Date": "2024-06-15",
            "Time": "1:00 PM"
          }
        },
        "Preconditions": "User has scheduled events 'Team Lunch' and 'Client Presentation'",
        "Steps to Replicate": "1. Navigate to event schedule  2. Check for conflicts between 'Team Lunch' and 'Client Presentation'",
        "Expected Result": "Conflict between 'Team Lunch' and 'Client Presentation' should be identified"
      },
      {
        "ID": "TC676",
        "Title": "Check event notifications",
        "Test Data": {
          "Event with Notifications": "Project Review Meeting"
        },
        "Preconditions": "User has existing scheduled event 'Project Review Meeting' with set notifications",
        "Steps to Replicate": "1. Navigate to event details page  2. Find and select 'Project Review Meeting'  3. Check notifications",
        "Expected Result": "Notifications for 'Project Review Meeting' should be displayed and trigger at scheduled times"
      },
      {
        "ID": "TC677",
        "Title": "Check event attendance",
        "Test Data": {
          "Event to Check Attendance": "Team Training Session"
        },
        "Preconditions": "User has existing scheduled event 'Team Training Session' with expected attendees",
        "Steps to Replicate": "1. Navigate to event attendance page  2. Find and select 'Team Training Session'  3. Check attendance status of attendees",
        "Expected Result": "Attendance status of expected attendees for 'Team Training Session' should be displayed"
      },
      {
        "ID": "TC678",
        "Title": "Check event categorization",
        "Test Data": {
          "Event to Categorize": "Company Townhall"
        },
        "Preconditions": "User has existing scheduled event 'Company Townhall'",
        "Steps to Replicate": "1. Navigate to event categorization page  2. Find and select 'Company Townhall'  3. Check event category",
        "Expected Result": "Category of 'Company Townhall' event should be displayed"
      },
      {
        "ID": "TC679",
        "Title": "Generate new smart code",
        "Test Data": {
          "Code Type": "QR Code",
          "Data": "https://example.com"
        },
        "Preconditions": "User has access to smart code generation tool",
        "Steps to Replicate": "1. Navigate to smart code generation page  2. Select QR Code type  3. Enter data 'https://example.com'  4. Generate smart code",
        "Expected Result": "New QR Code for 'https://example.com' should be generated successfully"
      },
      {
        "ID": "TC680",
        "Title": "Edit existing smart code",
        "Test Data": {
          "Existing Code": "https://example.com/code123",
          "New Data": "https://example.com/newdata"
        },
        "Preconditions": "User has existing smart code 'https://example.com/code123'",
        "Steps to Replicate": "1. Navigate to smart code management  2. Find and select 'https://example.com/code123'  3. Edit data to 'https://example.com/newdata'  4. Save changes",
        "Expected Result": "Smart code 'https://example.com/code123' should be updated successfully with new data 'https://example.com/newdata'"
      },
      {
        "ID": "TC681",
        "Title": "Delete existing smart code",
        "Test Data": {
          "Code to Delete": "https://example.com/code456"
        },
        "Preconditions": "User has existing smart code 'https://example.com/code456'",
        "Steps to Replicate": "1. Navigate to smart code management  2. Find and select 'https://example.com/code456'  3. Delete smart code",
        "Expected Result": "Smart code 'https://example.com/code456' should be deleted successfully"
      },
      {
        "ID": "TC682",
        "Title": "View details of a smart code",
        "Test Data": {
          "Code to View": "https://example.com/code789"
        },
        "Preconditions": "User has existing smart code 'https://example.com/code789'",
        "Steps to Replicate": "1. Navigate to smart code details page  2. Find and select 'https://example.com/code789'  3. View smart code details",
        "Expected Result": "Details of smart code 'https://example.com/code789' should be displayed accurately"
      },
      {
        "ID": "TC683",
        "Title": "Track scans of a smart code",
        "Test Data": {
          "Code to Track": "https://example.com/code123"
        },
        "Preconditions": "Smart code 'https://example.com/code123' has been distributed",
        "Steps to Replicate": "1. Distribute smart code 'https://example.com/code123'  2. Scan smart code from different devices  3. Check scan tracking statistics",
        "Expected Result": "Scans of smart code 'https://example.com/code123' should be tracked and displayed accurately in statistics"
      },
      {
        "ID": "TC684",
        "Title": "Generate custom smart code with logo",
        "Test Data": {
          "Code Type": "Custom QR Code",
          "Data": "https://example.com/customdata",
          "Logo Image": "logo.png"
        },
        "Preconditions": "User has access to custom smart code generation tool",
        "Steps to Replicate": "1. Navigate to custom smart code generation page  2. Select Custom QR Code type  3. Enter data 'https://example.com/customdata'  4. Upload logo image 'logo.png'  5. Generate custom smart code",
        "Expected Result": "Custom QR Code with logo should be generated successfully for 'https://example.com/customdata'"
      },
      {
        "ID": "TC685",
        "Title": "Test smart code scanning under low light conditions",
        "Test Data": {
          "Code to Test": "https://example.com/code789"
        },
        "Preconditions": "Smart code 'https://example.com/code789' is available for testing",
        "Steps to Replicate": "1. Dim lighting conditions  2. Scan smart code 'https://example.com/code789'  3. Verify scan result",
        "Expected Result": "Smart code 'https://example.com/code789' should be scanned successfully under low light conditions"
      },
      {
        "ID": "TC686",
        "Title": "Validate smart code redirect functionality",
        "Test Data": {
          "Code to Validate": "https://example.com/code456"
        },
        "Preconditions": "User has distributed smart code 'https://example.com/code456'",
        "Steps to Replicate": "1. Distribute smart code 'https://example.com/code456'  2. Scan smart code  3. Verify redirection to 'https://example.com'",
        "Expected Result": "Scanning smart code 'https://example.com/code456' should redirect to 'https://example.com' as expected"
      },
      {
        "ID": "TC687",
        "Title": "Test smart code integration with analytics tool",
        "Test Data": {
          "Code to Test": "https://example.com/code123"
        },
        "Preconditions": "Smart code 'https://example.com/code123' is integrated with analytics tool",
        "Steps to Replicate": "1. Scan smart code 'https://example.com/code123'  2. Verify analytics tool captures scan event  3. Check analytics dashboard for scan data",
        "Expected Result": "Analytics tool should capture scan event of smart code 'https://example.com/code123' and display accurate scan data"
      },
      {
        "ID": "TC688",
        "Title": "Check smart code usability across different devices",
        "Test Data": {
          "Code to Test": "https://example.com/code789"
        },
        "Preconditions": "Smart code 'https://example.com/code789' is distributed across various devices",
        "Steps to Replicate": "1. Distribute smart code 'https://example.com/code789' to different devices (mobile, tablet, desktop)  2. Scan smart code from each device  3. Verify scan functionality",
        "Expected Result": "Smart code 'https://example.com/code789' should be scannable and functional across different devices"
      },
      {
        "ID": "TC689",
        "Title": "Test smart code dynamic content updating",
        "Test Data": {
          "Code to Test": "https://example.com/code123"
        },
        "Preconditions": "Smart code 'https://example.com/code123' is configured to update dynamic content",
        "Steps to Replicate": "1. Update content linked to smart code 'https://example.com/code123'  2. Scan smart code  3. Verify updated content is displayed",
        "Expected Result": "Scanning smart code 'https://example.com/code123' should display dynamically updated content as configured"
      },
      {
        "ID": "TC690",
        "Title": "Verify smart code accessibility features",
        "Test Data": {
          "Code to Test": "https://example.com/code456"
        },
        "Preconditions": "Smart code 'https://example.com/code456' includes accessibility features",
        "Steps to Replicate": "1. Enable accessibility settings on scanning device  2. Scan smart code 'https://example.com/code456'  3. Verify accessibility features (e.g., text-to-speech)",
        "Expected Result": "Accessibility features of smart code 'https://example.com/code456' should function correctly when enabled"
      },
      {
        "ID": "TC691",
        "Title": "Check smart code security features",
        "Test Data": {
          "Code to Test": "https://example.com/code789"
        },
        "Preconditions": "Smart code 'https://example.com/code789' includes security enhancements",
        "Steps to Replicate": "1. Scan smart code 'https://example.com/code789'  2. Verify security features (e.g., encryption, authentication)  3. Monitor security logs if applicable",
        "Expected Result": "Security features of smart code 'https://example.com/code789' should be effective and functional"
      },
      {
        "ID": "TC692",
        "Title": "Validate smart code integration with CRM system",
        "Test Data": {
          "Code to Test": "https://example.com/code123"
        },
        "Preconditions": "Smart code 'https://example.com/code123' is integrated with CRM system",
        "Steps to Replicate": "1. Scan smart code 'https://example.com/code123'  2. Verify data synchronization with CRM system  3. Check CRM system for updated customer records",
        "Expected Result": "CRM system should synchronize data from smart code 'https://example.com/code123' accurately"
      },
      {
        "ID": "TC693",
        "Title": "Submit empty lead capture form",
        "Test Data": {},
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Submit form without entering any data  3. Click submit button",
        "Expected Result": "Form should display appropriate validation errors for required fields"
      },
      {
        "ID": "TC694",
        "Title": "Submit lead capture form with valid data",
        "Test Data": {
          "Name": "John Doe",
          "Email": "john.doe@example.com",
          "Phone": "+1234567890",
          "Company": "Example Corp",
          "Message": "Interested in your products/services"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter valid data in all required fields (Name, Email, Phone, Company)  3. Click submit button",
        "Expected Result": "Form submission should be successful with data saved in the backend"
      },
      {
        "ID": "TC695",
        "Title": "Submit lead capture form with invalid email format",
        "Test Data": {
          "Name": "Jane Smith",
          "Email": "jane.smith@example",
          "Phone": "+1987654321",
          "Company": "Sample Company",
          "Message": "Requesting more information"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter invalid email format  3. Click submit button",
        "Expected Result": "Form should display validation error for invalid email format"
      },
      {
        "ID": "TC696",
        "Title": "Submit lead capture form without phone number",
        "Test Data": {
          "Name": "Michael Brown",
          "Email": "michael.brown@example.com",
          "Company": "Test Enterprise",
          "Message": "Looking forward to hearing from you"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter valid data without phone number  3. Click submit button",
        "Expected Result": "Form should accept submission without phone number and save other data correctly"
      },
      {
        "ID": "TC697",
        "Title": "Submit lead capture form without name",
        "Test Data": {
          "Email": "testuser@example.com",
          "Phone": "+1122334455",
          "Company": "Test Company",
          "Message": "Query regarding your services"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter valid data without name  3. Click submit button",
        "Expected Result": "Form should display validation error for required name field"
      },
      {
        "ID": "TC698",
        "Title": "Submit lead capture form with special characters in phone number",
        "Test Data": {
          "Name": "Emily Green",
          "Email": "emily.green@example.com",
          "Phone": "+1-234-567-8901",
          "Company": "ABC Solutions",
          "Message": "Inquiry about pricing"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter data with special characters in phone number  3. Click submit button",
        "Expected Result": "Form should handle special characters in phone number gracefully and accept submission"
      },
      {
        "ID": "TC699",
        "Title": "Submit lead capture form with long message",
        "Test Data": {
          "Name": "David Lee",
          "Email": "david.lee@example.com",
          "Phone": "+9876543210",
          "Company": "XYZ Corporation",
          "Message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vitae justo a nisi facilisis placerat. Proin iaculis, odio ac ultrices mollis, odio nisl blandit ligula, eget vulputate felis mi vel metus. Nulla congue varius arcu id vestibulum. Sed vel dolor ut lacus congue malesuada. Nam vel maximus dui."
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter long message exceeding character limit  3. Click submit button",
        "Expected Result": "Form should handle long message and truncate or display an appropriate validation error"
      },
      {
        "ID": "TC700",
        "Title": "Submit lead capture form with all optional fields",
        "Test Data": {
          "Name": "Sophia Williams",
          "Email": "sophia.williams@example.com",
          "Phone": "+1122334455",
          "Company": "Test Enterprises",
          "Message": "",
          "Website": "https://example.com",
          "LinkedIn Profile": "https://linkedin.com/sophiawilliams"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter data including optional fields (Website, LinkedIn Profile)  3. Click submit button",
        "Expected Result": "Form submission should be successful with all entered data saved correctly, including optional fields"
      },
      {
        "ID": "TC701",
        "Title": "Submit lead capture form with duplicate email",
        "Test Data": {
          "Name": "Robert Johnson",
          "Email": "robert.johnson@example.com",
          "Phone": "+9876543210",
          "Company": "Sample Inc",
          "Message": "Inquiry about product features"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter data with email that already exists in database  3. Click submit button",
        "Expected Result": "Form should display validation error for duplicate email and prevent submission"
      },
      {
        "ID": "TC702",
        "Title": "Submit lead capture form with XSS attack",
        "Test Data": {
          "Name": "<script>alert('XSS Attack');</script>",
          "Email": "xss.attack@example.com",
          "Phone": "+1122334455",
          "Company": "Test Company",
          "Message": "<img src='invalid_image' onerror='alert(\"XSS Attack\")'>"
        },
        "Preconditions": "Lead capture form is accessible",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter data with XSS attack payloads in fields (Name, Message)  3. Click submit button",
        "Expected Result": "Form should sanitize or escape XSS attack payloads and prevent execution"
      },
      {
        "ID": "TC703",
        "Title": "Submit lead capture form with attachment",
        "Test Data": {
          "Name": "Olivia Moore",
          "Email": "olivia.moore@example.com",
          "Phone": "+1234567890",
          "Company": "XYZ Corp",
          "Message": "Attached resume for job application",
          "Attachment": "resume.pdf"
        },
        "Preconditions": "Lead capture form supports attachments",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Enter data and attach file 'resume.pdf'  3. Click submit button",
        "Expected Result": "Form submission should include attachment 'resume.pdf' and save data correctly"
      },
      {
        "ID": "TC704",
        "Title": "Submit lead capture form with auto-filled fields",
        "Test Data": {
          "Name": "Emma Taylor",
          "Email": "emma.taylor@example.com",
          "Phone": "+1122334455",
          "Company": "AutoFill Inc",
          "Message": "Questions about your services"
        },
        "Preconditions": "Lead capture form auto-fills certain fields (e.g., Name, Email)",
        "Steps to Replicate": "1. Navigate to lead capture form  2. Verify auto-filled fields (Name, Email)  3. Enter additional data (Phone, Company, Message)  4. Click submit button",
        "Expected Result": "Form submission should include auto-filled fields and additional entered data correctly"
      },
      {
        "ID": "TC705",
        "Title": "Send bulk mail with valid recipients",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "jane.smith@example.com", "michael.brown@example.com"],
          "Subject": "Test Subject",
          "Body": "This is a test email."
        },
        "Preconditions": "Bulk mailing feature is enabled and accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Compose email with subject and body  4. Send bulk mail",
        "Expected Result": "All specified recipients should receive the test email successfully"
      },
      {
        "ID": "TC706",
        "Title": "Send bulk mail with empty recipient list",
        "Test Data": {
          "Recipients": [],
          "Subject": "Test Subject",
          "Body": "This is a test email."
        },
        "Preconditions": "Bulk mailing feature is enabled and accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Leave recipient list empty  3. Compose email with subject and body  4. Attempt to send bulk mail",
        "Expected Result": "System should display appropriate error message indicating no recipients specified"
      },
      {
        "ID": "TC707",
        "Title": "Send bulk mail with invalid email addresses",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "invalid_email", "michael.brown@example.com"],
          "Subject": "Test Subject",
          "Body": "This is a test email."
        },
        "Preconditions": "Bulk mailing feature is enabled and accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter email addresses with at least one invalid format  3. Compose email with subject and body  4. Attempt to send bulk mail",
        "Expected Result": "System should display validation error for invalid email address and prevent sending to invalid addresses"
      },
      {
        "ID": "TC708",
        "Title": "Send bulk mail with large number of recipients",
        "Test Data": {
          "Recipients": ["recipient1@example.com", "recipient2@example.com", "recipient3@example.com", "recipient100@example.com"],
          "Subject": "Test Subject",
          "Body": "This is a test email."
        },
        "Preconditions": "Bulk mailing feature is enabled and accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter a large number of valid recipient emails  3. Compose email with subject and body  4. Send bulk mail",
        "Expected Result": "System should handle sending to a large number of recipients without performance issues and deliver emails successfully"
      },
      {
        "ID": "TC709",
        "Title": "Send bulk mail with attachments",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "jane.smith@example.com"],
          "Subject": "Test Subject",
          "Body": "This is a test email with attachment.",
          "Attachments": ["document1.pdf", "image.jpg"]
        },
        "Preconditions": "Bulk mailing feature supports attachments and is accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Attach files (document1.pdf, image.jpg)  4. Compose email with subject and body  5. Send bulk mail",
        "Expected Result": "Recipients should receive the email with attachments as specified"
      },
      {
        "ID": "TC710",
        "Title": "Send bulk mail with personalized content",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "jane.smith@example.com"],
          "Subject": "Personalized Offer for You",
          "Body": "Dear {{Name}},    We are pleased to offer you a personalized discount on our latest products. Visit our website to learn more!    Best regards,  Your Marketing Team"
        },
        "Preconditions": "Bulk mailing feature supports personalization tags and is accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Compose email with personalized subject and body using {{Name}} tag  4. Send bulk mail",
        "Expected Result": "Each recipient should receive a personalized email addressing them by name"
      },
      {
        "ID": "TC711",
        "Title": "Send bulk mail with scheduled delivery",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "jane.smith@example.com"],
          "Subject": "Reminder: Upcoming Event",
          "Body": "This is a reminder that our event is scheduled for next week. We look forward to seeing you there!",
          "Schedule": "2024-07-01 09:00 AM"
        },
        "Preconditions": "Bulk mailing feature supports scheduled delivery and is accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Compose email with subject and body  4. Schedule delivery for a future date and time (July 1st, 2024, 9:00 AM)  5. Send bulk mail",
        "Expected Result": "Emails should be delivered to recipients on the scheduled date and time"
      },
      {
        "ID": "TC712",
        "Title": "Send bulk mail with unsubscribe option",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "jane.smith@example.com"],
          "Subject": "Important Update: Subscription Options",
          "Body": "Dear Subscriber,    We have updated our subscription options. Click here to manage your preferences.    Best regards,  Your Subscription Team",
          "Unsubscribe Link": "https://example.com/unsubscribe"
        },
        "Preconditions": "Bulk mailing feature includes unsubscribe functionality and is accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Compose email with subject and body including unsubscribe link  4. Send bulk mail",
        "Expected Result": "Emails should include the unsubscribe link, allowing recipients to manage their subscription preferences"
      },
      {
        "ID": "TC713",
        "Title": "Send bulk mail with HTML formatted content",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "jane.smith@example.com"],
          "Subject": "HTML Formatted Newsletter",
          "Body": "<html><body><h1>Welcome to our Newsletter!</h1><p>This email contains HTML formatted content.</p></body></html>"
        },
        "Preconditions": "Bulk mailing feature supports HTML formatted content and is accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Compose email with HTML formatted subject and body  4. Send bulk mail",
        "Expected Result": "Recipients should receive the email with correctly rendered HTML content"
      },
      {
        "ID": "TC714",
        "Title": "Send bulk mail with plain text and HTML multipart content",
        "Test Data": {
          "Recipients": ["john.doe@example.com", "jane.smith@example.com"],
          "Subject": "Multipart Email Test",
          "Body": {
            "Text": "This is a plain text message.",
            "HTML": "<html><body><p>This is an HTML message.</p></body></html>"
          }
        },
        "Preconditions": "Bulk mailing feature supports multipart content (plain text and HTML) and is accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Compose email with plain text and HTML multipart content  4. Send bulk mail",
        "Expected Result": "Recipients should receive the email with both plain text and HTML content displayed correctly"
      },
      {
        "ID": "TC715",
        "Title": "Send bulk mail with customized sender name and address",
        "Test Data": {
          "Sender Name": "Acme Corporation",
          "Sender Address": "noreply@acme.com",
          "Recipients": ["john.doe@example.com", "jane.smith@example.com"],
          "Subject": "Important Announcement",
          "Body": "This is an important announcement."
        },
        "Preconditions": "Bulk mailing feature supports customization of sender name and address and is accessible",
        "Steps to Replicate": "1. Navigate to bulk mailing section  2. Enter valid recipient emails  3. Set sender name and address  4. Compose email with subject and body  5. Send bulk mail",
        "Expected Result": "Recipients should see the sender name 'Acme Corporation' and sender address 'noreply@acme.com' in their email client"
      },
      {
        "ID": "TC716",
        "Title": "Subscribe to newsletter with valid email",
        "Test Data": {
          "Email": "john.doe@example.com"
        },
        "Preconditions": "Newsletter subscription feature is accessible",
        "Steps to Replicate": "1. Navigate to newsletter subscription section  2. Enter valid email address  3. Click subscribe button",
        "Expected Result": "User should receive a confirmation email and be successfully subscribed to the newsletter"
      },
      {
        "ID": "TC717",
        "Title": "Subscribe to newsletter with invalid email format",
        "Test Data": {
          "Email": "invalid_email_format"
        },
        "Preconditions": "Newsletter subscription feature is accessible",
        "Steps to Replicate": "1. Navigate to newsletter subscription section  2. Enter invalid email format  3. Click subscribe button",
        "Expected Result": "System should display validation error for invalid email format and prevent subscription"
      },
      {
        "ID": "TC718",
        "Title": "Subscribe to newsletter with already subscribed email",
        "Test Data": {
          "Email": "jane.smith@example.com"
        },
        "Preconditions": "Newsletter subscription feature is accessible",
        "Steps to Replicate": "1. Navigate to newsletter subscription section  2. Enter email address already subscribed  3. Click subscribe button",
        "Expected Result": "System should display message indicating email is already subscribed and prevent duplicate subscription"
      },
      {
        "ID": "TC719",
        "Title": "Unsubscribe from newsletter",
        "Test Data": {
          "Email": "michael.brown@example.com"
        },
        "Preconditions": "Newsletter subscription feature is accessible",
        "Steps to Replicate": "1. Navigate to newsletter subscription section  2. Enter email address subscribed  3. Click unsubscribe button",
        "Expected Result": "User should receive a confirmation email and be successfully unsubscribed from the newsletter"
      },
      {
        "ID": "TC720",
        "Title": "Unsubscribe from newsletter with invalid email format",
        "Test Data": {
          "Email": "invalid_email_format"
        },
        "Preconditions": "Newsletter subscription feature is accessible",
        "Steps to Replicate": "1. Navigate to newsletter subscription section  2. Enter invalid email format  3. Click unsubscribe button",
        "Expected Result": "System should display validation error for invalid email format and prevent unsubscription"
      },
      {
        "ID": "TC721",
        "Title": "Unsubscribe from newsletter with not subscribed email",
        "Test Data": {
          "Email": "not_subscribed_email@example.com"
        },
        "Preconditions": "Newsletter subscription feature is accessible",
        "Steps to Replicate": "1. Navigate to newsletter subscription section  2. Enter email address not subscribed  3. Click unsubscribe button",
        "Expected Result": "System should display message indicating email is not subscribed and prevent unsubscription"
      },
      {
        "ID": "TC722",
        "Title": "Receive newsletter with valid content",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system  3. User checks inbox for received newsletter",
        "Expected Result": "User should receive the newsletter with all content sections correctly displayed"
      },
      {
        "ID": "TC723",
        "Title": "Receive newsletter with broken links",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with broken links  3. User checks inbox for received newsletter",
        "Expected Result": "System should not send newsletters with broken links to the user"
      },
      {
        "ID": "TC724",
        "Title": "Receive newsletter with personalized content",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with personalized content  3. User checks inbox for received newsletter",
        "Expected Result": "User should receive the newsletter with personalized content relevant to their preferences"
      },
      {
        "ID": "TC725",
        "Title": "Receive newsletter with attachments",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with attachments  3. User checks inbox for received newsletter",
        "Expected Result": "User should receive the newsletter with all attachments included and accessible"
      },
      {
        "ID": "TC726",
        "Title": "Receive newsletter in HTML format",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system in HTML format  3. User checks inbox for received newsletter",
        "Expected Result": "User should receive the newsletter with HTML content rendered correctly in their email client"
      },
      {
        "ID": "TC727",
        "Title": "Receive newsletter in plain text format",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system in plain text format  3. User checks inbox for received newsletter",
        "Expected Result": "User should receive the newsletter with plain text content displayed correctly in their email client"
      },
      {
        "ID": "TC728",
        "Title": "Receive newsletter with unsubscribe option",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter includes unsubscribe link  3. User receives newsletter and clicks unsubscribe link",
        "Expected Result": "User should be successfully unsubscribed from the newsletter"
      },
      {
        "ID": "TC729",
        "Title": "Receive newsletter with social media links",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with social media links  3. User checks inbox for received newsletter",
        "Expected Result": "Newsletter should include social media links which are functional and direct user to respective profiles"
      },
      {
        "ID": "TC730",
        "Title": "Receive newsletter with event invitation",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with event invitation  3. User checks inbox for received newsletter",
        "Expected Result": "Newsletter should include an event invitation with details and RSVP options"
      },
      {
        "ID": "TC731",
        "Title": "Receive newsletter with promotional offers",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with promotional offers  3. User checks inbox for received newsletter",
        "Expected Result": "Newsletter should include promotional offers which are valid and accessible"
      },
      {
        "ID": "TC732",
        "Title": "Receive newsletter with survey or feedback request",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with survey or feedback request  3. User checks inbox for received newsletter",
        "Expected Result": "Newsletter should include a survey or feedback request with options for user response"
      },
      {
        "ID": "TC733",
        "Title": "Receive newsletter with user-specific recommendations",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with user-specific recommendations  3. User checks inbox for received newsletter",
        "Expected Result": "Newsletter should include recommendations tailored to user preferences or past interactions"
      },
      {
        "ID": "TC734",
        "Title": "Receive newsletter with legal disclaimers or terms of use",
        "Test Data": {},
        "Preconditions": "User is subscribed to the newsletter",
        "Steps to Replicate": "1. User is subscribed and opted to receive newsletters  2. Newsletter is sent by the system with legal disclaimers or terms of use  3. User checks inbox for received newsletter",
        "Expected Result": "Newsletter should include clear legal disclaimers or terms of use applicable to the content"
      },
      {
        "ID": "TC735",
        "Title": "Start a new chat session",
        "Test Data": {},
        "Preconditions": "Chat feature is accessible and online",
        "Steps to Replicate": "1. Open chat interface  2. Initiate new chat session",
        "Expected Result": "User should be able to start a new chat session successfully"
      },
      {
        "ID": "TC736",
        "Title": "Send text message in chat",
        "Test Data": {
          "Message": "Hello, how can I assist you?"
        },
        "Preconditions": "Chat session is active",
        "Steps to Replicate": "1. Open existing chat session  2. Type and send text message",
        "Expected Result": "Message should be sent and displayed in the chat interface"
      },
      {
        "ID": "TC737",
        "Title": "Send emojis in chat",
        "Test Data": {
          "Message": "Emoji example"
        },
        "Preconditions": "Chat session is active",
        "Steps to Replicate": "1. Open existing chat session  2. Type and send emojis",
        "Expected Result": "Emojis should be sent and displayed correctly in the chat interface"
      },
      {
        "ID": "TC738",
        "Title": "Send multimedia files in chat (images, videos)",
        "Test Data": {
          "Files": ["image.jpg", "video.mp4"]
        },
        "Preconditions": "Chat session supports multimedia file sharing",
        "Steps to Replicate": "1. Open existing chat session  2. Attach and send image and video files",
        "Expected Result": "Files should be sent and recipients should be able to view/download them in the chat"
      },
      {
        "ID": "TC739",
        "Title": "Send file attachments in chat (documents, PDFs)",
        "Test Data": {
          "Files": ["document.docx", "presentation.pdf"]
        },
        "Preconditions": "Chat session supports file attachment",
        "Steps to Replicate": "1. Open existing chat session  2. Attach and send document and PDF files",
        "Expected Result": "Files should be sent and recipients should be able to download/open them in the chat"
      },
      {
        "ID": "TC740",
        "Title": "Send links in chat",
        "Test Data": {
          "Link": "https://example.com"
        },
        "Preconditions": "Chat session is active",
        "Steps to Replicate": "1. Open existing chat session  2. Type and send a link",
        "Expected Result": "Link should be sent as clickable and accessible in the chat interface"
      },
      {
        "ID": "TC741",
        "Title": "Receive text message in chat",
        "Test Data": {
          "Message": "Hi, how can I help you?"
        },
        "Preconditions": "Chat session is active and other user sends message",
        "Steps to Replicate": "1. Open existing chat session  2. Receive incoming text message",
        "Expected Result": "Incoming message should be displayed correctly in the chat interface"
      },
      {
        "ID": "TC742",
        "Title": "Receive emojis in chat",
        "Test Data": {
          "Message": "Emoji example"
        },
        "Preconditions": "Chat session is active and other user sends emojis",
        "Steps to Replicate": "1. Open existing chat session  2. Receive incoming emojis",
        "Expected Result": "Incoming emojis should be displayed correctly in the chat interface"
      },
      {
        "ID": "TC743",
        "Title": "Receive multimedia files in chat (images, videos)",
        "Test Data": {
          "Files": ["image.jpg", "video.mp4"]
        },
        "Preconditions": "Chat session supports multimedia file sharing and other user sends files",
        "Steps to Replicate": "1. Open existing chat session  2. Receive incoming image and video files",
        "Expected Result": "Files received should be displayed and accessible in the chat"
      },
      {
        "ID": "TC744",
        "Title": "Receive file attachments in chat (documents, PDFs)",
        "Test Data": {
          "Files": ["document.docx", "presentation.pdf"]
        },
        "Preconditions": "Chat session supports file attachment and other user sends files",
        "Steps to Replicate": "1. Open existing chat session  2. Receive incoming document and PDF files",
        "Expected Result": "Files received should be downloadable and accessible in the chat"
      },
      {
        "ID": "TC745",
        "Title": "Receive links in chat",
        "Test Data": {
          "Link": "https://example.com"
        },
        "Preconditions": "Chat session is active and other user sends link",
        "Steps to Replicate": "1. Open existing chat session  2. Receive incoming link",
        "Expected Result": "Incoming link should be displayed as clickable and accessible in the chat interface"
      },
      {
        "ID": "TC746",
        "Title": "Receive chat notification",
        "Test Data": {},
        "Preconditions": "Chat notifications are enabled",
        "Steps to Replicate": "1. Keep chat interface minimized or closed  2. Receive new chat message",
        "Expected Result": "User should receive notification indicating new message in the chat"
      },
      {
        "ID": "TC747",
        "Title": "Switch between multiple chat sessions",
        "Test Data": {},
        "Preconditions": "Multiple chat sessions are active",
        "Steps to Replicate": "1. Have multiple chat sessions open  2. Switch between different chat sessions",
        "Expected Result": "User should be able to switch between different chat sessions seamlessly"
      },
      {
        "ID": "TC748",
        "Title": "End chat session",
        "Test Data": {},
        "Preconditions": "Active chat session exists",
        "Steps to Replicate": "1. Open existing chat session  2. End chat session",
        "Expected Result": "Chat session should be successfully ended and closed"
      },
      {
        "ID": "TC749",
        "Title": "Reconnect to chat session after connection interruption",
        "Test Data": {},
        "Preconditions": "Chat session was active and connection was temporarily lost",
        "Steps to Replicate": "1. Experience temporary connection loss during active chat session  2. Reconnect to chat session",
        "Expected Result": "User should be able to reconnect to the chat session and resume conversation"
      },
      {
        "ID": "TC750",
        "Title": "View chat history",
        "Test Data": {},
        "Preconditions": "Chat history feature is enabled",
        "Steps to Replicate": "1. Access chat interface  2. View chat history",
        "Expected Result": "User should be able to view previous chat messages and interactions"
      },
      {
        "ID": "TC751",
        "Title": "Search chat history",
        "Test Data": {
          "Keyword": "support"
        },
        "Preconditions": "Chat history feature is enabled and contains searchable content",
        "Steps to Replicate": "1. Access chat interface  2. Use search functionality to search for keyword 'support'",
        "Expected Result": "System should display relevant chat history containing the searched keyword"
      },
      {
        "ID": "TC752",
        "Title": "Clear chat history",
        "Test Data": {},
        "Preconditions": "Chat history feature is enabled and contains existing history",
        "Steps to Replicate": "1. Access chat interface  2. Clear chat history",
        "Expected Result": "Chat history should be successfully cleared and no longer visible in the interface"
      },
      {
        "ID": "TC753",
        "Title": "Receive typing indicator in chat",
        "Test Data": {},
        "Preconditions": "Chat session is active and other user is typing",
        "Steps to Replicate": "1. Open existing chat session  2. Observe typing indicator from other user",
        "Expected Result": "User should see typing indicator when other user is typing in the chat"
      },
      {
        "ID": "TC754",
        "Title": "Receive read receipts in chat",
        "Test Data": {},
        "Preconditions": "Chat session is active and read receipts feature is enabled",
        "Steps to Replicate": "1. Send message in chat session  2. Observe read receipt when other user reads the message",
        "Expected Result": "User should see read receipt when message is read by other user in the chat"
      },
      {
        "ID": "TC755",
        "Title": "Use chatbot functionality",
        "Test Data": {},
        "Preconditions": "Chatbot feature is integrated and accessible",
        "Steps to Replicate": "1. Access chat interface  2. Interact with chatbot",
        "Expected Result": "Chatbot should respond accurately and provide relevant information or assistance"
      },
      {
        "ID": "TC756",
        "Title": "Initiate social community integration",
        "Test Data": {},
        "Preconditions": "Social community integration feature is accessible",
        "Steps to Replicate": "1. Navigate to social community integration settings  2. Initiate integration process",
        "Expected Result": "Integration process should start without errors"
      },
      {
        "ID": "TC757",
        "Title": "Authenticate social media account",
        "Test Data": {
          "Account": "Facebook"
        },
        "Preconditions": "Integration process initiated",
        "Steps to Replicate": "1. Select Facebook integration option  2. Authenticate social media account",
        "Expected Result": "Account should be authenticated successfully for integration"
      },
      {
        "ID": "TC758",
        "Title": "Import user profiles from social community",
        "Test Data": {},
        "Preconditions": "Social media account authenticated",
        "Steps to Replicate": "1. Access social community integration settings  2. Import user profiles",
        "Expected Result": "User profiles should be imported and displayed correctly"
      },
      {
        "ID": "TC759",
        "Title": "Export user data to social community",
        "Test Data": {
          "Data": "User information"
        },
        "Preconditions": "Integration with social community established",
        "Steps to Replicate": "1. Select data export option  2. Export user data to social community",
        "Expected Result": "User data should be exported successfully and accessible in the social community"
      },
      {
        "ID": "TC760",
        "Title": "Share content to social community",
        "Test Data": {
          "Content": "Post content"
        },
        "Preconditions": "Integration with social community enabled",
        "Steps to Replicate": "1. Create content to share  2. Select share to social community option",
        "Expected Result": "Content should be shared to social community platform without issues"
      },
      {
        "ID": "TC761",
        "Title": "Receive notifications from social community",
        "Test Data": {},
        "Preconditions": "Notification settings configured for social community",
        "Steps to Replicate": "1. Trigger event in social community  2. Monitor notifications",
        "Expected Result": "User should receive notifications for relevant events from social community"
      },
      {
        "ID": "TC762",
        "Title": "Interact with social community feed",
        "Test Data": {},
        "Preconditions": "Feed integration enabled",
        "Steps to Replicate": "1. Access social community feed  2. Like, comment, or share posts",
        "Expected Result": "Interactions (like, comment, share) should be successful on social community feed"
      },
      {
        "ID": "TC763",
        "Title": "Enable real-time updates from social community",
        "Test Data": {},
        "Preconditions": "Real-time update feature supported",
        "Steps to Replicate": "1. Enable real-time updates in social community settings  2. Monitor for real-time updates",
        "Expected Result": "System should display real-time updates from social community without delay"
      },
      {
        "ID": "TC764",
        "Title": "Moderate social community content",
        "Test Data": {},
        "Preconditions": "Moderation tools available",
        "Steps to Replicate": "1. Access moderation dashboard  2. Review and moderate user-generated content",
        "Expected Result": "Moderation actions (approve, reject, delete) should be applied correctly"
      },
      {
        "ID": "TC765",
        "Title": "Manage social community settings",
        "Test Data": {},
        "Preconditions": "Access to social community settings",
        "Steps to Replicate": "1. Navigate to social community settings  2. Modify configuration settings",
        "Expected Result": "Changes to settings (notifications, privacy, etc.) should be saved and applied"
      },
      {
        "ID": "TC766",
        "Title": "Integrate with multiple social community platforms",
        "Test Data": {},
        "Preconditions": "Support for multiple social community integrations",
        "Steps to Replicate": "1. Access social community integration settings  2. Add and configure multiple platforms",
        "Expected Result": "System should support simultaneous integration with multiple social community platforms"
      },
      {
        "ID": "TC767",
        "Title": "View analytics and insights from social community",
        "Test Data": {},
        "Preconditions": "Analytics feature enabled for social community",
        "Steps to Replicate": "1. Access analytics dashboard  2. View metrics and insights",
        "Expected Result": "Analytics data (engagement, reach, etc.) should be displayed accurately"
      },
      {
        "ID": "TC768",
        "Title": "Resolve integration errors with social community",
        "Test Data": {},
        "Preconditions": "Encounter integration error with social community",
        "Steps to Replicate": "1. Identify integration error  2. Troubleshoot and resolve error",
        "Expected Result": "Integration error should be resolved and integration restored"
      },
      {
        "ID": "TC769",
        "Title": "Ensure data privacy compliance with social community",
        "Test Data": {},
        "Preconditions": "Data privacy regulations applicable",
        "Steps to Replicate": "1. Review data privacy policies  2. Ensure compliance with social community data handling",
        "Expected Result": "User data should be handled in compliance with data privacy regulations"
      },
      {
        "ID": "TC770",
        "Title": "Monitor social community performance",
        "Test Data": {},
        "Preconditions": "Monitoring tools available",
        "Steps to Replicate": "1. Access performance monitoring dashboard  2. Monitor social community performance metrics",
        "Expected Result": "Performance metrics (response time, uptime, etc.) should be monitored effectively"
      },
      {
        "ID": "TC771",
        "Title": "Collaborate with social community members",
        "Test Data": {},
        "Preconditions": "Collaboration tools enabled",
        "Steps to Replicate": "1. Access collaboration features  2. Engage and collaborate with social community members",
        "Expected Result": "Collaborative activities (projects, discussions, etc.) should be facilitated"
      },
      {
        "ID": "TC772",
        "Title": "Enable social login/authentication",
        "Test Data": {},
        "Preconditions": "Social login feature available",
        "Steps to Replicate": "1. Access login/authentication settings  2. Enable social login option",
        "Expected Result": "Users should be able to log in/authenticate using social media credentials"
      },
      {
        "ID": "TC773",
        "Title": "Implement social sharing functionality",
        "Test Data": {},
        "Preconditions": "Social sharing feature integrated",
        "Steps to Replicate": "1. Access content sharing options  2. Share content via social community",
        "Expected Result": "Content should be shared successfully on social community platforms"
      },
      {
        "ID": "TC774",
        "Title": "Engage with social community events",
        "Test Data": {},
        "Preconditions": "Events feature enabled for social community",
        "Steps to Replicate": "1. Access events section  2. Participate or manage social community events",
        "Expected Result": "User participation in events should be supported and managed effectively"
      },
      {
        "ID": "TC775",
        "Title": "Customize social community appearance",
        "Test Data": {},
        "Preconditions": "Customization options available",
        "Steps to Replicate": "1. Access customization settings  2. Modify theme, layout, or branding",
        "Expected Result": "Changes to appearance (theme, layout, branding) should be applied and displayed"
      },
      {
        "ID": "TC776",
        "Title": "Ensure accessibility compliance for social community",
        "Test Data": {},
        "Preconditions": "Accessibility guidelines followed",
        "Steps to Replicate": "1. Review accessibility features  2. Test accessibility compliance",
        "Expected Result": "Social community should adhere to accessibility standards and guidelines"
      },
      {
        "ID": "TC777",
        "Title": "Set timezone to UTC",
        "Test Data": {
          "Timezone": "UTC"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Select UTC timezone  3. Save changes",
        "Expected Result": "System time should display in UTC timezone"
      },
      {
        "ID": "TC778",
        "Title": "Set timezone to GMT+1",
        "Test Data": {
          "Timezone": "GMT+1"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Select GMT+1 timezone  3. Save changes",
        "Expected Result": "System time should display in GMT+1 timezone"
      },
      {
        "ID": "TC779",
        "Title": "Set timezone to GMT-5",
        "Test Data": {
          "Timezone": "GMT-5"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Select GMT-5 timezone  3. Save changes",
        "Expected Result": "System time should display in GMT-5 timezone"
      },
      {
        "ID": "TC780",
        "Title": "Change timezone from UTC to GMT",
        "Test Data": {
          "From": "UTC",
          "To": "GMT"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Change timezone from UTC to GMT  3. Save changes",
        "Expected Result": "System time should adjust from UTC to GMT timezone"
      },
      {
        "ID": "TC781",
        "Title": "Enable automatic timezone detection",
        "Test Data": {},
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Enable automatic timezone detection  3. Save changes",
        "Expected Result": "System should automatically detect and set timezone based on user location"
      },
      {
        "ID": "TC782",
        "Title": "Validate daylight saving time adjustment",
        "Test Data": {},
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Enable daylight saving time adjustment  3. Save changes",
        "Expected Result": "System time should adjust for daylight saving time changes"
      },
      {
        "ID": "TC783",
        "Title": "Set timezone to local time zone",
        "Test Data": {
          "Timezone": "Local"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Select local timezone  3. Save changes",
        "Expected Result": "System time should display in local timezone"
      },
      {
        "ID": "TC784",
        "Title": "Change timezone during DST transition",
        "Test Data": {
          "From": "GMT",
          "To": "BST"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Change timezone from GMT to BST  3. Save changes",
        "Expected Result": "System time should adjust correctly during DST transition"
      },
      {
        "ID": "TC785",
        "Title": "Switch timezone between EST and PST",
        "Test Data": {
          "From": "EST",
          "To": "PST"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Switch timezone from EST to PST  3. Save changes",
        "Expected Result": "System time should adjust correctly between EST and PST"
      },
      {
        "ID": "TC786",
        "Title": "Set timezone to CET (Central European Time)",
        "Test Data": {
          "Timezone": "CET"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Select CET timezone  3. Save changes",
        "Expected Result": "System time should display in Central European Time"
      },
      {
        "ID": "TC787",
        "Title": "Ensure time accuracy after timezone change",
        "Test Data": {},
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Change timezone  3. Verify time accuracy after change",
        "Expected Result": "System time should accurately reflect the selected timezone"
      },
      {
        "ID": "TC788",
        "Title": "Reset timezone settings to default",
        "Test Data": {},
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Reset to default timezone  3. Save changes",
        "Expected Result": "System should revert to default timezone settings"
      },
      {
        "ID": "TC789",
        "Title": "Modify timezone settings for different users",
        "Test Data": {
          "Users": ["User1", "User2"]
        },
        "Preconditions": "User-specific timezone settings available",
        "Steps to Replicate": "1. Access user profile settings  2. Modify timezone settings for User1 and User2  3. Save changes",
        "Expected Result": "Each user should see their respective timezone displayed"
      },
      {
        "ID": "TC790",
        "Title": "Sync calendar events with updated timezone",
        "Test Data": {
          "Event": "Meeting"
        },
        "Preconditions": "Calendar integration enabled",
        "Steps to Replicate": "1. Schedule a meeting  2. Change timezone settings  3. Verify calendar events reflect updated timezone",
        "Expected Result": "Calendar events should display correctly in the updated timezone"
      },
      {
        "ID": "TC791",
        "Title": "Set timezone to AEST (Australian Eastern Standard Time)",
        "Test Data": {
          "Timezone": "AEST"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Select AEST timezone  3. Save changes",
        "Expected Result": "System time should display in Australian Eastern Standard Time"
      },
      {
        "ID": "TC792",
        "Title": "Ensure correct time format after timezone change",
        "Test Data": {},
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Change timezone  3. Verify time format after change",
        "Expected Result": "Time format (24-hour, AM/PM) should adjust correctly according to the selected timezone"
      },
      {
        "ID": "TC793",
        "Title": "Handle timezone change in multi-language environment",
        "Test Data": {
          "Language": "English"
        },
        "Preconditions": "Multi-language support enabled",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Change timezone  3. Verify time display in English",
        "Expected Result": "Time should display correctly in the selected timezone across different languages"
      },
      {
        "ID": "TC794",
        "Title": "Verify notification timing after timezone adjustment",
        "Test Data": {
          "Notification": "Reminder"
        },
        "Preconditions": "Notification settings configured",
        "Steps to Replicate": "1. Set notification for a specific time  2. Change timezone  3. Verify notification timing",
        "Expected Result": "Notification should trigger at the correct adjusted time according to the new timezone"
      },
      {
        "ID": "TC795",
        "Title": "Set timezone to Pacific Standard Time (PST)",
        "Test Data": {
          "Timezone": "PST"
        },
        "Preconditions": "User has access to timezone settings",
        "Steps to Replicate": "1. Navigate to timezone settings  2. Select PST timezone  3. Save changes",
        "Expected Result": "System time should display in Pacific Standard Time"
      },
      {
        "ID": "TC796",
        "Title": "Test automated reports based on timezone settings",
        "Test Data": {
          "Report": "Weekly Sales"
        },
        "Preconditions": "Automated reporting feature enabled",
        "Steps to Replicate": "1. Schedule automated report generation  2. Change timezone  3. Verify report generation based on updated timezone",
        "Expected Result": "Automated reports should be generated accurately according to the updated timezone"
      },
      {
        "ID": "TC797",
        "Title": "Validate time synchronization across devices after timezone change",
        "Test Data": {},
        "Preconditions": "Multiple devices synced",
        "Steps to Replicate": "1. Change timezone on one device  2. Verify time synchronization across all synced devices",
        "Expected Result": "Time should synchronize correctly across all devices after timezone change"
      },
      {
        "ID": "TC798",
        "Title": "Subscribe user to monthly plan",
        "Test Data": {
          "Subscription Plan": "Monthly"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Select Monthly plan  3. Confirm subscription",
        "Expected Result": "User should be subscribed to the Monthly plan"
      },
      {
        "ID": "TC799",
        "Title": "Subscribe user to annual plan",
        "Test Data": {
          "Subscription Plan": "Annual"
        },
        "Preconditions": "User account exists",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Select Annual plan  3. Confirm subscription",
        "Expected Result": "User should be subscribed to the Annual plan"
      },
      {
        "ID": "TC800",
        "Title": "Upgrade user subscription from Basic to Premium",
        "Test Data": {
          "From": "Basic",
          "To": "Premium"
        },
        "Preconditions": "User has Basic subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Upgrade from Basic to Premium  3. Confirm upgrade",
        "Expected Result": "User should be upgraded to the Premium subscription"
      },
      {
        "ID": "TC801",
        "Title": "Downgrade user subscription from Premium to Basic",
        "Test Data": {
          "From": "Premium",
          "To": "Basic"
        },
        "Preconditions": "User has Premium subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Downgrade from Premium to Basic  3. Confirm downgrade",
        "Expected Result": "User should be downgraded to the Basic subscription"
      },
      {
        "ID": "TC802",
        "Title": "Cancel user subscription",
        "Test Data": {},
        "Preconditions": "User has active subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Cancel subscription  3. Confirm cancellation",
        "Expected Result": "User subscription should be cancelled"
      },
      {
        "ID": "TC803",
        "Title": "Re-activate user subscription",
        "Test Data": {},
        "Preconditions": "User has cancelled subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Re-activate subscription  3. Confirm re-activation",
        "Expected Result": "User subscription should be re-activated"
      },
      {
        "ID": "TC804",
        "Title": "Verify subscription renewal process",
        "Test Data": {},
        "Preconditions": "Subscription renewal date approaching",
        "Steps to Replicate": "1. Monitor subscription renewal date  2. Verify renewal process",
        "Expected Result": "Subscription should renew automatically"
      },
      {
        "ID": "TC805",
        "Title": "Change user billing information",
        "Test Data": {
          "New Billing Info": "Updated credit card details"
        },
        "Preconditions": "User has billing information saved",
        "Steps to Replicate": "1. Navigate to billing information  2. Update billing information  3. Save changes",
        "Expected Result": "User billing information should be updated"
      },
      {
        "ID": "TC806",
        "Title": "Verify subscription invoice generation",
        "Test Data": {},
        "Preconditions": "Subscription renewal triggered",
        "Steps to Replicate": "1. Monitor subscription renewal  2. Verify invoice generation",
        "Expected Result": "Invoice for subscription renewal should be generated"
      },
      {
        "ID": "TC807",
        "Title": "Change subscription plan from Quarterly to Bi-annual",
        "Test Data": {
          "From": "Quarterly",
          "To": "Bi-annual"
        },
        "Preconditions": "User has Quarterly subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Change plan from Quarterly to Bi-annual  3. Confirm change",
        "Expected Result": "User should be subscribed to the Bi-annual plan"
      },
      {
        "ID": "TC808",
        "Title": "Handle subscription renewal failure",
        "Test Data": {},
        "Preconditions": "Subscription renewal attempted with invalid payment method",
        "Steps to Replicate": "1. Trigger subscription renewal  2. Verify renewal failure handling",
        "Expected Result": "System should handle renewal failure appropriately"
      },
      {
        "ID": "TC809",
        "Title": "Verify subscription expiration notification",
        "Test Data": {},
        "Preconditions": "Subscription expiration approaching",
        "Steps to Replicate": "1. Monitor subscription expiration date  2. Verify expiration notification",
        "Expected Result": "Notification for subscription expiration should be sent"
      },
      {
        "ID": "TC810",
        "Title": "Upgrade user subscription to Enterprise plan",
        "Test Data": {
          "From": "Premium",
          "To": "Enterprise"
        },
        "Preconditions": "User has Premium subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Upgrade from Premium to Enterprise  3. Confirm upgrade",
        "Expected Result": "User should be upgraded to the Enterprise subscription"
      },
      {
        "ID": "TC811",
        "Title": "Downgrade user subscription to Basic plan",
        "Test Data": {
          "From": "Enterprise",
          "To": "Basic"
        },
        "Preconditions": "User has Enterprise subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Downgrade from Enterprise to Basic  3. Confirm downgrade",
        "Expected Result": "User should be downgraded to the Basic subscription"
      },
      {
        "ID": "TC812",
        "Title": "Pause user subscription",
        "Test Data": {},
        "Preconditions": "User has active subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Pause subscription  3. Confirm pause",
        "Expected Result": "User subscription should be paused"
      },
      {
        "ID": "TC813",
        "Title": "Resume paused user subscription",
        "Test Data": {},
        "Preconditions": "User has paused subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Resume subscription  3. Confirm resume",
        "Expected Result": "User subscription should be resumed"
      },
      {
        "ID": "TC814",
        "Title": "Verify subscription downgrade process",
        "Test Data": {},
        "Preconditions": "User has active subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Initiate downgrade process  3. Confirm downgrade",
        "Expected Result": "User subscription should be downgraded as per the process"
      },
      {
        "ID": "TC815",
        "Title": "Handle subscription cancellation with refund",
        "Test Data": {},
        "Preconditions": "User has active subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Initiate cancellation with refund  3. Confirm cancellation",
        "Expected Result": "Subscription should be cancelled and refund processed"
      },
      {
        "ID": "TC816",
        "Title": "Verify subscription re-activation after cancellation",
        "Test Data": {},
        "Preconditions": "User has cancelled subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Re-activate subscription  3. Confirm re-activation",
        "Expected Result": "User subscription should be re-activated after cancellation"
      },
      {
        "ID": "TC817",
        "Title": "Upgrade user subscription to Premium plan",
        "Test Data": {
          "From": "Basic",
          "To": "Premium"
        },
        "Preconditions": "User has Basic subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Upgrade from Basic to Premium  3. Confirm upgrade",
        "Expected Result": "User should be upgraded to the Premium subscription"
      },
      {
        "ID": "TC818",
        "Title": "Verify subscription billing cycle adjustment",
        "Test Data": {},
        "Preconditions": "User has active subscription",
        "Steps to Replicate": "1. Navigate to subscription settings  2. Adjust billing cycle  3. Confirm adjustment",
        "Expected Result": "Billing cycle for subscription should be adjusted as per user request"
      },
      {
        "ID": "TC819",
        "Title": "Add new credit card",
        "Test Data": {
          "Credit Card Number": "1234 5678 9012 3456",
          "Expiration Date": "12/25",
          "CVV": "123"
        },
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to payment settings  2. Add new credit card  3. Enter card details and save",
        "Expected Result": "New credit card should be added successfully"
      },
      {
        "ID": "TC820",
        "Title": "Edit credit card details",
        "Test Data": {
          "New Expiration Date": "12/28"
        },
        "Preconditions": "User has existing credit card",
        "Steps to Replicate": "1. Navigate to payment settings  2. Edit credit card details  3. Update expiration date and save",
        "Expected Result": "Credit card details should be updated successfully"
      },
      {
        "ID": "TC821",
        "Title": "Remove credit card",
        "Test Data": {},
        "Preconditions": "User has existing credit card",
        "Steps to Replicate": "1. Navigate to payment settings  2. Remove credit card  3. Confirm removal",
        "Expected Result": "Credit card should be removed from user account"
      },
      {
        "ID": "TC822",
        "Title": "Verify credit card validation",
        "Test Data": {
          "Invalid Credit Card Number": "9999 9999 9999 9999",
          "Expiration Date": "12/25",
          "CVV": "123"
        },
        "Preconditions": "User on payment page",
        "Steps to Replicate": "1. Enter invalid credit card details  2. Attempt to save details",
        "Expected Result": "Validation error should be displayed for invalid credit card number"
      },
      {
        "ID": "TC823",
        "Title": "Add multiple credit cards",
        "Test Data": [
          {
            "Credit Card Number": "1111 2222 3333 4444",
            "Expiration Date": "12/26",
            "CVV": "456"
          },
          {
            "Credit Card Number": "5555 6666 7777 8888",
            "Expiration Date": "12/27",
            "CVV": "789"
          }
        ],
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to payment settings  2. Add multiple credit cards  3. Enter card details and save",
        "Expected Result": "Multiple credit cards should be added successfully"
      },
      {
        "ID": "TC824",
        "Title": "Verify credit card encryption",
        "Test Data": {},
        "Preconditions": "User added credit card",
        "Steps to Replicate": "1. Verify that credit card details are encrypted in database",
        "Expected Result": "Credit card details should be securely encrypted"
      },
      {
        "ID": "TC825",
        "Title": "Change default credit card",
        "Test Data": {},
        "Preconditions": "User has multiple credit cards",
        "Steps to Replicate": "1. Navigate to payment settings  2. Select new default credit card  3. Save changes",
        "Expected Result": "Default credit card should be updated successfully"
      },
      {
        "ID": "TC826",
        "Title": "Verify credit card auto-expiration alert",
        "Test Data": {},
        "Preconditions": "User has credit card with expiration approaching",
        "Steps to Replicate": "1. Monitor expiration date of credit card  2. Verify auto-expiration alert",
        "Expected Result": "Auto-expiration alert should notify user before credit card expires"
      },
      {
        "ID": "TC827",
        "Title": "Verify credit card transaction history",
        "Test Data": {},
        "Preconditions": "User has made transactions with credit card",
        "Steps to Replicate": "1. Navigate to transaction history  2. Verify credit card transactions",
        "Expected Result": "Transaction history should display correct details for credit card transactions"
      },
      {
        "ID": "TC828",
        "Title": "Add credit card with special characters",
        "Test Data": {
          "Credit Card Number": "1234-5678-9012-3456",
          "Expiration Date": "12/25",
          "CVV": "123"
        },
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to payment settings  2. Add credit card with special characters  3. Enter card details and save",
        "Expected Result": "Credit card with special characters should be added successfully"
      },
      {
        "ID": "TC829",
        "Title": "Verify credit card billing address update",
        "Test Data": {
          "New Billing Address": "123 Main St, Anytown, USA"
        },
        "Preconditions": "User has existing credit card",
        "Steps to Replicate": "1. Navigate to payment settings  2. Update billing address  3. Save changes",
        "Expected Result": "Billing address for credit card should be updated successfully"
      },
      {
        "ID": "TC830",
        "Title": "Verify credit card statement generation",
        "Test Data": {},
        "Preconditions": "User has made transactions with credit card",
        "Steps to Replicate": "1. Navigate to statement generation  2. Verify credit card statement",
        "Expected Result": "Credit card statement should be generated accurately"
      },
      {
        "ID": "TC831",
        "Title": "Verify credit card expiration notification",
        "Test Data": {},
        "Preconditions": "Credit card expiration approaching",
        "Steps to Replicate": "1. Monitor credit card expiration date  2. Verify expiration notification",
        "Expected Result": "Notification for credit card expiration should be sent"
      },
      {
        "ID": "TC832",
        "Title": "Update expired credit card",
        "Test Data": {
          "New Expiration Date": "12/28"
        },
        "Preconditions": "User has expired credit card",
        "Steps to Replicate": "1. Navigate to payment settings  2. Update expiration date of expired credit card  3. Save changes",
        "Expected Result": "Expired credit card details should be updated successfully"
      },
      {
        "ID": "TC833",
        "Title": "Verify credit card reactivation after expiration",
        "Test Data": {},
        "Preconditions": "User has expired credit card",
        "Steps to Replicate": "1. Navigate to payment settings  2. Reactivate expired credit card  3. Confirm reactivation",
        "Expected Result": "Expired credit card should be reactivated successfully"
      },
      {
        "ID": "TC834",
        "Title": "Verify credit card fraud detection",
        "Test Data": {
          "Suspicious Transaction": "Large sum transaction"
        },
        "Preconditions": "User has active credit card",
        "Steps to Replicate": "1. Trigger suspicious transaction  2. Verify fraud detection alert",
        "Expected Result": "Fraud detection system should detect and alert for suspicious transactions"
      },
      {
        "ID": "TC835",
        "Title": "Verify credit card limit increase request",
        "Test Data": {
          "Limit Increase Request": "Double current limit"
        },
        "Preconditions": "User has active credit card",
        "Steps to Replicate": "1. Navigate to limit increase request  2. Submit request  3. Await approval",
        "Expected Result": "Credit card limit should be increased as per request after approval"
      },
      {
        "ID": "TC836",
        "Title": "Verify credit card payment gateway integration",
        "Test Data": {
          "Amount": "100",
          "Payment Gateway": "XYZ"
        },
        "Preconditions": "User making payment",
        "Steps to Replicate": "1. Proceed to payment checkout  2. Select payment gateway  3. Complete payment",
        "Expected Result": "Payment should be processed successfully through selected payment gateway"
      },
      {
        "ID": "TC837",
        "Title": "Verify credit card decline handling",
        "Test Data": {
          "Insufficient Funds": "1000"
        },
        "Preconditions": "User making payment",
        "Steps to Replicate": "1. Proceed to payment checkout  2. Attempt payment with insufficient funds  3. Verify decline handling",
        "Expected Result": "System should handle decline due to insufficient funds appropriately"
      },
      {
        "ID": "TC838",
        "Title": "Verify credit card chargeback process",
        "Test Data": {
          "Chargeback Request": "Unauthorized transaction"
        },
        "Preconditions": "User initiated chargeback request",
        "Steps to Replicate": "1. Navigate to chargeback request  2. Submit chargeback request  3. Await resolution",
        "Expected Result": "Chargeback request should be processed and resolved as per policies"
      },
      {
        "ID": "TC839",
        "Title": "Add new signature",
        "Test Data": {
          "Signature Content": "Best regards,  John Doe"
        },
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to signature settings  2. Add new signature  3. Enter signature content and save",
        "Expected Result": "New signature should be added successfully"
      },
      {
        "ID": "TC840",
        "Title": "Edit signature content",
        "Test Data": {
          "Updated Signature Content": "Warm regards,  Jane Smith"
        },
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Edit signature content  3. Update content and save",
        "Expected Result": "Signature content should be updated successfully"
      },
      {
        "ID": "TC841",
        "Title": "Remove signature",
        "Test Data": {},
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Remove signature  3. Confirm removal",
        "Expected Result": "Signature should be removed from user account"
      },
      {
        "ID": "TC842",
        "Title": "Set default signature",
        "Test Data": {},
        "Preconditions": "User has multiple signatures",
        "Steps to Replicate": "1. Navigate to signature settings  2. Set default signature  3. Save changes",
        "Expected Result": "Default signature should be set successfully"
      },
      {
        "ID": "TC843",
        "Title": "Add signature with special characters",
        "Test Data": {
          "Signature Content": "Greetings,  -- John O'Connor --"
        },
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to signature settings  2. Add signature with special characters  3. Enter content and save",
        "Expected Result": "Signature with special characters should be added successfully"
      },
      {
        "ID": "TC844",
        "Title": "Verify signature format",
        "Test Data": {},
        "Preconditions": "User added signature",
        "Steps to Replicate": "1. Verify that signature format meets specified requirements",
        "Expected Result": "Signature format should be valid as per requirements"
      },
      {
        "ID": "TC845",
        "Title": "Change signature font style",
        "Test Data": {
          "Font Style": "Arial"
        },
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Change font style  3. Save changes",
        "Expected Result": "Signature font style should be updated successfully"
      },
      {
        "ID": "TC846",
        "Title": "Verify signature size limit",
        "Test Data": {
          "Signature Content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed viverra nulla sit amet mi condimentum, et rutrum felis gravida."
        },
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to signature settings  2. Attempt to add signature exceeding size limit  3. Verify error message",
        "Expected Result": "Error message should be displayed for exceeding signature size limit"
      },
      {
        "ID": "TC847",
        "Title": "Change signature alignment",
        "Test Data": {
          "Alignment": "Right"
        },
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Change alignment  3. Save changes",
        "Expected Result": "Signature alignment should be updated successfully"
      },
      {
        "ID": "TC848",
        "Title": "Verify signature preview",
        "Test Data": {},
        "Preconditions": "User has saved signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. View signature preview",
        "Expected Result": "Signature preview should display correct formatting and content"
      },
      {
        "ID": "TC849",
        "Title": "Add signature with image",
        "Test Data": {
          "Signature Content": "Regards,  [Image: company_logo.png]"
        },
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to signature settings  2. Add signature with image  3. Upload image and save",
        "Expected Result": "Signature with image should be added successfully"
      },
      {
        "ID": "TC850",
        "Title": "Verify signature email integration",
        "Test Data": {},
        "Preconditions": "User added signature",
        "Steps to Replicate": "1. Compose new email  2. Verify signature is automatically added  3. Send email",
        "Expected Result": "Signature should be automatically added to outgoing emails"
      },
      {
        "ID": "TC851",
        "Title": "Copy signature to another account",
        "Test Data": {},
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Copy signature to another account  3. Confirm copy action",
        "Expected Result": "Signature should be successfully copied to another user account"
      },
      {
        "ID": "TC852",
        "Title": "Verify signature character limit",
        "Test Data": {
          "Signature Content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
        },
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to signature settings  2. Add signature with character limit  3. Verify acceptance of character limit",
        "Expected Result": "Signature should accept character limit as per specifications"
      },
      {
        "ID": "TC853",
        "Title": "Verify signature hyperlink functionality",
        "Test Data": {
          "Hyperlink": "https://example.com"
        },
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Add hyperlink to signature  3. Save changes",
        "Expected Result": "Hyperlink in signature should be clickable and navigate to specified URL"
      },
      {
        "ID": "TC854",
        "Title": "Add multiple signatures",
        "Test Data": [
          {
            "Signature Content": "Best regards,  John Doe"
          },
          {
            "Signature Content": "Warm regards,  Jane Smith"
          }
        ],
        "Preconditions": "User logged into account",
        "Steps to Replicate": "1. Navigate to signature settings  2. Add multiple signatures  3. Enter content and save",
        "Expected Result": "Multiple signatures should be added successfully"
      },
      {
        "ID": "TC855",
        "Title": "Verify signature mobile responsiveness",
        "Test Data": {},
        "Preconditions": "User accessing email from mobile device",
        "Steps to Replicate": "1. Open email app on mobile device  2. View email with signature  3. Verify mobile responsiveness",
        "Expected Result": "Signature should display correctly and responsively on mobile devices"
      },
      {
        "ID": "TC856",
        "Title": "Verify signature text color customization",
        "Test Data": {
          "Text Color": "Blue"
        },
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Customize text color  3. Save changes",
        "Expected Result": "Text color in signature should be updated as per customization"
      },
      {
        "ID": "TC857",
        "Title": "Verify signature automatic update",
        "Test Data": {},
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Make changes to user profile  2. Verify signature updates automatically",
        "Expected Result": "Signature should automatically update to reflect changes in user profile"
      },
      {
        "ID": "TC858",
        "Title": "Verify signature undo changes functionality",
        "Test Data": {},
        "Preconditions": "User has existing signature with recent changes",
        "Steps to Replicate": "1. Navigate to signature settings  2. Make changes to signature  3. Use undo functionality",
        "Expected Result": "Undo functionality should revert recent changes made to signature"
      },
      {
        "ID": "TC859",
        "Title": "Verify signature spell check functionality",
        "Test Data": {},
        "Preconditions": "User composing new email",
        "Steps to Replicate": "1. Compose email with signature  2. Verify spell check in signature content",
        "Expected Result": "Spell check should be functional and check signature content for spelling errors"
      },
      {
        "ID": "TC860",
        "Title": "Verify signature file attachment",
        "Test Data": {
          "Attachment": "signature_logo.png"
        },
        "Preconditions": "User has existing signature",
        "Steps to Replicate": "1. Navigate to signature settings  2. Attach file to signature  3. Save changes",
        "Expected Result": "File should be successfully attached to signature"
      },
      {
        "ID": "TC861",
        "Title": "Encrypt user passwords",
        "Test Data": {},
        "Preconditions": "No encryption applied to passwords",
        "Steps to Replicate": "1. Implement password encryption algorithm  2. Encrypt existing user passwords",
        "Expected Result": "User passwords should be securely encrypted"
      },
      {
        "ID": "TC862",
        "Title": "Implement multi-factor authentication (MFA)",
        "Test Data": {},
        "Preconditions": "No MFA implemented",
        "Steps to Replicate": "1. Integrate MFA into login process  2. Enable MFA for user accounts",
        "Expected Result": "MFA should be successfully implemented and functional"
      },
      {
        "ID": "TC863",
        "Title": "Validate input data for SQL injection",
        "Test Data": {
          "Input Data": "'; DROP TABLE Users;"
        },
        "Preconditions": "No input validation for SQL injection",
        "Steps to Replicate": "1. Enter SQL injection code in input fields  2. Submit form or data",
        "Expected Result": "SQL injection attempt should be detected and prevented"
      },
      {
        "ID": "TC864",
        "Title": "Test for cross-site scripting (XSS)",
        "Test Data": {
          "Script Tag": "<script>alert('XSS attack');</script>"
        },
        "Preconditions": "No XSS protection in place",
        "Steps to Replicate": "1. Inject XSS payload into input fields or URL parameters  2. Load affected page or resource",
        "Expected Result": "XSS payload should be sanitized or escaped to prevent execution"
      },
      {
        "ID": "TC865",
        "Title": "Implement rate limiting for login attempts",
        "Test Data": {},
        "Preconditions": "No rate limiting for login attempts",
        "Steps to Replicate": "1. Attempt multiple login requests within a short time span  2. Exceed allowed limit",
        "Expected Result": "Excessive login attempts should trigger rate limiting and block further attempts"
      },
      {
        "ID": "TC866",
        "Title": "Audit logging for critical operations",
        "Test Data": {},
        "Preconditions": "No audit logging enabled",
        "Steps to Replicate": "1. Perform critical operation (e.g., user deletion, database modification)  2. Check audit log records",
        "Expected Result": "Audit log should record details of critical operations performed"
      },
      {
        "ID": "TC867",
        "Title": "Implement HTTPS across all pages",
        "Test Data": {},
        "Preconditions": "Some pages not using HTTPS",
        "Steps to Replicate": "1. Access pages with HTTP protocol  2. Verify HTTPS is enforced",
        "Expected Result": "All pages should be served over HTTPS for secure communication"
      },
      {
        "ID": "TC868",
        "Title": "Review and update access control policies",
        "Test Data": {},
        "Preconditions": "Access control policies outdated or insecure",
        "Steps to Replicate": "1. Review existing access control policies  2. Update policies to enforce least privilege",
        "Expected Result": "Access control policies should restrict unauthorized access appropriately"
      },
      {
        "ID": "TC869",
        "Title": "Conduct security code review",
        "Test Data": {},
        "Preconditions": "No recent security code review conducted",
        "Steps to Replicate": "1. Review source code for security vulnerabilities  2. Identify potential issues and risks",
        "Expected Result": "Security vulnerabilities should be identified and mitigated"
      },
      {
        "ID": "TC870",
        "Title": "Test firewall configurations",
        "Test Data": {},
        "Preconditions": "Firewall rules not thoroughly tested",
        "Steps to Replicate": "1. Check firewall configurations and rules  2. Simulate various network traffic scenarios",
        "Expected Result": "Firewall should effectively filter and block unauthorized network traffic"
      },
      {
        "ID": "TC871",
        "Title": "Test data encryption in transit",
        "Test Data": {},
        "Preconditions": "Data transmission not encrypted",
        "Steps to Replicate": "1. Monitor data transmission between client and server  2. Verify encryption protocols and certificates",
        "Expected Result": "Data transmitted between client and server should be encrypted"
      },
      {
        "ID": "TC872",
        "Title": "Perform vulnerability scanning",
        "Test Data": {},
        "Preconditions": "No recent vulnerability scanning performed",
        "Steps to Replicate": "1. Conduct vulnerability scanning using tools  2. Analyze scan results for security flaws",
        "Expected Result": "Identify and address vulnerabilities found in the system"
      },
      {
        "ID": "TC873",
        "Title": "Test session management",
        "Test Data": {},
        "Preconditions": "Session management not thoroughly tested",
        "Steps to Replicate": "1. Login to application  2. Check session expiration and cookie attributes",
        "Expected Result": "Session management should securely handle user sessions and prevent session hijacking"
      },
      {
        "ID": "TC874",
        "Title": "Review and update password policy",
        "Test Data": {},
        "Preconditions": "Current password policy weak or outdated",
        "Steps to Replicate": "1. Review existing password policy  2. Strengthen policy (e.g., enforce complexity, expiration)",
        "Expected Result": "Password policy should promote stronger user authentication"
      },
      {
        "ID": "TC875",
        "Title": "Test for directory traversal attacks",
        "Test Data": {
          "Path Traversal Attempt": "../../../../etc/passwd"
        },
        "Preconditions": "No directory traversal protection",
        "Steps to Replicate": "1. Attempt to access files outside web root directory  2. Check response or access log",
        "Expected Result": "Directory traversal attempt should be blocked or sanitized"
      },
      {
        "ID": "TC876",
        "Title": "Implement security headers",
        "Test Data": {},
        "Preconditions": "No security headers implemented",
        "Steps to Replicate": "1. Check HTTP response headers for security headers  2. Implement necessary security headers",
        "Expected Result": "Security headers (e.g., Content Security Policy, X-Frame-Options) should be present and configured correctly"
      },
      {
        "ID": "TC877",
        "Title": "Conduct penetration testing",
        "Test Data": {},
        "Preconditions": "No recent penetration testing conducted",
        "Steps to Replicate": "1. Perform penetration testing using ethical hacking techniques  2. Attempt to exploit vulnerabilities",
        "Expected Result": "Identify and mitigate potential security weaknesses through penetration testing"
      },
      {
        "ID": "TC878",
        "Title": "Review third-party library dependencies",
        "Test Data": {},
        "Preconditions": "No recent review of third-party dependencies",
        "Steps to Replicate": "1. Identify third-party libraries used in application  2. Check for security vulnerabilities in libraries",
        "Expected Result": "Ensure third-party libraries are secure and up-to-date"
      },
      {
        "ID": "TC879",
        "Title": "Implement security incident response plan",
        "Test Data": {},
        "Preconditions": "No security incident response plan in place",
        "Steps to Replicate": "1. Define and document incident response procedures  2. Simulate security incident (e.g., data breach)",
        "Expected Result": "Security incident response plan should guide timely and effective response"
      },
      {
        "ID": "TC880",
        "Title": "Review and update SSL/TLS configuration",
        "Test Data": {},
        "Preconditions": "SSL/TLS configuration not recently reviewed",
        "Steps to Replicate": "1. Review SSL/TLS configuration and certificates  2. Update configuration to use latest standards",
        "Expected Result": "SSL/TLS configuration should provide strong encryption and security"
      },
      {
        "ID": "TC881",
        "Title": "Test security of file uploads",
        "Test Data": {
          "Malicious File": "malware.exe"
        },
        "Preconditions": "File upload functionality not tested for security",
        "Steps to Replicate": "1. Attempt to upload malicious file  2. Check file handling and validation",
        "Expected Result": "Malicious file uploads should be detected and prevented"
      },
      {
        "ID": "TC882",
        "Title": "Review and update security policies",
        "Test Data": {},
        "Preconditions": "Current security policies outdated or insufficient",
        "Steps to Replicate": "1. Review existing security policies (e.g., data protection, access control)  2. Update policies to address new threats",
        "Expected Result": "Security policies should align with current best practices and regulatory requirements"
      },
      {
        "ID": "TC883",
        "Title": "Create a new team",
        "Test Data": {
          "Team Name": "QA Team",
          "Members": ["User1", "User2", "User3"]
        },
        "Preconditions": "No existing team with the same name",
        "Steps to Replicate": "1. Navigate to Teams section  2. Click on 'Create New Team'  3. Enter Team Name and add Members  4. Save the new team",
        "Expected Result": "New team should be created successfully with specified members"
      },
      {
        "ID": "TC884",
        "Title": "Edit team details",
        "Test Data": {
          "Team Name": "Updated QA Team",
          "New Members": ["User4", "User5"]
        },
        "Preconditions": "Existing team 'QA Team' with members",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Edit Team Name and add New Members  4. Save the changes",
        "Expected Result": "Team details should be updated successfully with new team name and members"
      },
      {
        "ID": "TC885",
        "Title": "Delete a team",
        "Test Data": {
          "Team Name": "QA Team"
        },
        "Preconditions": "Existing team 'QA Team' with no pending tasks",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Click on 'Delete Team'  4. Confirm deletion",
        "Expected Result": "Team 'QA Team' should be deleted successfully"
      },
      {
        "ID": "TC886",
        "Title": "Add a new team member",
        "Test Data": {
          "Member Name": "New User",
          "Team": "QA Team"
        },
        "Preconditions": "User 'New User' not already in 'QA Team'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Click on 'Add New Member'  4. Enter Member Name and save",
        "Expected Result": "User 'New User' should be added successfully to 'QA Team'"
      },
      {
        "ID": "TC887",
        "Title": "Remove a team member",
        "Test Data": {
          "Member Name": "User3",
          "Team": "QA Team"
        },
        "Preconditions": "User 'User3' exists in 'QA Team'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Find 'User3' in the Members list  4. Click on 'Remove Member'  5. Confirm removal",
        "Expected Result": "User 'User3' should be successfully removed from 'QA Team'"
      },
      {
        "ID": "TC888",
        "Title": "Assign team roles",
        "Test Data": {
          "Member Name": "User1",
          "Role": "Team Lead"
        },
        "Preconditions": "No role assigned to 'User1' in 'QA Team'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Find 'User1' in the Members list  4. Click on 'Assign Role'  5. Select 'Team Lead' role and save",
        "Expected Result": "User 'User1' should be assigned the 'Team Lead' role in 'QA Team'"
      },
      {
        "ID": "TC889",
        "Title": "Change team roles",
        "Test Data": {
          "Member Name": "User2",
          "New Role": "Developer"
        },
        "Preconditions": "User 'User2' has existing role in 'QA Team'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Find 'User2' in the Members list  4. Click on 'Change Role'  5. Select 'Developer' as the new role and save",
        "Expected Result": "User 'User2' should have the role changed to 'Developer' in 'QA Team'"
      },
      {
        "ID": "TC890",
        "Title": "View team details",
        "Test Data": {
          "Team Name": "QA Team"
        },
        "Preconditions": "Team 'QA Team' exists",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. View Team Details",
        "Expected Result": "Details of Team 'QA Team' should be displayed"
      },
      {
        "ID": "TC891",
        "Title": "Search for team members",
        "Test Data": {
          "Search Query": "User1"
        },
        "Preconditions": "Several team members exist including 'User1'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Enter 'User1' in the search box  3. Perform search",
        "Expected Result": "User 'User1' should be listed among the search results"
      },
      {
        "ID": "TC892",
        "Title": "Sort team members",
        "Test Data": {
          "Sort Criteria": "Alphabetical by Name"
        },
        "Preconditions": "Several team members exist in 'QA Team'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Sort members alphabetically by Name",
        "Expected Result": "Team members in 'QA Team' should be sorted alphabetically by Name"
      },
      {
        "ID": "TC893",
        "Title": "Filter team members",
        "Test Data": {
          "Filter Criteria": "Role: Developer"
        },
        "Preconditions": "Multiple team members with different roles",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Apply filter by Role: Developer",
        "Expected Result": "Only team members with 'Developer' role should be displayed"
      },
      {
        "ID": "TC894",
        "Title": "Invite new team members",
        "Test Data": {
          "Email": "newuser@example.com",
          "Team": "QA Team"
        },
        "Preconditions": "No invitation sent to 'newuser@example.com' for 'QA Team'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Click on 'Invite New Member'  4. Enter Email and send invitation",
        "Expected Result": "Invitation should be successfully sent to 'newuser@example.com' for 'QA Team'"
      },
      {
        "ID": "TC895",
        "Title": "Accept team invitation",
        "Test Data": {
          "Invitation Email": "invitation@example.com"
        },
        "Preconditions": "Pending invitation sent to 'invitation@example.com'",
        "Steps to Replicate": "1. Check email inbox for 'invitation@example.com'  2. Click on invitation link  3. Accept invitation",
        "Expected Result": "User should be successfully added to 'QA Team' after accepting the invitation"
      },
      {
        "ID": "TC896",
        "Title": "Reject team invitation",
        "Test Data": {
          "Invitation Email": "invitation@example.com"
        },
        "Preconditions": "Pending invitation sent to 'invitation@example.com'",
        "Steps to Replicate": "1. Check email inbox for 'invitation@example.com'  2. Click on invitation link  3. Reject invitation",
        "Expected Result": "Invitation for 'QA Team' should be declined and user not added"
      },
      {
        "ID": "TC897",
        "Title": "Transfer team ownership",
        "Test Data": {
          "New Owner": "User2",
          "Current Owner": "User1"
        },
        "Preconditions": "User 'User1' is current owner of 'QA Team'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Click on 'Transfer Ownership'  4. Select 'User2' as new owner",
        "Expected Result": "'User2' should become the new owner of 'QA Team' and have full administrative privileges"
      },
      {
        "ID": "TC898",
        "Title": "Assign tasks to team members",
        "Test Data": {
          "Task": "Feature Testing",
          "Assigned To": "User1"
        },
        "Preconditions": "Task 'Feature Testing' not assigned to 'User1'",
        "Steps to Replicate": "1. Navigate to Teams section  2. Find and select 'QA Team'  3. Click on 'Assign Task'  4. Select 'User1' and assign 'Feature Testing'",
        "Expected Result": "Task 'Feature Testing' should be successfully assigned to 'User1' in 'QA Team'"
      },
      {
        "ID": "TC899",
        "Title": "Set contact as high priority",
        "Test Data": {
          "Contact Name": "John Doe"
        },
        "Preconditions": "Contact 'John Doe' exists",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'John Doe'  3. Set priority as High  4. Save changes",
        "Expected Result": "'John Doe' should be marked as a high priority contact"
      },
      {
        "ID": "TC900",
        "Title": "Set contact as medium priority",
        "Test Data": {
          "Contact Name": "Jane Smith"
        },
        "Preconditions": "Contact 'Jane Smith' exists",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'Jane Smith'  3. Set priority as Medium  4. Save changes",
        "Expected Result": "'Jane Smith' should be marked as a medium priority contact"
      },
      {
        "ID": "TC901",
        "Title": "Set contact as low priority",
        "Test Data": {
          "Contact Name": "Alice Johnson"
        },
        "Preconditions": "Contact 'Alice Johnson' exists",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'Alice Johnson'  3. Set priority as Low  4. Save changes",
        "Expected Result": "'Alice Johnson' should be marked as a low priority contact"
      },
      {
        "ID": "TC902",
        "Title": "Change contact priority from high to medium",
        "Test Data": {
          "Contact Name": "John Doe"
        },
        "Preconditions": "Contact 'John Doe' is currently set as high priority",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'John Doe'  3. Change priority from High to Medium  4. Save changes",
        "Expected Result": "'John Doe' should now be marked as a medium priority contact"
      },
      {
        "ID": "TC903",
        "Title": "Change contact priority from high to low",
        "Test Data": {
          "Contact Name": "John Doe"
        },
        "Preconditions": "Contact 'John Doe' is currently set as high priority",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'John Doe'  3. Change priority from High to Low  4. Save changes",
        "Expected Result": "'John Doe' should now be marked as a low priority contact"
      },
      {
        "ID": "TC904",
        "Title": "Change contact priority from medium to high",
        "Test Data": {
          "Contact Name": "Jane Smith"
        },
        "Preconditions": "Contact 'Jane Smith' is currently set as medium priority",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'Jane Smith'  3. Change priority from Medium to High  4. Save changes",
        "Expected Result": "'Jane Smith' should now be marked as a high priority contact"
      },
      {
        "ID": "TC905",
        "Title": "Change contact priority from medium to low",
        "Test Data": {
          "Contact Name": "Jane Smith"
        },
        "Preconditions": "Contact 'Jane Smith' is currently set as medium priority",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'Jane Smith'  3. Change priority from Medium to Low  4. Save changes",
        "Expected Result": "'Jane Smith' should now be marked as a low priority contact"
      },
      {
        "ID": "TC906",
        "Title": "Change contact priority from low to high",
        "Test Data": {
          "Contact Name": "Alice Johnson"
        },
        "Preconditions": "Contact 'Alice Johnson' is currently set as low priority",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'Alice Johnson'  3. Change priority from Low to High  4. Save changes",
        "Expected Result": "'Alice Johnson' should now be marked as a high priority contact"
      },
      {
        "ID": "TC907",
        "Title": "Change contact priority from low to medium",
        "Test Data": {
          "Contact Name": "Alice Johnson"
        },
        "Preconditions": "Contact 'Alice Johnson' is currently set as low priority",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'Alice Johnson'  3. Change priority from Low to Medium  4. Save changes",
        "Expected Result": "'Alice Johnson' should now be marked as a medium priority contact"
      },
      {
        "ID": "TC908",
        "Title": "View high priority contacts",
        "Test Data": {
          "Priority Level": "High"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Filter contacts by High priority",
        "Expected Result": "Only contacts marked as high priority should be displayed"
      },
      {
        "ID": "TC909",
        "Title": "View medium priority contacts",
        "Test Data": {
          "Priority Level": "Medium"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Filter contacts by Medium priority",
        "Expected Result": "Only contacts marked as medium priority should be displayed"
      },
      {
        "ID": "TC910",
        "Title": "View low priority contacts",
        "Test Data": {
          "Priority Level": "Low"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Filter contacts by Low priority",
        "Expected Result": "Only contacts marked as low priority should be displayed"
      },
      {
        "ID": "TC911",
        "Title": "Sort contacts by priority (high to low)",
        "Test Data": {
          "Sort Order": "High to Low"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Sort contacts by priority from High to Low",
        "Expected Result": "Contacts should be sorted in descending order of priority"
      },
      {
        "ID": "TC912",
        "Title": "Sort contacts by priority (low to high)",
        "Test Data": {
          "Sort Order": "Low to High"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Sort contacts by priority from Low to High",
        "Expected Result": "Contacts should be sorted in ascending order of priority"
      },
      {
        "ID": "TC913",
        "Title": "Search for high priority contacts",
        "Test Data": {
          "Search Query": "High priority"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Enter 'High priority' in the search box  3. Perform search",
        "Expected Result": "Contacts marked as high priority should be listed among the search results"
      },
      {
        "ID": "TC914",
        "Title": "Search for medium priority contacts",
        "Test Data": {
          "Search Query": "Medium priority"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Enter 'Medium priority' in the search box  3. Perform search",
        "Expected Result": "Contacts marked as medium priority should be listed among the search results"
      },
      {
        "ID": "TC915",
        "Title": "Search for low priority contacts",
        "Test Data": {
          "Search Query": "Low priority"
        },
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Enter 'Low priority' in the search box  3. Perform search",
        "Expected Result": "Contacts marked as low priority should be listed among the search results"
      },
      {
        "ID": "TC916",
        "Title": "Clear priority for a contact",
        "Test Data": {
          "Contact Name": "John Doe"
        },
        "Preconditions": "Contact 'John Doe' has a priority level set",
        "Steps to Replicate": "1. Navigate to Contacts section  2. Find and select 'John Doe'  3. Clear priority setting  4. Save changes",
        "Expected Result": "Priority for 'John Doe' should be cleared successfully"
      },
      {
        "ID": "TC917",
        "Title": "View all contacts regardless of priority",
        "Test Data": {},
        "Preconditions": "Multiple contacts with different priority levels",
        "Steps to Replicate": "1. Navigate to Contacts section  2. View all contacts",
        "Expected Result": "All contacts should be displayed regardless of priority setting"
      },
      {
        "ID": "TC918",
        "Title": "Automate login process",
        "Test Data": {
          "Username": "testuser",
          "Password": "testpass"
        },
        "Preconditions": "Login page is accessible",
        "Steps to Replicate": "1. Navigate to login page  2. Enter valid credentials  3. Click on 'Login' button",
        "Expected Result": "User should be logged in successfully"
      },
      {
        "ID": "TC919",
        "Title": "Automate logout process",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Navigate to logout functionality  2. Click on 'Logout' button",
        "Expected Result": "User should be logged out successfully"
      },
      {
        "ID": "TC920",
        "Title": "Automate user registration",
        "Test Data": {
          "Username": "newuser",
          "Email": "newuser@example.com",
          "Password": "newpass"
        },
        "Preconditions": "Registration page is accessible",
        "Steps to Replicate": "1. Navigate to registration page  2. Enter valid registration details  3. Click on 'Register' button",
        "Expected Result": "User should be registered successfully"
      },
      {
        "ID": "TC921",
        "Title": "Automate password reset",
        "Test Data": {
          "Email": "user@example.com"
        },
        "Preconditions": "Password reset functionality is accessible",
        "Steps to Replicate": "1. Navigate to password reset page  2. Enter registered email  3. Click on 'Reset Password' button",
        "Expected Result": "Password reset email should be sent successfully"
      },
      {
        "ID": "TC922",
        "Title": "Automate file upload",
        "Test Data": {
          "File Path": "/path/to/file.txt"
        },
        "Preconditions": "File upload functionality is accessible",
        "Steps to Replicate": "1. Navigate to file upload section  2. Choose file to upload  3. Click on 'Upload' button",
        "Expected Result": "File should be uploaded successfully"
      },
      {
        "ID": "TC923",
        "Title": "Automate data import",
        "Test Data": {
          "Data File": "/path/to/data.csv"
        },
        "Preconditions": "Data import functionality is accessible",
        "Steps to Replicate": "1. Navigate to data import section  2. Select data file to import  3. Click on 'Import' button",
        "Expected Result": "Data should be imported successfully"
      },
      {
        "ID": "TC924",
        "Title": "Automate data export",
        "Test Data": {},
        "Preconditions": "Data export functionality is accessible",
        "Steps to Replicate": "1. Navigate to data export section  2. Choose export options  3. Click on 'Export' button",
        "Expected Result": "Data should be exported successfully"
      },
      {
        "ID": "TC925",
        "Title": "Automate API testing",
        "Test Data": {
          "API Endpoint": "https://api.example.com"
        },
        "Preconditions": "API endpoint is accessible",
        "Steps to Replicate": "1. Send API request  2. Validate API response",
        "Expected Result": "API should return expected data"
      },
      {
        "ID": "TC926",
        "Title": "Automate UI navigation",
        "Test Data": {
          "Navigation Path": "Dashboard -> Settings -> Profile"
        },
        "Preconditions": "UI navigation elements are present",
        "Steps to Replicate": "1. Navigate through UI elements as per path  2. Verify each navigation step",
        "Expected Result": "User should navigate successfully to the specified UI screen"
      },
      {
        "ID": "TC927",
        "Title": "Automate form submission",
        "Test Data": {
          "Form Fields": {
            "Name": "John Doe",
            "Email": "john.doe@example.com",
            "Message": "Test message"
          }
        },
        "Preconditions": "Form submission functionality is accessible",
        "Steps to Replicate": "1. Navigate to form page  2. Fill out form fields  3. Click on 'Submit' button",
        "Expected Result": "Form should be submitted successfully"
      },
      {
        "ID": "TC928",
        "Title": "Automate search functionality",
        "Test Data": {
          "Search Query": "test"
        },
        "Preconditions": "Search functionality is accessible",
        "Steps to Replicate": "1. Navigate to search bar  2. Enter search query  3. Click on 'Search' button",
        "Expected Result": "Search results should display relevant data"
      },
      {
        "ID": "TC929",
        "Title": "Automate user preferences update",
        "Test Data": {
          "Preferences": {
            "Theme": "Dark Mode",
            "Language": "English"
          }
        },
        "Preconditions": "User preferences section is accessible",
        "Steps to Replicate": "1. Navigate to user preferences section  2. Update preferences  3. Save changes",
        "Expected Result": "User preferences should be updated successfully"
      },
      {
        "ID": "TC930",
        "Title": "Automate data validation",
        "Test Data": {
          "Data": "Sample data to validate"
        },
        "Preconditions": "Data validation functionality is accessible",
        "Steps to Replicate": "1. Navigate to data validation section  2. Enter data to validate  3. Click on 'Validate' button",
        "Expected Result": "Data should pass validation checks"
      },
      {
        "ID": "TC931",
        "Title": "Automate error handling",
        "Test Data": {
          "Error Scenario": "Invalid input"
        },
        "Preconditions": "Error handling functionality is accessible",
        "Steps to Replicate": "1. Trigger error scenario  2. Verify error message",
        "Expected Result": "Appropriate error message should be displayed"
      },
      {
        "ID": "TC932",
        "Title": "Automate database CRUD operations",
        "Test Data": {
          "Data": {
            "ID": 123,
            "Name": "Test Record",
            "Description": "Sample description"
          }
        },
        "Preconditions": "Database CRUD operations are accessible",
        "Steps to Replicate": "1. Perform CRUD operations (Create, Read, Update, Delete)  2. Verify database changes",
        "Expected Result": "Database operations should be executed successfully"
      },
      {
        "ID": "TC933",
        "Title": "Automate data synchronization",
        "Test Data": {},
        "Preconditions": "Data synchronization functionality is accessible",
        "Steps to Replicate": "1. Initiate data synchronization  2. Verify synchronization status",
        "Expected Result": "Data should be synchronized across systems as expected"
      },
      {
        "ID": "TC934",
        "Title": "Automate performance testing",
        "Test Data": {},
        "Preconditions": "Performance testing tools are set up",
        "Steps to Replicate": "1. Execute performance test scenarios  2. Measure performance metrics",
        "Expected Result": "Application should meet performance requirements"
      },
      {
        "ID": "TC935",
        "Title": "Automate integration testing",
        "Test Data": {},
        "Preconditions": "Integration testing environment is set up",
        "Steps to Replicate": "1. Perform integration test cases  2. Verify data flow between systems",
        "Expected Result": "Integration between systems should work seamlessly"
      },
      {
        "ID": "TC936",
        "Title": "Automate cross-browser testing",
        "Test Data": {},
        "Preconditions": "Cross-browser testing tools are set up",
        "Steps to Replicate": "1. Execute cross-browser test cases  2. Validate application behavior across different browsers",
        "Expected Result": "Application should function consistently across supported browsers"
      },
      {
        "ID": "TC937",
        "Title": "Automate accessibility testing",
        "Test Data": {},
        "Preconditions": "Accessibility testing tools are set up",
        "Steps to Replicate": "1. Perform accessibility test cases  2. Verify compliance with accessibility standards",
        "Expected Result": "Application should be accessible to users with disabilities"
      },
      {
        "ID": "TC938",
        "Title": "Automate regression testing",
        "Test Data": {},
        "Preconditions": "Regression test suite is established",
        "Steps to Replicate": "1. Execute regression test cases  2. Verify existing functionalities after changes",
        "Expected Result": "No regression issues should be introduced"
      },
      {
        "ID": "TC939",
        "Title": "Automate backup and recovery testing",
        "Test Data": {},
        "Preconditions": "Backup and recovery procedures are established",
        "Steps to Replicate": "1. Perform backup operation  2. Simulate data loss scenario  3. Execute recovery operation",
        "Expected Result": "Data should be successfully backed up and recovered"
      },
      {
        "ID": "TC940",
        "Title": "Generate new access token",
        "Test Data": {},
        "Preconditions": "User has valid credentials",
        "Steps to Replicate": "1. Navigate to token management section  2. Generate new access token  3. Verify token generation process",
        "Expected Result": "A new access token should be generated successfully"
      },
      {
        "ID": "TC941",
        "Title": "Generate new refresh token",
        "Test Data": {},
        "Preconditions": "User has valid credentials",
        "Steps to Replicate": "1. Navigate to token management section  2. Generate new refresh token  3. Verify token generation process",
        "Expected Result": "A new refresh token should be generated successfully"
      },
      {
        "ID": "TC942",
        "Title": "Regenerate expired access token",
        "Test Data": {},
        "Preconditions": "Current access token has expired",
        "Steps to Replicate": "1. Navigate to token management section  2. Regenerate expired access token  3. Verify token regeneration process",
        "Expected Result": "An expired access token should be regenerated successfully"
      },
      {
        "ID": "TC943",
        "Title": "Regenerate expired refresh token",
        "Test Data": {},
        "Preconditions": "Current refresh token has expired",
        "Steps to Replicate": "1. Navigate to token management section  2. Regenerate expired refresh token  3. Verify token regeneration process",
        "Expected Result": "An expired refresh token should be regenerated successfully"
      },
      {
        "ID": "TC944",
        "Title": "Revoke access token",
        "Test Data": {},
        "Preconditions": "Access token is active",
        "Steps to Replicate": "1. Navigate to token management section  2. Revoke access token  3. Verify token revocation process",
        "Expected Result": "Active access token should be successfully revoked"
      },
      {
        "ID": "TC945",
        "Title": "Revoke refresh token",
        "Test Data": {},
        "Preconditions": "Refresh token is active",
        "Steps to Replicate": "1. Navigate to token management section  2. Revoke refresh token  3. Verify token revocation process",
        "Expected Result": "Active refresh token should be successfully revoked"
      },
      {
        "ID": "TC946",
        "Title": "Validate access token",
        "Test Data": {},
        "Preconditions": "Access token is valid",
        "Steps to Replicate": "1. Navigate to token management section  2. Validate access token  3. Verify token validation process",
        "Expected Result": "Valid access token should pass the validation"
      },
      {
        "ID": "TC947",
        "Title": "Validate refresh token",
        "Test Data": {},
        "Preconditions": "Refresh token is valid",
        "Steps to Replicate": "1. Navigate to token management section  2. Validate refresh token  3. Verify token validation process",
        "Expected Result": "Valid refresh token should pass the validation"
      },
      {
        "ID": "TC948",
        "Title": "Expire access token",
        "Test Data": {},
        "Preconditions": "Access token is active",
        "Steps to Replicate": "1. Navigate to token management section  2. Expire access token manually  3. Verify token expiration process",
        "Expected Result": "Active access token should be expired"
      },
      {
        "ID": "TC949",
        "Title": "Expire refresh token",
        "Test Data": {},
        "Preconditions": "Refresh token is active",
        "Steps to Replicate": "1. Navigate to token management section  2. Expire refresh token manually  3. Verify token expiration process",
        "Expected Result": "Active refresh token should be expired"
      },
      {
        "ID": "TC950",
        "Title": "Handle token expiration gracefully",
        "Test Data": {},
        "Preconditions": "Access token has expired",
        "Steps to Replicate": "1. Attempt to access restricted resource with expired token  2. Verify error handling and token refresh process",
        "Expected Result": "User should be prompted to refresh token and continue operation"
      },
      {
        "ID": "TC951",
        "Title": "Handle token revocation gracefully",
        "Test Data": {},
        "Preconditions": "Token revocation request is processed",
        "Steps to Replicate": "1. Attempt to access restricted resource with revoked token  2. Verify error handling and authentication process",
        "Expected Result": "User should be prompted to re-authenticate or refresh token"
      },
      {
        "ID": "TC952",
        "Title": "Handle token validation errors",
        "Test Data": {},
        "Preconditions": "Invalid token validation scenario",
        "Steps to Replicate": "1. Provide invalid token for validation  2. Verify error handling and validation response",
        "Expected Result": "Invalid token should not pass validation and appropriate error should be returned"
      },
      {
        "ID": "TC953",
        "Title": "Handle token regeneration errors",
        "Test Data": {},
        "Preconditions": "Invalid token regeneration scenario",
        "Steps to Replicate": "1. Attempt to regenerate token with invalid credentials  2. Verify error handling and regeneration response",
        "Expected Result": "Token regeneration should fail with appropriate error message"
      },
      {
        "ID": "TC954",
        "Title": "Handle token revocation errors",
        "Test Data": {},
        "Preconditions": "Invalid token revocation scenario",
        "Steps to Replicate": "1. Attempt to revoke token with invalid credentials  2. Verify error handling and revocation response",
        "Expected Result": "Token revocation should fail with appropriate error message"
      },
      {
        "ID": "TC955",
        "Title": "Ensure token security during transmission",
        "Test Data": {},
        "Preconditions": "Token is transmitted over network",
        "Steps to Replicate": "1. Monitor network traffic for token transmission  2. Verify token encryption and secure transmission",
        "Expected Result": "Token should be securely transmitted and encrypted"
      },
      {
        "ID": "TC956",
        "Title": "Ensure token storage security",
        "Test Data": {},
        "Preconditions": "Token is stored in local storage",
        "Steps to Replicate": "1. Access local storage for stored token  2. Verify token encryption and secure storage",
        "Expected Result": "Token should be securely stored and encrypted"
      },
      {
        "ID": "TC957",
        "Title": "Test token expiration period",
        "Test Data": {},
        "Preconditions": "Token expiration period is set",
        "Steps to Replicate": "1. Wait for token expiration period to lapse  2. Attempt to use expired token  3. Verify token refresh or re-authentication process",
        "Expected Result": "Token should expire after configured time period"
      },
      {
        "ID": "TC958",
        "Title": "Test token refresh mechanism",
        "Test Data": {},
        "Preconditions": "Token refresh functionality is implemented",
        "Steps to Replicate": "1. Wait for access token to expire  2. Verify automatic token refresh process",
        "Expected Result": "Access token should be automatically refreshed without user intervention"
      },
      {
        "ID": "TC960",
        "Title": "Test token invalidation on logout",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Initiate logout process  2. Verify token invalidation",
        "Expected Result": "Access and refresh tokens should be invalidated upon user logout"
      },
      {
        "ID": "TC961",
        "Title": "Test token scope restrictions",
        "Test Data": {},
        "Preconditions": "Token scope restrictions are implemented",
        "Steps to Replicate": "1. Attempt to access restricted resource with limited scope token  2. Verify access restrictions and error handling",
        "Expected Result": "Restricted resource should not be accessible with limited scope token"
      },
      {
        "ID": "TC962",
        "Title": "Test token expiration reminders",
        "Test Data": {},
        "Preconditions": "Token expiration reminder feature is implemented",
        "Steps to Replicate": "1. Wait for token expiration period to approach  2. Verify expiration reminder notification",
        "Expected Result": "User should receive notification before token expiration"
      },
      {
        "ID": "TC963",
        "Title": "Create new session",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Navigate to application  2. Log in with valid credentials  3. Verify session creation",
        "Expected Result": "New session should be created successfully"
      },
      {
        "ID": "TC964",
        "Title": "Maintain session during navigation",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Navigate between pages within the application  2. Verify session remains active",
        "Expected Result": "Session should be maintained during page navigation"
      },
      {
        "ID": "TC965",
        "Title": "Extend session expiration time",
        "Test Data": {},
        "Preconditions": "Session is active",
        "Steps to Replicate": "1. Perform activity to extend session expiration  2. Verify session expiration time is extended",
        "Expected Result": "Session expiration time should be extended after activity"
      },
      {
        "ID": "TC966",
        "Title": "Handle session expiration gracefully",
        "Test Data": {},
        "Preconditions": "Session has expired",
        "Steps to Replicate": "1. Wait for session to expire  2. Attempt to perform action requiring session  3. Verify error handling and session re-establishment",
        "Expected Result": "User should be prompted to log in again after session expiration"
      },
      {
        "ID": "TC967",
        "Title": "Handle session timeout warnings",
        "Test Data": {},
        "Preconditions": "Session expiration warning feature is implemented",
        "Steps to Replicate": "1. Wait for session timeout warning to appear  2. Verify warning message and options available",
        "Expected Result": "User should receive warning before session expires"
      },
      {
        "ID": "TC968",
        "Title": "Delete session on logout",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Initiate logout process  2. Verify session deletion",
        "Expected Result": "Session should be deleted upon user logout"
      },
      {
        "ID": "TC969",
        "Title": "Validate session integrity",
        "Test Data": {},
        "Preconditions": "Session is active",
        "Steps to Replicate": "1. Access and validate session data  2. Verify session integrity",
        "Expected Result": "Session data should remain intact and accurate"
      },
      {
        "ID": "TC970",
        "Title": "Handle session hijacking attempts",
        "Test Data": {},
        "Preconditions": "Session hijacking simulation tools available",
        "Steps to Replicate": "1. Simulate session hijacking attempt  2. Verify security measures and session recovery",
        "Expected Result": "Session hijacking attempt should be detected and mitigated"
      },
      {
        "ID": "TC971",
        "Title": "Maintain session across multiple tabs",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Open multiple tabs within the same browser session  2. Verify session consistency across tabs",
        "Expected Result": "Session should be maintained consistently across multiple browser tabs"
      },
      {
        "ID": "TC972",
        "Title": "Clear session cookies on browser close",
        "Test Data": {},
        "Preconditions": "Session cookies are stored in browser",
        "Steps to Replicate": "1. Close browser window or session  2. Verify session cookies are cleared",
        "Expected Result": "Session cookies should be deleted upon browser close"
      },
      {
        "ID": "TC973",
        "Title": "Handle session expiration during activity",
        "Test Data": {},
        "Preconditions": "Session is about to expire",
        "Steps to Replicate": "1. Perform activity close to session expiration  2. Verify session expiration and recovery process",
        "Expected Result": "User should be prompted to refresh session or log in again"
      },
      {
        "ID": "TC974",
        "Title": "Test session timeout settings",
        "Test Data": {},
        "Preconditions": "Session timeout settings are configurable",
        "Steps to Replicate": "1. Adjust session timeout settings  2. Wait for session to timeout based on new settings  3. Verify session behavior",
        "Expected Result": "Session should timeout based on configured settings"
      },
      {
        "ID": "TC975",
        "Title": "Handle session invalidation on user logout",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Log out user from application  2. Verify session is invalidated",
        "Expected Result": "Session should be invalidated immediately upon user logout"
      },
      {
        "ID": "TC976",
        "Title": "Test session regeneration on authentication",
        "Test Data": {},
        "Preconditions": "Session regeneration feature is implemented",
        "Steps to Replicate": "1. Perform authentication with existing session  2. Verify session regeneration process",
        "Expected Result": "Session should be regenerated upon successful authentication"
      },
      {
        "ID": "TC977",
        "Title": "Test session cookie encryption",
        "Test Data": {},
        "Preconditions": "Session cookies are stored in browser",
        "Steps to Replicate": "1. Access session cookie data in browser  2. Verify cookie data encryption",
        "Expected Result": "Session cookie data should be securely encrypted"
      },
      {
        "ID": "TC978",
        "Title": "Test session cookie integrity",
        "Test Data": {},
        "Preconditions": "Session cookies are stored in browser",
        "Steps to Replicate": "1. Manipulate session cookie data in browser  2. Verify cookie data integrity checks",
        "Expected Result": "Session cookie data integrity should be maintained"
      },
      {
        "ID": "TC979",
        "Title": "Test session cookie persistence",
        "Test Data": {},
        "Preconditions": "Session cookies are stored in browser",
        "Steps to Replicate": "1. Close browser and reopen  2. Verify session cookie persistence",
        "Expected Result": "Session cookies should persist across browser sessions"
      },
      {
        "ID": "TC980",
        "Title": "Test session expiration notification",
        "Test Data": {},
        "Preconditions": "Session expiration notification feature is implemented",
        "Steps to Replicate": "1. Wait for session expiration notification  2. Verify notification appearance and options available",
        "Expected Result": "User should receive notification before session expires"
      },
      {
        "ID": "TC981",
        "Title": "Test session token regeneration on access",
        "Test Data": {},
        "Preconditions": "Session token regeneration feature is implemented",
        "Steps to Replicate": "1. Access application with existing session token  2. Verify session token regeneration process",
        "Expected Result": "Session token should be regenerated on access"
      },
      {
        "ID": "TC982",
        "Title": "Test session timeout during idle time",
        "Test Data": {},
        "Preconditions": "Session timeout settings are configured",
        "Steps to Replicate": "1. Stay idle for configured session timeout duration  2. Verify session timeout behavior",
        "Expected Result": "Session should timeout after configured idle time"
      },
      {
        "ID": "TC983",
        "Title": "Test session cookie deletion on user logout",
        "Test Data": {},
        "Preconditions": "User is logged in",
        "Steps to Replicate": "1. Log out user from application  2. Verify session cookies are deleted",
        "Expected Result": "Session cookies should be deleted upon user logout"
      },
      {
        "ID": "TC984",
        "Title": "Test session timeout reset on activity",
        "Test Data": {},
        "Preconditions": "Session timeout settings are configured",
        "Steps to Replicate": "1. Perform activity to reset session timeout countdown  2. Verify session timeout countdown reset",
        "Expected Result": "Session timeout countdown should be reset after activity"
      },
      {
        "ID": "TC985",
        "Title": "Add new book to library",
        "Test Data": {
            "Book Title": "Example Book",
            "Author": "John Doe",
            "ISBN": "978-3-16-148410-0",
            "Genre": "Fiction"
        },
        "Preconditions": "Library system is accessible and logged in as administrator",
        "Steps to Replicate": [
            "Navigate to 'Add New Book' section",
            "Enter book details (title, author, ISBN, genre)",
            "Click 'Save' button"
        ],
        "Expected Result": "Book 'Example Book' is successfully added to the library"
    },
    {
        "ID": "TC986",
        "Title": "Search for a book by title",
        "Test Data": {
            "Search Query": "Example Book"
        },
        "Preconditions": "Library system is accessible and contains books",
        "Steps to Replicate": [
            "Navigate to 'Search Books' section",
            "Enter 'Example Book' in search field",
            "Click 'Search' button"
        ],
        "Expected Result": "Book 'Example Book' is displayed in search results"
    },
    {
        "ID": "TC987",
        "Title": "Edit book information",
        "Test Data": {
            "Book Title": "Example Book",
            "New Author": "Jane Smith"
        },
        "Preconditions": "Library system is accessible and book 'Example Book' exists",
        "Steps to Replicate": [
            "Navigate to 'Edit Book' section",
            "Find and select 'Example Book'",
            "Update author name to 'Jane Smith'",
            "Click 'Save' button"
        ],
        "Expected Result": "Book information for 'Example Book' is successfully updated with new author"
    },
    {
        "ID": "TC988",
        "Title": "Delete a book from library",
        "Test Data": {
            "Book Title": "Example Book"
        },
        "Preconditions": "Library system is accessible and book 'Example Book' exists",
        "Steps to Replicate": [
            "Navigate to 'Delete Book' section",
            "Find and select 'Example Book'",
            "Confirm deletion when prompted"
        ],
        "Expected Result": "Book 'Example Book' is successfully deleted from the library"
    },
    {
        "ID": "TC989",
        "Title": "Check book availability",
        "Test Data": {
            "Book Title": "Example Book"
        },
        "Preconditions": "Library system is accessible and book 'Example Book' exists",
        "Steps to Replicate": [
            "Navigate to 'Book Availability' section",
            "Enter 'Example Book' in search field",
            "Click 'Check Availability' button"
        ],
        "Expected Result": "Availability status of 'Example Book' is displayed"
    },
    {
        "ID": "TC990",
        "Title": "Add new member to library",
        "Test Data": {
            "Member Name": "Jane Doe",
            "Member ID": "JD123",
            "Member Type": "Student"
        },
        "Preconditions": "Library system is accessible and logged in as administrator",
        "Steps to Replicate": [
            "Navigate to 'Add New Member' section",
            "Enter member details (name, ID, type)",
            "Click 'Save' button"
        ],
        "Expected Result": "Member 'Jane Doe' with ID 'JD123' is successfully added to the library"
    },
    {
        "ID": "TC991",
        "Title": "Search for a member by ID",
        "Test Data": {
            "Search Query": "JD123"
        },
        "Preconditions": "Library system is accessible and contains members",
        "Steps to Replicate": [
            "Navigate to 'Search Members' section",
            "Enter 'JD123' in search field",
            "Click 'Search' button"
        ],
        "Expected Result": "Member with ID 'JD123' is displayed in search results"
    },
    {
        "ID": "TC992",
        "Title": "Edit member information",
        "Test Data": {
            "Member ID": "JD123",
            "New Name": "Jane Smith"
        },
        "Preconditions": "Library system is accessible and member with ID 'JD123' exists",
        "Steps to Replicate": [
            "Navigate to 'Edit Member' section",
            "Find and select member with ID 'JD123'",
            "Update name to 'Jane Smith'",
            "Click 'Save' button"
        ],
        "Expected Result": "Member information for ID 'JD123' is successfully updated with new name"
    },
    {
        "ID": "TC993",
        "Title": "Delete a member from library",
        "Test Data": {
            "Member ID": "JD123"
        },
        "Preconditions": "Library system is accessible and member with ID 'JD123' exists",
        "Steps to Replicate": [
            "Navigate to 'Delete Member' section",
            "Find and select member with ID 'JD123'",
            "Confirm deletion when prompted"
        ],
        "Expected Result": "Member with ID 'JD123' is successfully deleted from the library"
    },
    {
        "ID": "TC994",
        "Title": "Check member status",
        "Test Data": {
            "Member ID": "JD123"
        },
        "Preconditions": "Library system is accessible and member with ID 'JD123' exists",
        "Steps to Replicate": [
            "Navigate to 'Member Status' section",
            "Enter 'JD123' in search field",
            "Click 'Check Status' button"
        ],
        "Expected Result": "Status of member with ID 'JD123' is displayed"
    },
    {
        "ID": "TC995",
        "Title": "Generate library report",
        "Test Data": {
            "Report Type": "Monthly"
        },
        "Preconditions": "Library system is accessible",
        "Steps to Replicate": [
            "Navigate to 'Generate Report' section",
            "Select 'Monthly' as report type",
            "Click 'Generate' button"
        ],
        "Expected Result": "Monthly library report is generated successfully"
    },
    {
      "ID": "TC996",
      "Title": "Make outbound call to a valid number",
      "Test Data": {
        "Phone Number": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer section.",
        "Enter the phone number in the dialer interface.",
        "Click on the 'Call' button.",
        "Observe the call status."
      ],
      "Expected Result": "The call is successfully connected to the given phone number."
    },
    {
      "ID": "TC997",
      "Title": "Make outbound call to an invalid number",
      "Test Data": {
        "Phone Number": "+9876543210"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer section.",
        "Enter the invalid phone number in the dialer interface.",
        "Click on the 'Call' button.",
        "Observe the call status."
      ],
      "Expected Result": "The system should display an error indicating that the number is invalid."
    },
    {
      "ID": "TC998",
      "Title": "Receive inbound call",
      "Test Data": {
        "Caller ID": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Ensure the system is set to receive inbound calls.",
        "Simulate an inbound call to the user's assigned number.",
        "Observe the call notification and interface."
      ],
      "Expected Result": "The system should display an incoming call notification and allow the user to answer or reject the call."
    },
    {
      "ID": "TC999",
      "Title": "Voicemail handling",
      "Test Data": {
        "Phone Number": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer section.",
        "Call a number which is set to voicemail.",
        "Observe the call status and response."
      ],
      "Expected Result": "The call should be redirected to voicemail, and the user should be able to leave a message."
    },
    {
      "ID": "TC1000",
      "Title": "Call transfer to another user",
      "Test Data": {
        "Phone Number": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer section.",
        "Initiate a call to the specified number.",
        "During the call, transfer the call to another user.",
        "Observe the transfer process and call status."
      ],
      "Expected Result": "The call should be successfully transferred to the specified user."
    },
    {
      "ID": "TC1001",
      "Title": "Call hold and resume",
      "Test Data": {
        "Phone Number": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer section.",
        "Initiate a call to the specified number.",
        "During the call, put the call on hold.",
        "Resume the call from hold state.",
        "Observe the call status."
      ],
      "Expected Result": "The call should successfully go on hold and resume without any disruption."
    },
    {
      "ID": "TC1002",
      "Title": "Call mute and unmute",
      "Test Data": {
        "Phone Number": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer section.",
        "Initiate a call to the specified number.",
        "During the call, mute the call.",
        "Unmute the call after some time.",
        "Observe the call status."
      ],
      "Expected Result": "The call audio should be muted and then unmuted without any issue."
    },
    {
      "ID": "TC1003",
      "Title": "Conference call initiation",
      "Test Data": {
        "Participants": ["User A", "User B"]
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer section.",
        "Initiate a call to the first participant.",
        "During the call, add the second participant to create a conference call.",
        "Observe the conference call interface and participants."
      ],
      "Expected Result": "The call should successfully convert into a conference call with both participants connected."
    },
    {
      "ID": "TC1004",
      "Title": "Call forwarding setup",
      "Test Data": {
        "Forwarding Number": "+9876543210"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the dialer settings.",
        "Configure call forwarding to the specified number.",
        "Initiate a call to the user's number from another device.",
        "Observe the call forwarding process."
      ],
      "Expected Result": "The incoming call should be forwarded to the specified number as configured."
    },
    {
      "ID": "TC1005",
      "Title": "Missed call handling",
      "Test Data": {
        "Caller ID": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Ensure there is an incoming call to the user's number.",
        "Do not answer the call within the configured time.",
        "Observe the missed call notification."
      ],
      "Expected Result": "The system should display a missed call notification for the user."
    },
    {
      "ID": "TC1006",
      "Title": "Call logging and history",
      "Test Data": {
        "Phone Number": "+1234567890"
      },
      "Preconditions": "User is logged into the system and has access to the dialer feature.",
      "Steps to Replicate": [
        "Navigate to the call history section.",
        "Check for the log of recent calls made and received.",
        "Verify the details of the call log."
      ],
      "Expected Result": "The call log should accurately record the details of recent calls made and received."
    }
]